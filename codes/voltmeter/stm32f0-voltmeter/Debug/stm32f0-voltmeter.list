
stm32f0-voltmeter.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000000c0  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00005fe8  080000c0  080000c0  000100c0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000010b0  080060a8  080060a8  000160a8  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08007158  08007158  000201e4  2**0
                  CONTENTS
  4 .ARM          00000000  08007158  08007158  000201e4  2**0
                  CONTENTS
  5 .preinit_array 00000000  08007158  08007158  000201e4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08007158  08007158  00017158  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  0800715c  0800715c  0001715c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         000001e4  20000000  08007160  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000070c  200001e4  08007344  000201e4  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  200008f0  08007344  000208f0  2**0
                  ALLOC
 11 .ARM.attributes 00000028  00000000  00000000  000201e4  2**0
                  CONTENTS, READONLY
 12 .debug_info   0000cc35  00000000  00000000  0002020c  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_abbrev 0000246e  00000000  00000000  0002ce41  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_loc    0000633f  00000000  00000000  0002f2af  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_aranges 00000808  00000000  00000000  000355f0  2**3
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_ranges 000009e8  00000000  00000000  00035df8  2**3
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_macro  0001541d  00000000  00000000  000367e0  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_line   00009c7e  00000000  00000000  0004bbfd  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .debug_str    00071289  00000000  00000000  0005587b  2**0
                  CONTENTS, READONLY, DEBUGGING
 20 .comment      0000007b  00000000  00000000  000c6b04  2**0
                  CONTENTS, READONLY
 21 .debug_frame  000020ec  00000000  00000000  000c6b80  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

080000c0 <__do_global_dtors_aux>:
 80000c0:	b510      	push	{r4, lr}
 80000c2:	4c06      	ldr	r4, [pc, #24]	; (80000dc <__do_global_dtors_aux+0x1c>)
 80000c4:	7823      	ldrb	r3, [r4, #0]
 80000c6:	2b00      	cmp	r3, #0
 80000c8:	d107      	bne.n	80000da <__do_global_dtors_aux+0x1a>
 80000ca:	4b05      	ldr	r3, [pc, #20]	; (80000e0 <__do_global_dtors_aux+0x20>)
 80000cc:	2b00      	cmp	r3, #0
 80000ce:	d002      	beq.n	80000d6 <__do_global_dtors_aux+0x16>
 80000d0:	4804      	ldr	r0, [pc, #16]	; (80000e4 <__do_global_dtors_aux+0x24>)
 80000d2:	e000      	b.n	80000d6 <__do_global_dtors_aux+0x16>
 80000d4:	bf00      	nop
 80000d6:	2301      	movs	r3, #1
 80000d8:	7023      	strb	r3, [r4, #0]
 80000da:	bd10      	pop	{r4, pc}
 80000dc:	200001e4 	.word	0x200001e4
 80000e0:	00000000 	.word	0x00000000
 80000e4:	08006090 	.word	0x08006090

080000e8 <frame_dummy>:
 80000e8:	4b04      	ldr	r3, [pc, #16]	; (80000fc <frame_dummy+0x14>)
 80000ea:	b510      	push	{r4, lr}
 80000ec:	2b00      	cmp	r3, #0
 80000ee:	d003      	beq.n	80000f8 <frame_dummy+0x10>
 80000f0:	4903      	ldr	r1, [pc, #12]	; (8000100 <frame_dummy+0x18>)
 80000f2:	4804      	ldr	r0, [pc, #16]	; (8000104 <frame_dummy+0x1c>)
 80000f4:	e000      	b.n	80000f8 <frame_dummy+0x10>
 80000f6:	bf00      	nop
 80000f8:	bd10      	pop	{r4, pc}
 80000fa:	46c0      	nop			; (mov r8, r8)
 80000fc:	00000000 	.word	0x00000000
 8000100:	200001e8 	.word	0x200001e8
 8000104:	08006090 	.word	0x08006090

08000108 <strlen>:
 8000108:	2300      	movs	r3, #0
 800010a:	5cc2      	ldrb	r2, [r0, r3]
 800010c:	3301      	adds	r3, #1
 800010e:	2a00      	cmp	r2, #0
 8000110:	d1fb      	bne.n	800010a <strlen+0x2>
 8000112:	1e58      	subs	r0, r3, #1
 8000114:	4770      	bx	lr
	...

08000118 <__gnu_thumb1_case_uqi>:
 8000118:	b402      	push	{r1}
 800011a:	4671      	mov	r1, lr
 800011c:	0849      	lsrs	r1, r1, #1
 800011e:	0049      	lsls	r1, r1, #1
 8000120:	5c09      	ldrb	r1, [r1, r0]
 8000122:	0049      	lsls	r1, r1, #1
 8000124:	448e      	add	lr, r1
 8000126:	bc02      	pop	{r1}
 8000128:	4770      	bx	lr
 800012a:	46c0      	nop			; (mov r8, r8)

0800012c <__udivsi3>:
 800012c:	2200      	movs	r2, #0
 800012e:	0843      	lsrs	r3, r0, #1
 8000130:	428b      	cmp	r3, r1
 8000132:	d374      	bcc.n	800021e <__udivsi3+0xf2>
 8000134:	0903      	lsrs	r3, r0, #4
 8000136:	428b      	cmp	r3, r1
 8000138:	d35f      	bcc.n	80001fa <__udivsi3+0xce>
 800013a:	0a03      	lsrs	r3, r0, #8
 800013c:	428b      	cmp	r3, r1
 800013e:	d344      	bcc.n	80001ca <__udivsi3+0x9e>
 8000140:	0b03      	lsrs	r3, r0, #12
 8000142:	428b      	cmp	r3, r1
 8000144:	d328      	bcc.n	8000198 <__udivsi3+0x6c>
 8000146:	0c03      	lsrs	r3, r0, #16
 8000148:	428b      	cmp	r3, r1
 800014a:	d30d      	bcc.n	8000168 <__udivsi3+0x3c>
 800014c:	22ff      	movs	r2, #255	; 0xff
 800014e:	0209      	lsls	r1, r1, #8
 8000150:	ba12      	rev	r2, r2
 8000152:	0c03      	lsrs	r3, r0, #16
 8000154:	428b      	cmp	r3, r1
 8000156:	d302      	bcc.n	800015e <__udivsi3+0x32>
 8000158:	1212      	asrs	r2, r2, #8
 800015a:	0209      	lsls	r1, r1, #8
 800015c:	d065      	beq.n	800022a <__udivsi3+0xfe>
 800015e:	0b03      	lsrs	r3, r0, #12
 8000160:	428b      	cmp	r3, r1
 8000162:	d319      	bcc.n	8000198 <__udivsi3+0x6c>
 8000164:	e000      	b.n	8000168 <__udivsi3+0x3c>
 8000166:	0a09      	lsrs	r1, r1, #8
 8000168:	0bc3      	lsrs	r3, r0, #15
 800016a:	428b      	cmp	r3, r1
 800016c:	d301      	bcc.n	8000172 <__udivsi3+0x46>
 800016e:	03cb      	lsls	r3, r1, #15
 8000170:	1ac0      	subs	r0, r0, r3
 8000172:	4152      	adcs	r2, r2
 8000174:	0b83      	lsrs	r3, r0, #14
 8000176:	428b      	cmp	r3, r1
 8000178:	d301      	bcc.n	800017e <__udivsi3+0x52>
 800017a:	038b      	lsls	r3, r1, #14
 800017c:	1ac0      	subs	r0, r0, r3
 800017e:	4152      	adcs	r2, r2
 8000180:	0b43      	lsrs	r3, r0, #13
 8000182:	428b      	cmp	r3, r1
 8000184:	d301      	bcc.n	800018a <__udivsi3+0x5e>
 8000186:	034b      	lsls	r3, r1, #13
 8000188:	1ac0      	subs	r0, r0, r3
 800018a:	4152      	adcs	r2, r2
 800018c:	0b03      	lsrs	r3, r0, #12
 800018e:	428b      	cmp	r3, r1
 8000190:	d301      	bcc.n	8000196 <__udivsi3+0x6a>
 8000192:	030b      	lsls	r3, r1, #12
 8000194:	1ac0      	subs	r0, r0, r3
 8000196:	4152      	adcs	r2, r2
 8000198:	0ac3      	lsrs	r3, r0, #11
 800019a:	428b      	cmp	r3, r1
 800019c:	d301      	bcc.n	80001a2 <__udivsi3+0x76>
 800019e:	02cb      	lsls	r3, r1, #11
 80001a0:	1ac0      	subs	r0, r0, r3
 80001a2:	4152      	adcs	r2, r2
 80001a4:	0a83      	lsrs	r3, r0, #10
 80001a6:	428b      	cmp	r3, r1
 80001a8:	d301      	bcc.n	80001ae <__udivsi3+0x82>
 80001aa:	028b      	lsls	r3, r1, #10
 80001ac:	1ac0      	subs	r0, r0, r3
 80001ae:	4152      	adcs	r2, r2
 80001b0:	0a43      	lsrs	r3, r0, #9
 80001b2:	428b      	cmp	r3, r1
 80001b4:	d301      	bcc.n	80001ba <__udivsi3+0x8e>
 80001b6:	024b      	lsls	r3, r1, #9
 80001b8:	1ac0      	subs	r0, r0, r3
 80001ba:	4152      	adcs	r2, r2
 80001bc:	0a03      	lsrs	r3, r0, #8
 80001be:	428b      	cmp	r3, r1
 80001c0:	d301      	bcc.n	80001c6 <__udivsi3+0x9a>
 80001c2:	020b      	lsls	r3, r1, #8
 80001c4:	1ac0      	subs	r0, r0, r3
 80001c6:	4152      	adcs	r2, r2
 80001c8:	d2cd      	bcs.n	8000166 <__udivsi3+0x3a>
 80001ca:	09c3      	lsrs	r3, r0, #7
 80001cc:	428b      	cmp	r3, r1
 80001ce:	d301      	bcc.n	80001d4 <__udivsi3+0xa8>
 80001d0:	01cb      	lsls	r3, r1, #7
 80001d2:	1ac0      	subs	r0, r0, r3
 80001d4:	4152      	adcs	r2, r2
 80001d6:	0983      	lsrs	r3, r0, #6
 80001d8:	428b      	cmp	r3, r1
 80001da:	d301      	bcc.n	80001e0 <__udivsi3+0xb4>
 80001dc:	018b      	lsls	r3, r1, #6
 80001de:	1ac0      	subs	r0, r0, r3
 80001e0:	4152      	adcs	r2, r2
 80001e2:	0943      	lsrs	r3, r0, #5
 80001e4:	428b      	cmp	r3, r1
 80001e6:	d301      	bcc.n	80001ec <__udivsi3+0xc0>
 80001e8:	014b      	lsls	r3, r1, #5
 80001ea:	1ac0      	subs	r0, r0, r3
 80001ec:	4152      	adcs	r2, r2
 80001ee:	0903      	lsrs	r3, r0, #4
 80001f0:	428b      	cmp	r3, r1
 80001f2:	d301      	bcc.n	80001f8 <__udivsi3+0xcc>
 80001f4:	010b      	lsls	r3, r1, #4
 80001f6:	1ac0      	subs	r0, r0, r3
 80001f8:	4152      	adcs	r2, r2
 80001fa:	08c3      	lsrs	r3, r0, #3
 80001fc:	428b      	cmp	r3, r1
 80001fe:	d301      	bcc.n	8000204 <__udivsi3+0xd8>
 8000200:	00cb      	lsls	r3, r1, #3
 8000202:	1ac0      	subs	r0, r0, r3
 8000204:	4152      	adcs	r2, r2
 8000206:	0883      	lsrs	r3, r0, #2
 8000208:	428b      	cmp	r3, r1
 800020a:	d301      	bcc.n	8000210 <__udivsi3+0xe4>
 800020c:	008b      	lsls	r3, r1, #2
 800020e:	1ac0      	subs	r0, r0, r3
 8000210:	4152      	adcs	r2, r2
 8000212:	0843      	lsrs	r3, r0, #1
 8000214:	428b      	cmp	r3, r1
 8000216:	d301      	bcc.n	800021c <__udivsi3+0xf0>
 8000218:	004b      	lsls	r3, r1, #1
 800021a:	1ac0      	subs	r0, r0, r3
 800021c:	4152      	adcs	r2, r2
 800021e:	1a41      	subs	r1, r0, r1
 8000220:	d200      	bcs.n	8000224 <__udivsi3+0xf8>
 8000222:	4601      	mov	r1, r0
 8000224:	4152      	adcs	r2, r2
 8000226:	4610      	mov	r0, r2
 8000228:	4770      	bx	lr
 800022a:	e7ff      	b.n	800022c <__udivsi3+0x100>
 800022c:	b501      	push	{r0, lr}
 800022e:	2000      	movs	r0, #0
 8000230:	f000 f8f0 	bl	8000414 <__aeabi_idiv0>
 8000234:	bd02      	pop	{r1, pc}
 8000236:	46c0      	nop			; (mov r8, r8)

08000238 <__aeabi_uidivmod>:
 8000238:	2900      	cmp	r1, #0
 800023a:	d0f7      	beq.n	800022c <__udivsi3+0x100>
 800023c:	e776      	b.n	800012c <__udivsi3>
 800023e:	4770      	bx	lr

08000240 <__divsi3>:
 8000240:	4603      	mov	r3, r0
 8000242:	430b      	orrs	r3, r1
 8000244:	d47f      	bmi.n	8000346 <__divsi3+0x106>
 8000246:	2200      	movs	r2, #0
 8000248:	0843      	lsrs	r3, r0, #1
 800024a:	428b      	cmp	r3, r1
 800024c:	d374      	bcc.n	8000338 <__divsi3+0xf8>
 800024e:	0903      	lsrs	r3, r0, #4
 8000250:	428b      	cmp	r3, r1
 8000252:	d35f      	bcc.n	8000314 <__divsi3+0xd4>
 8000254:	0a03      	lsrs	r3, r0, #8
 8000256:	428b      	cmp	r3, r1
 8000258:	d344      	bcc.n	80002e4 <__divsi3+0xa4>
 800025a:	0b03      	lsrs	r3, r0, #12
 800025c:	428b      	cmp	r3, r1
 800025e:	d328      	bcc.n	80002b2 <__divsi3+0x72>
 8000260:	0c03      	lsrs	r3, r0, #16
 8000262:	428b      	cmp	r3, r1
 8000264:	d30d      	bcc.n	8000282 <__divsi3+0x42>
 8000266:	22ff      	movs	r2, #255	; 0xff
 8000268:	0209      	lsls	r1, r1, #8
 800026a:	ba12      	rev	r2, r2
 800026c:	0c03      	lsrs	r3, r0, #16
 800026e:	428b      	cmp	r3, r1
 8000270:	d302      	bcc.n	8000278 <__divsi3+0x38>
 8000272:	1212      	asrs	r2, r2, #8
 8000274:	0209      	lsls	r1, r1, #8
 8000276:	d065      	beq.n	8000344 <__divsi3+0x104>
 8000278:	0b03      	lsrs	r3, r0, #12
 800027a:	428b      	cmp	r3, r1
 800027c:	d319      	bcc.n	80002b2 <__divsi3+0x72>
 800027e:	e000      	b.n	8000282 <__divsi3+0x42>
 8000280:	0a09      	lsrs	r1, r1, #8
 8000282:	0bc3      	lsrs	r3, r0, #15
 8000284:	428b      	cmp	r3, r1
 8000286:	d301      	bcc.n	800028c <__divsi3+0x4c>
 8000288:	03cb      	lsls	r3, r1, #15
 800028a:	1ac0      	subs	r0, r0, r3
 800028c:	4152      	adcs	r2, r2
 800028e:	0b83      	lsrs	r3, r0, #14
 8000290:	428b      	cmp	r3, r1
 8000292:	d301      	bcc.n	8000298 <__divsi3+0x58>
 8000294:	038b      	lsls	r3, r1, #14
 8000296:	1ac0      	subs	r0, r0, r3
 8000298:	4152      	adcs	r2, r2
 800029a:	0b43      	lsrs	r3, r0, #13
 800029c:	428b      	cmp	r3, r1
 800029e:	d301      	bcc.n	80002a4 <__divsi3+0x64>
 80002a0:	034b      	lsls	r3, r1, #13
 80002a2:	1ac0      	subs	r0, r0, r3
 80002a4:	4152      	adcs	r2, r2
 80002a6:	0b03      	lsrs	r3, r0, #12
 80002a8:	428b      	cmp	r3, r1
 80002aa:	d301      	bcc.n	80002b0 <__divsi3+0x70>
 80002ac:	030b      	lsls	r3, r1, #12
 80002ae:	1ac0      	subs	r0, r0, r3
 80002b0:	4152      	adcs	r2, r2
 80002b2:	0ac3      	lsrs	r3, r0, #11
 80002b4:	428b      	cmp	r3, r1
 80002b6:	d301      	bcc.n	80002bc <__divsi3+0x7c>
 80002b8:	02cb      	lsls	r3, r1, #11
 80002ba:	1ac0      	subs	r0, r0, r3
 80002bc:	4152      	adcs	r2, r2
 80002be:	0a83      	lsrs	r3, r0, #10
 80002c0:	428b      	cmp	r3, r1
 80002c2:	d301      	bcc.n	80002c8 <__divsi3+0x88>
 80002c4:	028b      	lsls	r3, r1, #10
 80002c6:	1ac0      	subs	r0, r0, r3
 80002c8:	4152      	adcs	r2, r2
 80002ca:	0a43      	lsrs	r3, r0, #9
 80002cc:	428b      	cmp	r3, r1
 80002ce:	d301      	bcc.n	80002d4 <__divsi3+0x94>
 80002d0:	024b      	lsls	r3, r1, #9
 80002d2:	1ac0      	subs	r0, r0, r3
 80002d4:	4152      	adcs	r2, r2
 80002d6:	0a03      	lsrs	r3, r0, #8
 80002d8:	428b      	cmp	r3, r1
 80002da:	d301      	bcc.n	80002e0 <__divsi3+0xa0>
 80002dc:	020b      	lsls	r3, r1, #8
 80002de:	1ac0      	subs	r0, r0, r3
 80002e0:	4152      	adcs	r2, r2
 80002e2:	d2cd      	bcs.n	8000280 <__divsi3+0x40>
 80002e4:	09c3      	lsrs	r3, r0, #7
 80002e6:	428b      	cmp	r3, r1
 80002e8:	d301      	bcc.n	80002ee <__divsi3+0xae>
 80002ea:	01cb      	lsls	r3, r1, #7
 80002ec:	1ac0      	subs	r0, r0, r3
 80002ee:	4152      	adcs	r2, r2
 80002f0:	0983      	lsrs	r3, r0, #6
 80002f2:	428b      	cmp	r3, r1
 80002f4:	d301      	bcc.n	80002fa <__divsi3+0xba>
 80002f6:	018b      	lsls	r3, r1, #6
 80002f8:	1ac0      	subs	r0, r0, r3
 80002fa:	4152      	adcs	r2, r2
 80002fc:	0943      	lsrs	r3, r0, #5
 80002fe:	428b      	cmp	r3, r1
 8000300:	d301      	bcc.n	8000306 <__divsi3+0xc6>
 8000302:	014b      	lsls	r3, r1, #5
 8000304:	1ac0      	subs	r0, r0, r3
 8000306:	4152      	adcs	r2, r2
 8000308:	0903      	lsrs	r3, r0, #4
 800030a:	428b      	cmp	r3, r1
 800030c:	d301      	bcc.n	8000312 <__divsi3+0xd2>
 800030e:	010b      	lsls	r3, r1, #4
 8000310:	1ac0      	subs	r0, r0, r3
 8000312:	4152      	adcs	r2, r2
 8000314:	08c3      	lsrs	r3, r0, #3
 8000316:	428b      	cmp	r3, r1
 8000318:	d301      	bcc.n	800031e <__divsi3+0xde>
 800031a:	00cb      	lsls	r3, r1, #3
 800031c:	1ac0      	subs	r0, r0, r3
 800031e:	4152      	adcs	r2, r2
 8000320:	0883      	lsrs	r3, r0, #2
 8000322:	428b      	cmp	r3, r1
 8000324:	d301      	bcc.n	800032a <__divsi3+0xea>
 8000326:	008b      	lsls	r3, r1, #2
 8000328:	1ac0      	subs	r0, r0, r3
 800032a:	4152      	adcs	r2, r2
 800032c:	0843      	lsrs	r3, r0, #1
 800032e:	428b      	cmp	r3, r1
 8000330:	d301      	bcc.n	8000336 <__divsi3+0xf6>
 8000332:	004b      	lsls	r3, r1, #1
 8000334:	1ac0      	subs	r0, r0, r3
 8000336:	4152      	adcs	r2, r2
 8000338:	1a41      	subs	r1, r0, r1
 800033a:	d200      	bcs.n	800033e <__divsi3+0xfe>
 800033c:	4601      	mov	r1, r0
 800033e:	4152      	adcs	r2, r2
 8000340:	4610      	mov	r0, r2
 8000342:	4770      	bx	lr
 8000344:	e05d      	b.n	8000402 <__divsi3+0x1c2>
 8000346:	0fca      	lsrs	r2, r1, #31
 8000348:	d000      	beq.n	800034c <__divsi3+0x10c>
 800034a:	4249      	negs	r1, r1
 800034c:	1003      	asrs	r3, r0, #32
 800034e:	d300      	bcc.n	8000352 <__divsi3+0x112>
 8000350:	4240      	negs	r0, r0
 8000352:	4053      	eors	r3, r2
 8000354:	2200      	movs	r2, #0
 8000356:	469c      	mov	ip, r3
 8000358:	0903      	lsrs	r3, r0, #4
 800035a:	428b      	cmp	r3, r1
 800035c:	d32d      	bcc.n	80003ba <__divsi3+0x17a>
 800035e:	0a03      	lsrs	r3, r0, #8
 8000360:	428b      	cmp	r3, r1
 8000362:	d312      	bcc.n	800038a <__divsi3+0x14a>
 8000364:	22fc      	movs	r2, #252	; 0xfc
 8000366:	0189      	lsls	r1, r1, #6
 8000368:	ba12      	rev	r2, r2
 800036a:	0a03      	lsrs	r3, r0, #8
 800036c:	428b      	cmp	r3, r1
 800036e:	d30c      	bcc.n	800038a <__divsi3+0x14a>
 8000370:	0189      	lsls	r1, r1, #6
 8000372:	1192      	asrs	r2, r2, #6
 8000374:	428b      	cmp	r3, r1
 8000376:	d308      	bcc.n	800038a <__divsi3+0x14a>
 8000378:	0189      	lsls	r1, r1, #6
 800037a:	1192      	asrs	r2, r2, #6
 800037c:	428b      	cmp	r3, r1
 800037e:	d304      	bcc.n	800038a <__divsi3+0x14a>
 8000380:	0189      	lsls	r1, r1, #6
 8000382:	d03a      	beq.n	80003fa <__divsi3+0x1ba>
 8000384:	1192      	asrs	r2, r2, #6
 8000386:	e000      	b.n	800038a <__divsi3+0x14a>
 8000388:	0989      	lsrs	r1, r1, #6
 800038a:	09c3      	lsrs	r3, r0, #7
 800038c:	428b      	cmp	r3, r1
 800038e:	d301      	bcc.n	8000394 <__divsi3+0x154>
 8000390:	01cb      	lsls	r3, r1, #7
 8000392:	1ac0      	subs	r0, r0, r3
 8000394:	4152      	adcs	r2, r2
 8000396:	0983      	lsrs	r3, r0, #6
 8000398:	428b      	cmp	r3, r1
 800039a:	d301      	bcc.n	80003a0 <__divsi3+0x160>
 800039c:	018b      	lsls	r3, r1, #6
 800039e:	1ac0      	subs	r0, r0, r3
 80003a0:	4152      	adcs	r2, r2
 80003a2:	0943      	lsrs	r3, r0, #5
 80003a4:	428b      	cmp	r3, r1
 80003a6:	d301      	bcc.n	80003ac <__divsi3+0x16c>
 80003a8:	014b      	lsls	r3, r1, #5
 80003aa:	1ac0      	subs	r0, r0, r3
 80003ac:	4152      	adcs	r2, r2
 80003ae:	0903      	lsrs	r3, r0, #4
 80003b0:	428b      	cmp	r3, r1
 80003b2:	d301      	bcc.n	80003b8 <__divsi3+0x178>
 80003b4:	010b      	lsls	r3, r1, #4
 80003b6:	1ac0      	subs	r0, r0, r3
 80003b8:	4152      	adcs	r2, r2
 80003ba:	08c3      	lsrs	r3, r0, #3
 80003bc:	428b      	cmp	r3, r1
 80003be:	d301      	bcc.n	80003c4 <__divsi3+0x184>
 80003c0:	00cb      	lsls	r3, r1, #3
 80003c2:	1ac0      	subs	r0, r0, r3
 80003c4:	4152      	adcs	r2, r2
 80003c6:	0883      	lsrs	r3, r0, #2
 80003c8:	428b      	cmp	r3, r1
 80003ca:	d301      	bcc.n	80003d0 <__divsi3+0x190>
 80003cc:	008b      	lsls	r3, r1, #2
 80003ce:	1ac0      	subs	r0, r0, r3
 80003d0:	4152      	adcs	r2, r2
 80003d2:	d2d9      	bcs.n	8000388 <__divsi3+0x148>
 80003d4:	0843      	lsrs	r3, r0, #1
 80003d6:	428b      	cmp	r3, r1
 80003d8:	d301      	bcc.n	80003de <__divsi3+0x19e>
 80003da:	004b      	lsls	r3, r1, #1
 80003dc:	1ac0      	subs	r0, r0, r3
 80003de:	4152      	adcs	r2, r2
 80003e0:	1a41      	subs	r1, r0, r1
 80003e2:	d200      	bcs.n	80003e6 <__divsi3+0x1a6>
 80003e4:	4601      	mov	r1, r0
 80003e6:	4663      	mov	r3, ip
 80003e8:	4152      	adcs	r2, r2
 80003ea:	105b      	asrs	r3, r3, #1
 80003ec:	4610      	mov	r0, r2
 80003ee:	d301      	bcc.n	80003f4 <__divsi3+0x1b4>
 80003f0:	4240      	negs	r0, r0
 80003f2:	2b00      	cmp	r3, #0
 80003f4:	d500      	bpl.n	80003f8 <__divsi3+0x1b8>
 80003f6:	4249      	negs	r1, r1
 80003f8:	4770      	bx	lr
 80003fa:	4663      	mov	r3, ip
 80003fc:	105b      	asrs	r3, r3, #1
 80003fe:	d300      	bcc.n	8000402 <__divsi3+0x1c2>
 8000400:	4240      	negs	r0, r0
 8000402:	b501      	push	{r0, lr}
 8000404:	2000      	movs	r0, #0
 8000406:	f000 f805 	bl	8000414 <__aeabi_idiv0>
 800040a:	bd02      	pop	{r1, pc}

0800040c <__aeabi_idivmod>:
 800040c:	2900      	cmp	r1, #0
 800040e:	d0f8      	beq.n	8000402 <__divsi3+0x1c2>
 8000410:	e716      	b.n	8000240 <__divsi3>
 8000412:	4770      	bx	lr

08000414 <__aeabi_idiv0>:
 8000414:	4770      	bx	lr
 8000416:	46c0      	nop			; (mov r8, r8)

08000418 <__aeabi_cdrcmple>:
 8000418:	4684      	mov	ip, r0
 800041a:	1c10      	adds	r0, r2, #0
 800041c:	4662      	mov	r2, ip
 800041e:	468c      	mov	ip, r1
 8000420:	1c19      	adds	r1, r3, #0
 8000422:	4663      	mov	r3, ip
 8000424:	e000      	b.n	8000428 <__aeabi_cdcmpeq>
 8000426:	46c0      	nop			; (mov r8, r8)

08000428 <__aeabi_cdcmpeq>:
 8000428:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800042a:	f001 f863 	bl	80014f4 <__ledf2>
 800042e:	2800      	cmp	r0, #0
 8000430:	d401      	bmi.n	8000436 <__aeabi_cdcmpeq+0xe>
 8000432:	2100      	movs	r1, #0
 8000434:	42c8      	cmn	r0, r1
 8000436:	bd1f      	pop	{r0, r1, r2, r3, r4, pc}

08000438 <__aeabi_dcmpeq>:
 8000438:	b510      	push	{r4, lr}
 800043a:	f000 ffbb 	bl	80013b4 <__eqdf2>
 800043e:	4240      	negs	r0, r0
 8000440:	3001      	adds	r0, #1
 8000442:	bd10      	pop	{r4, pc}

08000444 <__aeabi_dcmplt>:
 8000444:	b510      	push	{r4, lr}
 8000446:	f001 f855 	bl	80014f4 <__ledf2>
 800044a:	2800      	cmp	r0, #0
 800044c:	db01      	blt.n	8000452 <__aeabi_dcmplt+0xe>
 800044e:	2000      	movs	r0, #0
 8000450:	bd10      	pop	{r4, pc}
 8000452:	2001      	movs	r0, #1
 8000454:	bd10      	pop	{r4, pc}
 8000456:	46c0      	nop			; (mov r8, r8)

08000458 <__aeabi_dcmple>:
 8000458:	b510      	push	{r4, lr}
 800045a:	f001 f84b 	bl	80014f4 <__ledf2>
 800045e:	2800      	cmp	r0, #0
 8000460:	dd01      	ble.n	8000466 <__aeabi_dcmple+0xe>
 8000462:	2000      	movs	r0, #0
 8000464:	bd10      	pop	{r4, pc}
 8000466:	2001      	movs	r0, #1
 8000468:	bd10      	pop	{r4, pc}
 800046a:	46c0      	nop			; (mov r8, r8)

0800046c <__aeabi_dcmpgt>:
 800046c:	b510      	push	{r4, lr}
 800046e:	f000 ffdd 	bl	800142c <__gedf2>
 8000472:	2800      	cmp	r0, #0
 8000474:	dc01      	bgt.n	800047a <__aeabi_dcmpgt+0xe>
 8000476:	2000      	movs	r0, #0
 8000478:	bd10      	pop	{r4, pc}
 800047a:	2001      	movs	r0, #1
 800047c:	bd10      	pop	{r4, pc}
 800047e:	46c0      	nop			; (mov r8, r8)

08000480 <__aeabi_dcmpge>:
 8000480:	b510      	push	{r4, lr}
 8000482:	f000 ffd3 	bl	800142c <__gedf2>
 8000486:	2800      	cmp	r0, #0
 8000488:	da01      	bge.n	800048e <__aeabi_dcmpge+0xe>
 800048a:	2000      	movs	r0, #0
 800048c:	bd10      	pop	{r4, pc}
 800048e:	2001      	movs	r0, #1
 8000490:	bd10      	pop	{r4, pc}
 8000492:	46c0      	nop			; (mov r8, r8)

08000494 <__aeabi_fmul>:
 8000494:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000496:	464e      	mov	r6, r9
 8000498:	4657      	mov	r7, sl
 800049a:	4645      	mov	r5, r8
 800049c:	46de      	mov	lr, fp
 800049e:	b5e0      	push	{r5, r6, r7, lr}
 80004a0:	0243      	lsls	r3, r0, #9
 80004a2:	0a5b      	lsrs	r3, r3, #9
 80004a4:	0045      	lsls	r5, r0, #1
 80004a6:	b083      	sub	sp, #12
 80004a8:	1c0f      	adds	r7, r1, #0
 80004aa:	4699      	mov	r9, r3
 80004ac:	0e2d      	lsrs	r5, r5, #24
 80004ae:	0fc6      	lsrs	r6, r0, #31
 80004b0:	2d00      	cmp	r5, #0
 80004b2:	d057      	beq.n	8000564 <__aeabi_fmul+0xd0>
 80004b4:	2dff      	cmp	r5, #255	; 0xff
 80004b6:	d024      	beq.n	8000502 <__aeabi_fmul+0x6e>
 80004b8:	2080      	movs	r0, #128	; 0x80
 80004ba:	00db      	lsls	r3, r3, #3
 80004bc:	04c0      	lsls	r0, r0, #19
 80004be:	4318      	orrs	r0, r3
 80004c0:	2300      	movs	r3, #0
 80004c2:	4681      	mov	r9, r0
 80004c4:	469a      	mov	sl, r3
 80004c6:	469b      	mov	fp, r3
 80004c8:	3d7f      	subs	r5, #127	; 0x7f
 80004ca:	027c      	lsls	r4, r7, #9
 80004cc:	007a      	lsls	r2, r7, #1
 80004ce:	0ffb      	lsrs	r3, r7, #31
 80004d0:	0a64      	lsrs	r4, r4, #9
 80004d2:	0e12      	lsrs	r2, r2, #24
 80004d4:	4698      	mov	r8, r3
 80004d6:	d023      	beq.n	8000520 <__aeabi_fmul+0x8c>
 80004d8:	2aff      	cmp	r2, #255	; 0xff
 80004da:	d04b      	beq.n	8000574 <__aeabi_fmul+0xe0>
 80004dc:	00e3      	lsls	r3, r4, #3
 80004de:	2480      	movs	r4, #128	; 0x80
 80004e0:	2000      	movs	r0, #0
 80004e2:	04e4      	lsls	r4, r4, #19
 80004e4:	3a7f      	subs	r2, #127	; 0x7f
 80004e6:	431c      	orrs	r4, r3
 80004e8:	18ad      	adds	r5, r5, r2
 80004ea:	1c6b      	adds	r3, r5, #1
 80004ec:	4647      	mov	r7, r8
 80004ee:	9301      	str	r3, [sp, #4]
 80004f0:	4653      	mov	r3, sl
 80004f2:	4077      	eors	r7, r6
 80004f4:	003a      	movs	r2, r7
 80004f6:	2b0f      	cmp	r3, #15
 80004f8:	d848      	bhi.n	800058c <__aeabi_fmul+0xf8>
 80004fa:	497d      	ldr	r1, [pc, #500]	; (80006f0 <__aeabi_fmul+0x25c>)
 80004fc:	009b      	lsls	r3, r3, #2
 80004fe:	58cb      	ldr	r3, [r1, r3]
 8000500:	469f      	mov	pc, r3
 8000502:	2b00      	cmp	r3, #0
 8000504:	d000      	beq.n	8000508 <__aeabi_fmul+0x74>
 8000506:	e085      	b.n	8000614 <__aeabi_fmul+0x180>
 8000508:	3308      	adds	r3, #8
 800050a:	469a      	mov	sl, r3
 800050c:	3b06      	subs	r3, #6
 800050e:	469b      	mov	fp, r3
 8000510:	027c      	lsls	r4, r7, #9
 8000512:	007a      	lsls	r2, r7, #1
 8000514:	0ffb      	lsrs	r3, r7, #31
 8000516:	25ff      	movs	r5, #255	; 0xff
 8000518:	0a64      	lsrs	r4, r4, #9
 800051a:	0e12      	lsrs	r2, r2, #24
 800051c:	4698      	mov	r8, r3
 800051e:	d1db      	bne.n	80004d8 <__aeabi_fmul+0x44>
 8000520:	2c00      	cmp	r4, #0
 8000522:	d000      	beq.n	8000526 <__aeabi_fmul+0x92>
 8000524:	e090      	b.n	8000648 <__aeabi_fmul+0x1b4>
 8000526:	4652      	mov	r2, sl
 8000528:	2301      	movs	r3, #1
 800052a:	431a      	orrs	r2, r3
 800052c:	4692      	mov	sl, r2
 800052e:	2001      	movs	r0, #1
 8000530:	e7db      	b.n	80004ea <__aeabi_fmul+0x56>
 8000532:	464c      	mov	r4, r9
 8000534:	4658      	mov	r0, fp
 8000536:	0017      	movs	r7, r2
 8000538:	2802      	cmp	r0, #2
 800053a:	d024      	beq.n	8000586 <__aeabi_fmul+0xf2>
 800053c:	2803      	cmp	r0, #3
 800053e:	d100      	bne.n	8000542 <__aeabi_fmul+0xae>
 8000540:	e0cf      	b.n	80006e2 <__aeabi_fmul+0x24e>
 8000542:	2200      	movs	r2, #0
 8000544:	2300      	movs	r3, #0
 8000546:	2801      	cmp	r0, #1
 8000548:	d14d      	bne.n	80005e6 <__aeabi_fmul+0x152>
 800054a:	0258      	lsls	r0, r3, #9
 800054c:	05d2      	lsls	r2, r2, #23
 800054e:	0a40      	lsrs	r0, r0, #9
 8000550:	07ff      	lsls	r7, r7, #31
 8000552:	4310      	orrs	r0, r2
 8000554:	4338      	orrs	r0, r7
 8000556:	b003      	add	sp, #12
 8000558:	bc3c      	pop	{r2, r3, r4, r5}
 800055a:	4690      	mov	r8, r2
 800055c:	4699      	mov	r9, r3
 800055e:	46a2      	mov	sl, r4
 8000560:	46ab      	mov	fp, r5
 8000562:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000564:	2b00      	cmp	r3, #0
 8000566:	d15b      	bne.n	8000620 <__aeabi_fmul+0x18c>
 8000568:	2304      	movs	r3, #4
 800056a:	469a      	mov	sl, r3
 800056c:	3b03      	subs	r3, #3
 800056e:	2500      	movs	r5, #0
 8000570:	469b      	mov	fp, r3
 8000572:	e7aa      	b.n	80004ca <__aeabi_fmul+0x36>
 8000574:	35ff      	adds	r5, #255	; 0xff
 8000576:	2c00      	cmp	r4, #0
 8000578:	d160      	bne.n	800063c <__aeabi_fmul+0x1a8>
 800057a:	4652      	mov	r2, sl
 800057c:	2302      	movs	r3, #2
 800057e:	431a      	orrs	r2, r3
 8000580:	4692      	mov	sl, r2
 8000582:	2002      	movs	r0, #2
 8000584:	e7b1      	b.n	80004ea <__aeabi_fmul+0x56>
 8000586:	22ff      	movs	r2, #255	; 0xff
 8000588:	2300      	movs	r3, #0
 800058a:	e7de      	b.n	800054a <__aeabi_fmul+0xb6>
 800058c:	464b      	mov	r3, r9
 800058e:	0c1b      	lsrs	r3, r3, #16
 8000590:	469c      	mov	ip, r3
 8000592:	464b      	mov	r3, r9
 8000594:	0426      	lsls	r6, r4, #16
 8000596:	0c36      	lsrs	r6, r6, #16
 8000598:	0418      	lsls	r0, r3, #16
 800059a:	4661      	mov	r1, ip
 800059c:	0033      	movs	r3, r6
 800059e:	0c22      	lsrs	r2, r4, #16
 80005a0:	4664      	mov	r4, ip
 80005a2:	0c00      	lsrs	r0, r0, #16
 80005a4:	4343      	muls	r3, r0
 80005a6:	434e      	muls	r6, r1
 80005a8:	4350      	muls	r0, r2
 80005aa:	4354      	muls	r4, r2
 80005ac:	1980      	adds	r0, r0, r6
 80005ae:	0c1a      	lsrs	r2, r3, #16
 80005b0:	1812      	adds	r2, r2, r0
 80005b2:	4296      	cmp	r6, r2
 80005b4:	d903      	bls.n	80005be <__aeabi_fmul+0x12a>
 80005b6:	2180      	movs	r1, #128	; 0x80
 80005b8:	0249      	lsls	r1, r1, #9
 80005ba:	468c      	mov	ip, r1
 80005bc:	4464      	add	r4, ip
 80005be:	041b      	lsls	r3, r3, #16
 80005c0:	0c1b      	lsrs	r3, r3, #16
 80005c2:	0410      	lsls	r0, r2, #16
 80005c4:	18c0      	adds	r0, r0, r3
 80005c6:	0183      	lsls	r3, r0, #6
 80005c8:	1e5e      	subs	r6, r3, #1
 80005ca:	41b3      	sbcs	r3, r6
 80005cc:	0e80      	lsrs	r0, r0, #26
 80005ce:	4318      	orrs	r0, r3
 80005d0:	0c13      	lsrs	r3, r2, #16
 80005d2:	191b      	adds	r3, r3, r4
 80005d4:	019b      	lsls	r3, r3, #6
 80005d6:	4303      	orrs	r3, r0
 80005d8:	001c      	movs	r4, r3
 80005da:	0123      	lsls	r3, r4, #4
 80005dc:	d579      	bpl.n	80006d2 <__aeabi_fmul+0x23e>
 80005de:	2301      	movs	r3, #1
 80005e0:	0862      	lsrs	r2, r4, #1
 80005e2:	401c      	ands	r4, r3
 80005e4:	4314      	orrs	r4, r2
 80005e6:	9a01      	ldr	r2, [sp, #4]
 80005e8:	327f      	adds	r2, #127	; 0x7f
 80005ea:	2a00      	cmp	r2, #0
 80005ec:	dd4d      	ble.n	800068a <__aeabi_fmul+0x1f6>
 80005ee:	0763      	lsls	r3, r4, #29
 80005f0:	d004      	beq.n	80005fc <__aeabi_fmul+0x168>
 80005f2:	230f      	movs	r3, #15
 80005f4:	4023      	ands	r3, r4
 80005f6:	2b04      	cmp	r3, #4
 80005f8:	d000      	beq.n	80005fc <__aeabi_fmul+0x168>
 80005fa:	3404      	adds	r4, #4
 80005fc:	0123      	lsls	r3, r4, #4
 80005fe:	d503      	bpl.n	8000608 <__aeabi_fmul+0x174>
 8000600:	4b3c      	ldr	r3, [pc, #240]	; (80006f4 <__aeabi_fmul+0x260>)
 8000602:	9a01      	ldr	r2, [sp, #4]
 8000604:	401c      	ands	r4, r3
 8000606:	3280      	adds	r2, #128	; 0x80
 8000608:	2afe      	cmp	r2, #254	; 0xfe
 800060a:	dcbc      	bgt.n	8000586 <__aeabi_fmul+0xf2>
 800060c:	01a3      	lsls	r3, r4, #6
 800060e:	0a5b      	lsrs	r3, r3, #9
 8000610:	b2d2      	uxtb	r2, r2
 8000612:	e79a      	b.n	800054a <__aeabi_fmul+0xb6>
 8000614:	230c      	movs	r3, #12
 8000616:	469a      	mov	sl, r3
 8000618:	3b09      	subs	r3, #9
 800061a:	25ff      	movs	r5, #255	; 0xff
 800061c:	469b      	mov	fp, r3
 800061e:	e754      	b.n	80004ca <__aeabi_fmul+0x36>
 8000620:	0018      	movs	r0, r3
 8000622:	f001 fe99 	bl	8002358 <__clzsi2>
 8000626:	464a      	mov	r2, r9
 8000628:	1f43      	subs	r3, r0, #5
 800062a:	2576      	movs	r5, #118	; 0x76
 800062c:	409a      	lsls	r2, r3
 800062e:	2300      	movs	r3, #0
 8000630:	426d      	negs	r5, r5
 8000632:	4691      	mov	r9, r2
 8000634:	1a2d      	subs	r5, r5, r0
 8000636:	469a      	mov	sl, r3
 8000638:	469b      	mov	fp, r3
 800063a:	e746      	b.n	80004ca <__aeabi_fmul+0x36>
 800063c:	4652      	mov	r2, sl
 800063e:	2303      	movs	r3, #3
 8000640:	431a      	orrs	r2, r3
 8000642:	4692      	mov	sl, r2
 8000644:	2003      	movs	r0, #3
 8000646:	e750      	b.n	80004ea <__aeabi_fmul+0x56>
 8000648:	0020      	movs	r0, r4
 800064a:	f001 fe85 	bl	8002358 <__clzsi2>
 800064e:	1f43      	subs	r3, r0, #5
 8000650:	1a2d      	subs	r5, r5, r0
 8000652:	409c      	lsls	r4, r3
 8000654:	3d76      	subs	r5, #118	; 0x76
 8000656:	2000      	movs	r0, #0
 8000658:	e747      	b.n	80004ea <__aeabi_fmul+0x56>
 800065a:	2380      	movs	r3, #128	; 0x80
 800065c:	2700      	movs	r7, #0
 800065e:	03db      	lsls	r3, r3, #15
 8000660:	22ff      	movs	r2, #255	; 0xff
 8000662:	e772      	b.n	800054a <__aeabi_fmul+0xb6>
 8000664:	4642      	mov	r2, r8
 8000666:	e766      	b.n	8000536 <__aeabi_fmul+0xa2>
 8000668:	464c      	mov	r4, r9
 800066a:	0032      	movs	r2, r6
 800066c:	4658      	mov	r0, fp
 800066e:	e762      	b.n	8000536 <__aeabi_fmul+0xa2>
 8000670:	2380      	movs	r3, #128	; 0x80
 8000672:	464a      	mov	r2, r9
 8000674:	03db      	lsls	r3, r3, #15
 8000676:	421a      	tst	r2, r3
 8000678:	d022      	beq.n	80006c0 <__aeabi_fmul+0x22c>
 800067a:	421c      	tst	r4, r3
 800067c:	d120      	bne.n	80006c0 <__aeabi_fmul+0x22c>
 800067e:	4323      	orrs	r3, r4
 8000680:	025b      	lsls	r3, r3, #9
 8000682:	0a5b      	lsrs	r3, r3, #9
 8000684:	4647      	mov	r7, r8
 8000686:	22ff      	movs	r2, #255	; 0xff
 8000688:	e75f      	b.n	800054a <__aeabi_fmul+0xb6>
 800068a:	2301      	movs	r3, #1
 800068c:	1a9a      	subs	r2, r3, r2
 800068e:	2a1b      	cmp	r2, #27
 8000690:	dc21      	bgt.n	80006d6 <__aeabi_fmul+0x242>
 8000692:	0023      	movs	r3, r4
 8000694:	9901      	ldr	r1, [sp, #4]
 8000696:	40d3      	lsrs	r3, r2
 8000698:	319e      	adds	r1, #158	; 0x9e
 800069a:	408c      	lsls	r4, r1
 800069c:	001a      	movs	r2, r3
 800069e:	0023      	movs	r3, r4
 80006a0:	1e5c      	subs	r4, r3, #1
 80006a2:	41a3      	sbcs	r3, r4
 80006a4:	4313      	orrs	r3, r2
 80006a6:	075a      	lsls	r2, r3, #29
 80006a8:	d004      	beq.n	80006b4 <__aeabi_fmul+0x220>
 80006aa:	220f      	movs	r2, #15
 80006ac:	401a      	ands	r2, r3
 80006ae:	2a04      	cmp	r2, #4
 80006b0:	d000      	beq.n	80006b4 <__aeabi_fmul+0x220>
 80006b2:	3304      	adds	r3, #4
 80006b4:	015a      	lsls	r2, r3, #5
 80006b6:	d411      	bmi.n	80006dc <__aeabi_fmul+0x248>
 80006b8:	019b      	lsls	r3, r3, #6
 80006ba:	0a5b      	lsrs	r3, r3, #9
 80006bc:	2200      	movs	r2, #0
 80006be:	e744      	b.n	800054a <__aeabi_fmul+0xb6>
 80006c0:	2380      	movs	r3, #128	; 0x80
 80006c2:	464a      	mov	r2, r9
 80006c4:	03db      	lsls	r3, r3, #15
 80006c6:	4313      	orrs	r3, r2
 80006c8:	025b      	lsls	r3, r3, #9
 80006ca:	0a5b      	lsrs	r3, r3, #9
 80006cc:	0037      	movs	r7, r6
 80006ce:	22ff      	movs	r2, #255	; 0xff
 80006d0:	e73b      	b.n	800054a <__aeabi_fmul+0xb6>
 80006d2:	9501      	str	r5, [sp, #4]
 80006d4:	e787      	b.n	80005e6 <__aeabi_fmul+0x152>
 80006d6:	2200      	movs	r2, #0
 80006d8:	2300      	movs	r3, #0
 80006da:	e736      	b.n	800054a <__aeabi_fmul+0xb6>
 80006dc:	2201      	movs	r2, #1
 80006de:	2300      	movs	r3, #0
 80006e0:	e733      	b.n	800054a <__aeabi_fmul+0xb6>
 80006e2:	2380      	movs	r3, #128	; 0x80
 80006e4:	03db      	lsls	r3, r3, #15
 80006e6:	4323      	orrs	r3, r4
 80006e8:	025b      	lsls	r3, r3, #9
 80006ea:	0a5b      	lsrs	r3, r3, #9
 80006ec:	22ff      	movs	r2, #255	; 0xff
 80006ee:	e72c      	b.n	800054a <__aeabi_fmul+0xb6>
 80006f0:	080060c8 	.word	0x080060c8
 80006f4:	f7ffffff 	.word	0xf7ffffff

080006f8 <__aeabi_ui2f>:
 80006f8:	b570      	push	{r4, r5, r6, lr}
 80006fa:	1e04      	subs	r4, r0, #0
 80006fc:	d034      	beq.n	8000768 <__aeabi_ui2f+0x70>
 80006fe:	f001 fe2b 	bl	8002358 <__clzsi2>
 8000702:	229e      	movs	r2, #158	; 0x9e
 8000704:	1a12      	subs	r2, r2, r0
 8000706:	2a96      	cmp	r2, #150	; 0x96
 8000708:	dc07      	bgt.n	800071a <__aeabi_ui2f+0x22>
 800070a:	b2d2      	uxtb	r2, r2
 800070c:	2808      	cmp	r0, #8
 800070e:	dd2e      	ble.n	800076e <__aeabi_ui2f+0x76>
 8000710:	3808      	subs	r0, #8
 8000712:	4084      	lsls	r4, r0
 8000714:	0260      	lsls	r0, r4, #9
 8000716:	0a40      	lsrs	r0, r0, #9
 8000718:	e021      	b.n	800075e <__aeabi_ui2f+0x66>
 800071a:	2a99      	cmp	r2, #153	; 0x99
 800071c:	dd09      	ble.n	8000732 <__aeabi_ui2f+0x3a>
 800071e:	0003      	movs	r3, r0
 8000720:	0021      	movs	r1, r4
 8000722:	331b      	adds	r3, #27
 8000724:	4099      	lsls	r1, r3
 8000726:	1e4b      	subs	r3, r1, #1
 8000728:	4199      	sbcs	r1, r3
 800072a:	2305      	movs	r3, #5
 800072c:	1a1b      	subs	r3, r3, r0
 800072e:	40dc      	lsrs	r4, r3
 8000730:	430c      	orrs	r4, r1
 8000732:	2805      	cmp	r0, #5
 8000734:	dd01      	ble.n	800073a <__aeabi_ui2f+0x42>
 8000736:	1f43      	subs	r3, r0, #5
 8000738:	409c      	lsls	r4, r3
 800073a:	0023      	movs	r3, r4
 800073c:	490d      	ldr	r1, [pc, #52]	; (8000774 <__aeabi_ui2f+0x7c>)
 800073e:	400b      	ands	r3, r1
 8000740:	0765      	lsls	r5, r4, #29
 8000742:	d009      	beq.n	8000758 <__aeabi_ui2f+0x60>
 8000744:	250f      	movs	r5, #15
 8000746:	402c      	ands	r4, r5
 8000748:	2c04      	cmp	r4, #4
 800074a:	d005      	beq.n	8000758 <__aeabi_ui2f+0x60>
 800074c:	3304      	adds	r3, #4
 800074e:	015c      	lsls	r4, r3, #5
 8000750:	d502      	bpl.n	8000758 <__aeabi_ui2f+0x60>
 8000752:	229f      	movs	r2, #159	; 0x9f
 8000754:	400b      	ands	r3, r1
 8000756:	1a12      	subs	r2, r2, r0
 8000758:	019b      	lsls	r3, r3, #6
 800075a:	0a58      	lsrs	r0, r3, #9
 800075c:	b2d2      	uxtb	r2, r2
 800075e:	0240      	lsls	r0, r0, #9
 8000760:	05d2      	lsls	r2, r2, #23
 8000762:	0a40      	lsrs	r0, r0, #9
 8000764:	4310      	orrs	r0, r2
 8000766:	bd70      	pop	{r4, r5, r6, pc}
 8000768:	2200      	movs	r2, #0
 800076a:	2000      	movs	r0, #0
 800076c:	e7f7      	b.n	800075e <__aeabi_ui2f+0x66>
 800076e:	0260      	lsls	r0, r4, #9
 8000770:	0a40      	lsrs	r0, r0, #9
 8000772:	e7f4      	b.n	800075e <__aeabi_ui2f+0x66>
 8000774:	fbffffff 	.word	0xfbffffff

08000778 <__aeabi_dadd>:
 8000778:	b5f0      	push	{r4, r5, r6, r7, lr}
 800077a:	464f      	mov	r7, r9
 800077c:	4646      	mov	r6, r8
 800077e:	46d6      	mov	lr, sl
 8000780:	000c      	movs	r4, r1
 8000782:	0309      	lsls	r1, r1, #12
 8000784:	b5c0      	push	{r6, r7, lr}
 8000786:	0a49      	lsrs	r1, r1, #9
 8000788:	0f47      	lsrs	r7, r0, #29
 800078a:	005e      	lsls	r6, r3, #1
 800078c:	4339      	orrs	r1, r7
 800078e:	031f      	lsls	r7, r3, #12
 8000790:	0fdb      	lsrs	r3, r3, #31
 8000792:	469c      	mov	ip, r3
 8000794:	0065      	lsls	r5, r4, #1
 8000796:	0a7b      	lsrs	r3, r7, #9
 8000798:	0f57      	lsrs	r7, r2, #29
 800079a:	431f      	orrs	r7, r3
 800079c:	0d6d      	lsrs	r5, r5, #21
 800079e:	0fe4      	lsrs	r4, r4, #31
 80007a0:	0d76      	lsrs	r6, r6, #21
 80007a2:	46a1      	mov	r9, r4
 80007a4:	00c0      	lsls	r0, r0, #3
 80007a6:	46b8      	mov	r8, r7
 80007a8:	00d2      	lsls	r2, r2, #3
 80007aa:	1bab      	subs	r3, r5, r6
 80007ac:	4564      	cmp	r4, ip
 80007ae:	d07b      	beq.n	80008a8 <__aeabi_dadd+0x130>
 80007b0:	2b00      	cmp	r3, #0
 80007b2:	dd5f      	ble.n	8000874 <__aeabi_dadd+0xfc>
 80007b4:	2e00      	cmp	r6, #0
 80007b6:	d000      	beq.n	80007ba <__aeabi_dadd+0x42>
 80007b8:	e0a4      	b.n	8000904 <__aeabi_dadd+0x18c>
 80007ba:	003e      	movs	r6, r7
 80007bc:	4316      	orrs	r6, r2
 80007be:	d100      	bne.n	80007c2 <__aeabi_dadd+0x4a>
 80007c0:	e112      	b.n	80009e8 <__aeabi_dadd+0x270>
 80007c2:	1e5e      	subs	r6, r3, #1
 80007c4:	2e00      	cmp	r6, #0
 80007c6:	d000      	beq.n	80007ca <__aeabi_dadd+0x52>
 80007c8:	e19e      	b.n	8000b08 <__aeabi_dadd+0x390>
 80007ca:	1a87      	subs	r7, r0, r2
 80007cc:	4643      	mov	r3, r8
 80007ce:	42b8      	cmp	r0, r7
 80007d0:	4180      	sbcs	r0, r0
 80007d2:	2501      	movs	r5, #1
 80007d4:	1ac9      	subs	r1, r1, r3
 80007d6:	4240      	negs	r0, r0
 80007d8:	1a09      	subs	r1, r1, r0
 80007da:	020b      	lsls	r3, r1, #8
 80007dc:	d400      	bmi.n	80007e0 <__aeabi_dadd+0x68>
 80007de:	e131      	b.n	8000a44 <__aeabi_dadd+0x2cc>
 80007e0:	0249      	lsls	r1, r1, #9
 80007e2:	0a4e      	lsrs	r6, r1, #9
 80007e4:	2e00      	cmp	r6, #0
 80007e6:	d100      	bne.n	80007ea <__aeabi_dadd+0x72>
 80007e8:	e16e      	b.n	8000ac8 <__aeabi_dadd+0x350>
 80007ea:	0030      	movs	r0, r6
 80007ec:	f001 fdb4 	bl	8002358 <__clzsi2>
 80007f0:	0003      	movs	r3, r0
 80007f2:	3b08      	subs	r3, #8
 80007f4:	2b1f      	cmp	r3, #31
 80007f6:	dd00      	ble.n	80007fa <__aeabi_dadd+0x82>
 80007f8:	e161      	b.n	8000abe <__aeabi_dadd+0x346>
 80007fa:	2220      	movs	r2, #32
 80007fc:	0039      	movs	r1, r7
 80007fe:	1ad2      	subs	r2, r2, r3
 8000800:	409e      	lsls	r6, r3
 8000802:	40d1      	lsrs	r1, r2
 8000804:	409f      	lsls	r7, r3
 8000806:	430e      	orrs	r6, r1
 8000808:	429d      	cmp	r5, r3
 800080a:	dd00      	ble.n	800080e <__aeabi_dadd+0x96>
 800080c:	e151      	b.n	8000ab2 <__aeabi_dadd+0x33a>
 800080e:	1b5d      	subs	r5, r3, r5
 8000810:	1c6b      	adds	r3, r5, #1
 8000812:	2b1f      	cmp	r3, #31
 8000814:	dd00      	ble.n	8000818 <__aeabi_dadd+0xa0>
 8000816:	e17c      	b.n	8000b12 <__aeabi_dadd+0x39a>
 8000818:	2120      	movs	r1, #32
 800081a:	1ac9      	subs	r1, r1, r3
 800081c:	003d      	movs	r5, r7
 800081e:	0030      	movs	r0, r6
 8000820:	408f      	lsls	r7, r1
 8000822:	4088      	lsls	r0, r1
 8000824:	40dd      	lsrs	r5, r3
 8000826:	1e79      	subs	r1, r7, #1
 8000828:	418f      	sbcs	r7, r1
 800082a:	0031      	movs	r1, r6
 800082c:	2207      	movs	r2, #7
 800082e:	4328      	orrs	r0, r5
 8000830:	40d9      	lsrs	r1, r3
 8000832:	2500      	movs	r5, #0
 8000834:	4307      	orrs	r7, r0
 8000836:	403a      	ands	r2, r7
 8000838:	2a00      	cmp	r2, #0
 800083a:	d009      	beq.n	8000850 <__aeabi_dadd+0xd8>
 800083c:	230f      	movs	r3, #15
 800083e:	403b      	ands	r3, r7
 8000840:	2b04      	cmp	r3, #4
 8000842:	d005      	beq.n	8000850 <__aeabi_dadd+0xd8>
 8000844:	1d3b      	adds	r3, r7, #4
 8000846:	42bb      	cmp	r3, r7
 8000848:	41bf      	sbcs	r7, r7
 800084a:	427f      	negs	r7, r7
 800084c:	19c9      	adds	r1, r1, r7
 800084e:	001f      	movs	r7, r3
 8000850:	020b      	lsls	r3, r1, #8
 8000852:	d400      	bmi.n	8000856 <__aeabi_dadd+0xde>
 8000854:	e226      	b.n	8000ca4 <__aeabi_dadd+0x52c>
 8000856:	1c6a      	adds	r2, r5, #1
 8000858:	4bc6      	ldr	r3, [pc, #792]	; (8000b74 <__aeabi_dadd+0x3fc>)
 800085a:	0555      	lsls	r5, r2, #21
 800085c:	0d6d      	lsrs	r5, r5, #21
 800085e:	429a      	cmp	r2, r3
 8000860:	d100      	bne.n	8000864 <__aeabi_dadd+0xec>
 8000862:	e106      	b.n	8000a72 <__aeabi_dadd+0x2fa>
 8000864:	4ac4      	ldr	r2, [pc, #784]	; (8000b78 <__aeabi_dadd+0x400>)
 8000866:	08ff      	lsrs	r7, r7, #3
 8000868:	400a      	ands	r2, r1
 800086a:	0753      	lsls	r3, r2, #29
 800086c:	0252      	lsls	r2, r2, #9
 800086e:	433b      	orrs	r3, r7
 8000870:	0b12      	lsrs	r2, r2, #12
 8000872:	e08e      	b.n	8000992 <__aeabi_dadd+0x21a>
 8000874:	2b00      	cmp	r3, #0
 8000876:	d000      	beq.n	800087a <__aeabi_dadd+0x102>
 8000878:	e0b8      	b.n	80009ec <__aeabi_dadd+0x274>
 800087a:	1c6b      	adds	r3, r5, #1
 800087c:	055b      	lsls	r3, r3, #21
 800087e:	0d5b      	lsrs	r3, r3, #21
 8000880:	2b01      	cmp	r3, #1
 8000882:	dc00      	bgt.n	8000886 <__aeabi_dadd+0x10e>
 8000884:	e130      	b.n	8000ae8 <__aeabi_dadd+0x370>
 8000886:	1a87      	subs	r7, r0, r2
 8000888:	4643      	mov	r3, r8
 800088a:	42b8      	cmp	r0, r7
 800088c:	41b6      	sbcs	r6, r6
 800088e:	1acb      	subs	r3, r1, r3
 8000890:	4276      	negs	r6, r6
 8000892:	1b9e      	subs	r6, r3, r6
 8000894:	0233      	lsls	r3, r6, #8
 8000896:	d500      	bpl.n	800089a <__aeabi_dadd+0x122>
 8000898:	e14c      	b.n	8000b34 <__aeabi_dadd+0x3bc>
 800089a:	003b      	movs	r3, r7
 800089c:	4333      	orrs	r3, r6
 800089e:	d1a1      	bne.n	80007e4 <__aeabi_dadd+0x6c>
 80008a0:	2200      	movs	r2, #0
 80008a2:	2400      	movs	r4, #0
 80008a4:	2500      	movs	r5, #0
 80008a6:	e070      	b.n	800098a <__aeabi_dadd+0x212>
 80008a8:	2b00      	cmp	r3, #0
 80008aa:	dc00      	bgt.n	80008ae <__aeabi_dadd+0x136>
 80008ac:	e0e5      	b.n	8000a7a <__aeabi_dadd+0x302>
 80008ae:	2e00      	cmp	r6, #0
 80008b0:	d100      	bne.n	80008b4 <__aeabi_dadd+0x13c>
 80008b2:	e083      	b.n	80009bc <__aeabi_dadd+0x244>
 80008b4:	4eaf      	ldr	r6, [pc, #700]	; (8000b74 <__aeabi_dadd+0x3fc>)
 80008b6:	42b5      	cmp	r5, r6
 80008b8:	d060      	beq.n	800097c <__aeabi_dadd+0x204>
 80008ba:	2680      	movs	r6, #128	; 0x80
 80008bc:	0436      	lsls	r6, r6, #16
 80008be:	4337      	orrs	r7, r6
 80008c0:	46b8      	mov	r8, r7
 80008c2:	2b38      	cmp	r3, #56	; 0x38
 80008c4:	dc00      	bgt.n	80008c8 <__aeabi_dadd+0x150>
 80008c6:	e13e      	b.n	8000b46 <__aeabi_dadd+0x3ce>
 80008c8:	4643      	mov	r3, r8
 80008ca:	4313      	orrs	r3, r2
 80008cc:	001f      	movs	r7, r3
 80008ce:	1e7a      	subs	r2, r7, #1
 80008d0:	4197      	sbcs	r7, r2
 80008d2:	183f      	adds	r7, r7, r0
 80008d4:	4287      	cmp	r7, r0
 80008d6:	4180      	sbcs	r0, r0
 80008d8:	4240      	negs	r0, r0
 80008da:	1809      	adds	r1, r1, r0
 80008dc:	020b      	lsls	r3, r1, #8
 80008de:	d400      	bmi.n	80008e2 <__aeabi_dadd+0x16a>
 80008e0:	e0b0      	b.n	8000a44 <__aeabi_dadd+0x2cc>
 80008e2:	4ba4      	ldr	r3, [pc, #656]	; (8000b74 <__aeabi_dadd+0x3fc>)
 80008e4:	3501      	adds	r5, #1
 80008e6:	429d      	cmp	r5, r3
 80008e8:	d100      	bne.n	80008ec <__aeabi_dadd+0x174>
 80008ea:	e0c3      	b.n	8000a74 <__aeabi_dadd+0x2fc>
 80008ec:	4aa2      	ldr	r2, [pc, #648]	; (8000b78 <__aeabi_dadd+0x400>)
 80008ee:	087b      	lsrs	r3, r7, #1
 80008f0:	400a      	ands	r2, r1
 80008f2:	2101      	movs	r1, #1
 80008f4:	400f      	ands	r7, r1
 80008f6:	431f      	orrs	r7, r3
 80008f8:	0851      	lsrs	r1, r2, #1
 80008fa:	07d3      	lsls	r3, r2, #31
 80008fc:	2207      	movs	r2, #7
 80008fe:	431f      	orrs	r7, r3
 8000900:	403a      	ands	r2, r7
 8000902:	e799      	b.n	8000838 <__aeabi_dadd+0xc0>
 8000904:	4e9b      	ldr	r6, [pc, #620]	; (8000b74 <__aeabi_dadd+0x3fc>)
 8000906:	42b5      	cmp	r5, r6
 8000908:	d038      	beq.n	800097c <__aeabi_dadd+0x204>
 800090a:	2680      	movs	r6, #128	; 0x80
 800090c:	0436      	lsls	r6, r6, #16
 800090e:	4337      	orrs	r7, r6
 8000910:	46b8      	mov	r8, r7
 8000912:	2b38      	cmp	r3, #56	; 0x38
 8000914:	dd00      	ble.n	8000918 <__aeabi_dadd+0x1a0>
 8000916:	e0dc      	b.n	8000ad2 <__aeabi_dadd+0x35a>
 8000918:	2b1f      	cmp	r3, #31
 800091a:	dc00      	bgt.n	800091e <__aeabi_dadd+0x1a6>
 800091c:	e130      	b.n	8000b80 <__aeabi_dadd+0x408>
 800091e:	001e      	movs	r6, r3
 8000920:	4647      	mov	r7, r8
 8000922:	3e20      	subs	r6, #32
 8000924:	40f7      	lsrs	r7, r6
 8000926:	46bc      	mov	ip, r7
 8000928:	2b20      	cmp	r3, #32
 800092a:	d004      	beq.n	8000936 <__aeabi_dadd+0x1be>
 800092c:	2640      	movs	r6, #64	; 0x40
 800092e:	1af3      	subs	r3, r6, r3
 8000930:	4646      	mov	r6, r8
 8000932:	409e      	lsls	r6, r3
 8000934:	4332      	orrs	r2, r6
 8000936:	0017      	movs	r7, r2
 8000938:	4663      	mov	r3, ip
 800093a:	1e7a      	subs	r2, r7, #1
 800093c:	4197      	sbcs	r7, r2
 800093e:	431f      	orrs	r7, r3
 8000940:	e0cc      	b.n	8000adc <__aeabi_dadd+0x364>
 8000942:	2b00      	cmp	r3, #0
 8000944:	d100      	bne.n	8000948 <__aeabi_dadd+0x1d0>
 8000946:	e204      	b.n	8000d52 <__aeabi_dadd+0x5da>
 8000948:	4643      	mov	r3, r8
 800094a:	4313      	orrs	r3, r2
 800094c:	d100      	bne.n	8000950 <__aeabi_dadd+0x1d8>
 800094e:	e159      	b.n	8000c04 <__aeabi_dadd+0x48c>
 8000950:	074b      	lsls	r3, r1, #29
 8000952:	08c0      	lsrs	r0, r0, #3
 8000954:	4318      	orrs	r0, r3
 8000956:	2380      	movs	r3, #128	; 0x80
 8000958:	08c9      	lsrs	r1, r1, #3
 800095a:	031b      	lsls	r3, r3, #12
 800095c:	4219      	tst	r1, r3
 800095e:	d008      	beq.n	8000972 <__aeabi_dadd+0x1fa>
 8000960:	4645      	mov	r5, r8
 8000962:	08ed      	lsrs	r5, r5, #3
 8000964:	421d      	tst	r5, r3
 8000966:	d104      	bne.n	8000972 <__aeabi_dadd+0x1fa>
 8000968:	4643      	mov	r3, r8
 800096a:	08d0      	lsrs	r0, r2, #3
 800096c:	0759      	lsls	r1, r3, #29
 800096e:	4308      	orrs	r0, r1
 8000970:	0029      	movs	r1, r5
 8000972:	0f42      	lsrs	r2, r0, #29
 8000974:	00c9      	lsls	r1, r1, #3
 8000976:	4d7f      	ldr	r5, [pc, #508]	; (8000b74 <__aeabi_dadd+0x3fc>)
 8000978:	4311      	orrs	r1, r2
 800097a:	00c0      	lsls	r0, r0, #3
 800097c:	074b      	lsls	r3, r1, #29
 800097e:	08ca      	lsrs	r2, r1, #3
 8000980:	497c      	ldr	r1, [pc, #496]	; (8000b74 <__aeabi_dadd+0x3fc>)
 8000982:	08c0      	lsrs	r0, r0, #3
 8000984:	4303      	orrs	r3, r0
 8000986:	428d      	cmp	r5, r1
 8000988:	d068      	beq.n	8000a5c <__aeabi_dadd+0x2e4>
 800098a:	0312      	lsls	r2, r2, #12
 800098c:	056d      	lsls	r5, r5, #21
 800098e:	0b12      	lsrs	r2, r2, #12
 8000990:	0d6d      	lsrs	r5, r5, #21
 8000992:	2100      	movs	r1, #0
 8000994:	0312      	lsls	r2, r2, #12
 8000996:	0018      	movs	r0, r3
 8000998:	0b13      	lsrs	r3, r2, #12
 800099a:	0d0a      	lsrs	r2, r1, #20
 800099c:	0512      	lsls	r2, r2, #20
 800099e:	431a      	orrs	r2, r3
 80009a0:	4b76      	ldr	r3, [pc, #472]	; (8000b7c <__aeabi_dadd+0x404>)
 80009a2:	052d      	lsls	r5, r5, #20
 80009a4:	4013      	ands	r3, r2
 80009a6:	432b      	orrs	r3, r5
 80009a8:	005b      	lsls	r3, r3, #1
 80009aa:	07e4      	lsls	r4, r4, #31
 80009ac:	085b      	lsrs	r3, r3, #1
 80009ae:	4323      	orrs	r3, r4
 80009b0:	0019      	movs	r1, r3
 80009b2:	bc1c      	pop	{r2, r3, r4}
 80009b4:	4690      	mov	r8, r2
 80009b6:	4699      	mov	r9, r3
 80009b8:	46a2      	mov	sl, r4
 80009ba:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80009bc:	003e      	movs	r6, r7
 80009be:	4316      	orrs	r6, r2
 80009c0:	d012      	beq.n	80009e8 <__aeabi_dadd+0x270>
 80009c2:	1e5e      	subs	r6, r3, #1
 80009c4:	2e00      	cmp	r6, #0
 80009c6:	d000      	beq.n	80009ca <__aeabi_dadd+0x252>
 80009c8:	e100      	b.n	8000bcc <__aeabi_dadd+0x454>
 80009ca:	1887      	adds	r7, r0, r2
 80009cc:	4287      	cmp	r7, r0
 80009ce:	4180      	sbcs	r0, r0
 80009d0:	4441      	add	r1, r8
 80009d2:	4240      	negs	r0, r0
 80009d4:	1809      	adds	r1, r1, r0
 80009d6:	2501      	movs	r5, #1
 80009d8:	020b      	lsls	r3, r1, #8
 80009da:	d533      	bpl.n	8000a44 <__aeabi_dadd+0x2cc>
 80009dc:	2502      	movs	r5, #2
 80009de:	e785      	b.n	80008ec <__aeabi_dadd+0x174>
 80009e0:	4664      	mov	r4, ip
 80009e2:	0033      	movs	r3, r6
 80009e4:	4641      	mov	r1, r8
 80009e6:	0010      	movs	r0, r2
 80009e8:	001d      	movs	r5, r3
 80009ea:	e7c7      	b.n	800097c <__aeabi_dadd+0x204>
 80009ec:	2d00      	cmp	r5, #0
 80009ee:	d000      	beq.n	80009f2 <__aeabi_dadd+0x27a>
 80009f0:	e0da      	b.n	8000ba8 <__aeabi_dadd+0x430>
 80009f2:	000c      	movs	r4, r1
 80009f4:	4304      	orrs	r4, r0
 80009f6:	d0f3      	beq.n	80009e0 <__aeabi_dadd+0x268>
 80009f8:	1c5c      	adds	r4, r3, #1
 80009fa:	d100      	bne.n	80009fe <__aeabi_dadd+0x286>
 80009fc:	e19f      	b.n	8000d3e <__aeabi_dadd+0x5c6>
 80009fe:	4c5d      	ldr	r4, [pc, #372]	; (8000b74 <__aeabi_dadd+0x3fc>)
 8000a00:	42a6      	cmp	r6, r4
 8000a02:	d100      	bne.n	8000a06 <__aeabi_dadd+0x28e>
 8000a04:	e12f      	b.n	8000c66 <__aeabi_dadd+0x4ee>
 8000a06:	43db      	mvns	r3, r3
 8000a08:	2b38      	cmp	r3, #56	; 0x38
 8000a0a:	dd00      	ble.n	8000a0e <__aeabi_dadd+0x296>
 8000a0c:	e166      	b.n	8000cdc <__aeabi_dadd+0x564>
 8000a0e:	2b1f      	cmp	r3, #31
 8000a10:	dd00      	ble.n	8000a14 <__aeabi_dadd+0x29c>
 8000a12:	e183      	b.n	8000d1c <__aeabi_dadd+0x5a4>
 8000a14:	2420      	movs	r4, #32
 8000a16:	0005      	movs	r5, r0
 8000a18:	1ae4      	subs	r4, r4, r3
 8000a1a:	000f      	movs	r7, r1
 8000a1c:	40dd      	lsrs	r5, r3
 8000a1e:	40d9      	lsrs	r1, r3
 8000a20:	40a0      	lsls	r0, r4
 8000a22:	4643      	mov	r3, r8
 8000a24:	40a7      	lsls	r7, r4
 8000a26:	1a5b      	subs	r3, r3, r1
 8000a28:	1e44      	subs	r4, r0, #1
 8000a2a:	41a0      	sbcs	r0, r4
 8000a2c:	4698      	mov	r8, r3
 8000a2e:	432f      	orrs	r7, r5
 8000a30:	4338      	orrs	r0, r7
 8000a32:	1a17      	subs	r7, r2, r0
 8000a34:	42ba      	cmp	r2, r7
 8000a36:	4192      	sbcs	r2, r2
 8000a38:	4643      	mov	r3, r8
 8000a3a:	4252      	negs	r2, r2
 8000a3c:	1a99      	subs	r1, r3, r2
 8000a3e:	4664      	mov	r4, ip
 8000a40:	0035      	movs	r5, r6
 8000a42:	e6ca      	b.n	80007da <__aeabi_dadd+0x62>
 8000a44:	2207      	movs	r2, #7
 8000a46:	403a      	ands	r2, r7
 8000a48:	2a00      	cmp	r2, #0
 8000a4a:	d000      	beq.n	8000a4e <__aeabi_dadd+0x2d6>
 8000a4c:	e6f6      	b.n	800083c <__aeabi_dadd+0xc4>
 8000a4e:	074b      	lsls	r3, r1, #29
 8000a50:	08ca      	lsrs	r2, r1, #3
 8000a52:	4948      	ldr	r1, [pc, #288]	; (8000b74 <__aeabi_dadd+0x3fc>)
 8000a54:	08ff      	lsrs	r7, r7, #3
 8000a56:	433b      	orrs	r3, r7
 8000a58:	428d      	cmp	r5, r1
 8000a5a:	d196      	bne.n	800098a <__aeabi_dadd+0x212>
 8000a5c:	0019      	movs	r1, r3
 8000a5e:	4311      	orrs	r1, r2
 8000a60:	d100      	bne.n	8000a64 <__aeabi_dadd+0x2ec>
 8000a62:	e19e      	b.n	8000da2 <__aeabi_dadd+0x62a>
 8000a64:	2180      	movs	r1, #128	; 0x80
 8000a66:	0309      	lsls	r1, r1, #12
 8000a68:	430a      	orrs	r2, r1
 8000a6a:	0312      	lsls	r2, r2, #12
 8000a6c:	0b12      	lsrs	r2, r2, #12
 8000a6e:	4d41      	ldr	r5, [pc, #260]	; (8000b74 <__aeabi_dadd+0x3fc>)
 8000a70:	e78f      	b.n	8000992 <__aeabi_dadd+0x21a>
 8000a72:	0015      	movs	r5, r2
 8000a74:	2200      	movs	r2, #0
 8000a76:	2300      	movs	r3, #0
 8000a78:	e78b      	b.n	8000992 <__aeabi_dadd+0x21a>
 8000a7a:	2b00      	cmp	r3, #0
 8000a7c:	d000      	beq.n	8000a80 <__aeabi_dadd+0x308>
 8000a7e:	e0c7      	b.n	8000c10 <__aeabi_dadd+0x498>
 8000a80:	1c6b      	adds	r3, r5, #1
 8000a82:	055f      	lsls	r7, r3, #21
 8000a84:	0d7f      	lsrs	r7, r7, #21
 8000a86:	2f01      	cmp	r7, #1
 8000a88:	dc00      	bgt.n	8000a8c <__aeabi_dadd+0x314>
 8000a8a:	e0f1      	b.n	8000c70 <__aeabi_dadd+0x4f8>
 8000a8c:	4d39      	ldr	r5, [pc, #228]	; (8000b74 <__aeabi_dadd+0x3fc>)
 8000a8e:	42ab      	cmp	r3, r5
 8000a90:	d100      	bne.n	8000a94 <__aeabi_dadd+0x31c>
 8000a92:	e0b9      	b.n	8000c08 <__aeabi_dadd+0x490>
 8000a94:	1885      	adds	r5, r0, r2
 8000a96:	000a      	movs	r2, r1
 8000a98:	4285      	cmp	r5, r0
 8000a9a:	4189      	sbcs	r1, r1
 8000a9c:	4442      	add	r2, r8
 8000a9e:	4249      	negs	r1, r1
 8000aa0:	1851      	adds	r1, r2, r1
 8000aa2:	2207      	movs	r2, #7
 8000aa4:	07cf      	lsls	r7, r1, #31
 8000aa6:	086d      	lsrs	r5, r5, #1
 8000aa8:	432f      	orrs	r7, r5
 8000aaa:	0849      	lsrs	r1, r1, #1
 8000aac:	403a      	ands	r2, r7
 8000aae:	001d      	movs	r5, r3
 8000ab0:	e6c2      	b.n	8000838 <__aeabi_dadd+0xc0>
 8000ab2:	2207      	movs	r2, #7
 8000ab4:	4930      	ldr	r1, [pc, #192]	; (8000b78 <__aeabi_dadd+0x400>)
 8000ab6:	1aed      	subs	r5, r5, r3
 8000ab8:	4031      	ands	r1, r6
 8000aba:	403a      	ands	r2, r7
 8000abc:	e6bc      	b.n	8000838 <__aeabi_dadd+0xc0>
 8000abe:	003e      	movs	r6, r7
 8000ac0:	3828      	subs	r0, #40	; 0x28
 8000ac2:	4086      	lsls	r6, r0
 8000ac4:	2700      	movs	r7, #0
 8000ac6:	e69f      	b.n	8000808 <__aeabi_dadd+0x90>
 8000ac8:	0038      	movs	r0, r7
 8000aca:	f001 fc45 	bl	8002358 <__clzsi2>
 8000ace:	3020      	adds	r0, #32
 8000ad0:	e68e      	b.n	80007f0 <__aeabi_dadd+0x78>
 8000ad2:	4643      	mov	r3, r8
 8000ad4:	4313      	orrs	r3, r2
 8000ad6:	001f      	movs	r7, r3
 8000ad8:	1e7a      	subs	r2, r7, #1
 8000ada:	4197      	sbcs	r7, r2
 8000adc:	1bc7      	subs	r7, r0, r7
 8000ade:	42b8      	cmp	r0, r7
 8000ae0:	4180      	sbcs	r0, r0
 8000ae2:	4240      	negs	r0, r0
 8000ae4:	1a09      	subs	r1, r1, r0
 8000ae6:	e678      	b.n	80007da <__aeabi_dadd+0x62>
 8000ae8:	000e      	movs	r6, r1
 8000aea:	003b      	movs	r3, r7
 8000aec:	4306      	orrs	r6, r0
 8000aee:	4313      	orrs	r3, r2
 8000af0:	2d00      	cmp	r5, #0
 8000af2:	d161      	bne.n	8000bb8 <__aeabi_dadd+0x440>
 8000af4:	2e00      	cmp	r6, #0
 8000af6:	d000      	beq.n	8000afa <__aeabi_dadd+0x382>
 8000af8:	e0f4      	b.n	8000ce4 <__aeabi_dadd+0x56c>
 8000afa:	2b00      	cmp	r3, #0
 8000afc:	d100      	bne.n	8000b00 <__aeabi_dadd+0x388>
 8000afe:	e11b      	b.n	8000d38 <__aeabi_dadd+0x5c0>
 8000b00:	4664      	mov	r4, ip
 8000b02:	0039      	movs	r1, r7
 8000b04:	0010      	movs	r0, r2
 8000b06:	e739      	b.n	800097c <__aeabi_dadd+0x204>
 8000b08:	4f1a      	ldr	r7, [pc, #104]	; (8000b74 <__aeabi_dadd+0x3fc>)
 8000b0a:	42bb      	cmp	r3, r7
 8000b0c:	d07a      	beq.n	8000c04 <__aeabi_dadd+0x48c>
 8000b0e:	0033      	movs	r3, r6
 8000b10:	e6ff      	b.n	8000912 <__aeabi_dadd+0x19a>
 8000b12:	0030      	movs	r0, r6
 8000b14:	3d1f      	subs	r5, #31
 8000b16:	40e8      	lsrs	r0, r5
 8000b18:	2b20      	cmp	r3, #32
 8000b1a:	d003      	beq.n	8000b24 <__aeabi_dadd+0x3ac>
 8000b1c:	2140      	movs	r1, #64	; 0x40
 8000b1e:	1acb      	subs	r3, r1, r3
 8000b20:	409e      	lsls	r6, r3
 8000b22:	4337      	orrs	r7, r6
 8000b24:	1e7b      	subs	r3, r7, #1
 8000b26:	419f      	sbcs	r7, r3
 8000b28:	2207      	movs	r2, #7
 8000b2a:	4307      	orrs	r7, r0
 8000b2c:	403a      	ands	r2, r7
 8000b2e:	2100      	movs	r1, #0
 8000b30:	2500      	movs	r5, #0
 8000b32:	e789      	b.n	8000a48 <__aeabi_dadd+0x2d0>
 8000b34:	1a17      	subs	r7, r2, r0
 8000b36:	4643      	mov	r3, r8
 8000b38:	42ba      	cmp	r2, r7
 8000b3a:	41b6      	sbcs	r6, r6
 8000b3c:	1a59      	subs	r1, r3, r1
 8000b3e:	4276      	negs	r6, r6
 8000b40:	1b8e      	subs	r6, r1, r6
 8000b42:	4664      	mov	r4, ip
 8000b44:	e64e      	b.n	80007e4 <__aeabi_dadd+0x6c>
 8000b46:	2b1f      	cmp	r3, #31
 8000b48:	dd00      	ble.n	8000b4c <__aeabi_dadd+0x3d4>
 8000b4a:	e0ad      	b.n	8000ca8 <__aeabi_dadd+0x530>
 8000b4c:	2620      	movs	r6, #32
 8000b4e:	4647      	mov	r7, r8
 8000b50:	1af6      	subs	r6, r6, r3
 8000b52:	40b7      	lsls	r7, r6
 8000b54:	46b9      	mov	r9, r7
 8000b56:	0017      	movs	r7, r2
 8000b58:	46b2      	mov	sl, r6
 8000b5a:	40df      	lsrs	r7, r3
 8000b5c:	464e      	mov	r6, r9
 8000b5e:	433e      	orrs	r6, r7
 8000b60:	0037      	movs	r7, r6
 8000b62:	4656      	mov	r6, sl
 8000b64:	40b2      	lsls	r2, r6
 8000b66:	1e56      	subs	r6, r2, #1
 8000b68:	41b2      	sbcs	r2, r6
 8000b6a:	4317      	orrs	r7, r2
 8000b6c:	4642      	mov	r2, r8
 8000b6e:	40da      	lsrs	r2, r3
 8000b70:	1889      	adds	r1, r1, r2
 8000b72:	e6ae      	b.n	80008d2 <__aeabi_dadd+0x15a>
 8000b74:	000007ff 	.word	0x000007ff
 8000b78:	ff7fffff 	.word	0xff7fffff
 8000b7c:	800fffff 	.word	0x800fffff
 8000b80:	2620      	movs	r6, #32
 8000b82:	4647      	mov	r7, r8
 8000b84:	1af6      	subs	r6, r6, r3
 8000b86:	40b7      	lsls	r7, r6
 8000b88:	46b9      	mov	r9, r7
 8000b8a:	0017      	movs	r7, r2
 8000b8c:	46b2      	mov	sl, r6
 8000b8e:	40df      	lsrs	r7, r3
 8000b90:	464e      	mov	r6, r9
 8000b92:	433e      	orrs	r6, r7
 8000b94:	0037      	movs	r7, r6
 8000b96:	4656      	mov	r6, sl
 8000b98:	40b2      	lsls	r2, r6
 8000b9a:	1e56      	subs	r6, r2, #1
 8000b9c:	41b2      	sbcs	r2, r6
 8000b9e:	4317      	orrs	r7, r2
 8000ba0:	4642      	mov	r2, r8
 8000ba2:	40da      	lsrs	r2, r3
 8000ba4:	1a89      	subs	r1, r1, r2
 8000ba6:	e799      	b.n	8000adc <__aeabi_dadd+0x364>
 8000ba8:	4c7f      	ldr	r4, [pc, #508]	; (8000da8 <__aeabi_dadd+0x630>)
 8000baa:	42a6      	cmp	r6, r4
 8000bac:	d05b      	beq.n	8000c66 <__aeabi_dadd+0x4ee>
 8000bae:	2480      	movs	r4, #128	; 0x80
 8000bb0:	0424      	lsls	r4, r4, #16
 8000bb2:	425b      	negs	r3, r3
 8000bb4:	4321      	orrs	r1, r4
 8000bb6:	e727      	b.n	8000a08 <__aeabi_dadd+0x290>
 8000bb8:	2e00      	cmp	r6, #0
 8000bba:	d10c      	bne.n	8000bd6 <__aeabi_dadd+0x45e>
 8000bbc:	2b00      	cmp	r3, #0
 8000bbe:	d100      	bne.n	8000bc2 <__aeabi_dadd+0x44a>
 8000bc0:	e0cb      	b.n	8000d5a <__aeabi_dadd+0x5e2>
 8000bc2:	4664      	mov	r4, ip
 8000bc4:	0039      	movs	r1, r7
 8000bc6:	0010      	movs	r0, r2
 8000bc8:	4d77      	ldr	r5, [pc, #476]	; (8000da8 <__aeabi_dadd+0x630>)
 8000bca:	e6d7      	b.n	800097c <__aeabi_dadd+0x204>
 8000bcc:	4f76      	ldr	r7, [pc, #472]	; (8000da8 <__aeabi_dadd+0x630>)
 8000bce:	42bb      	cmp	r3, r7
 8000bd0:	d018      	beq.n	8000c04 <__aeabi_dadd+0x48c>
 8000bd2:	0033      	movs	r3, r6
 8000bd4:	e675      	b.n	80008c2 <__aeabi_dadd+0x14a>
 8000bd6:	2b00      	cmp	r3, #0
 8000bd8:	d014      	beq.n	8000c04 <__aeabi_dadd+0x48c>
 8000bda:	074b      	lsls	r3, r1, #29
 8000bdc:	08c0      	lsrs	r0, r0, #3
 8000bde:	4318      	orrs	r0, r3
 8000be0:	2380      	movs	r3, #128	; 0x80
 8000be2:	08c9      	lsrs	r1, r1, #3
 8000be4:	031b      	lsls	r3, r3, #12
 8000be6:	4219      	tst	r1, r3
 8000be8:	d007      	beq.n	8000bfa <__aeabi_dadd+0x482>
 8000bea:	08fc      	lsrs	r4, r7, #3
 8000bec:	421c      	tst	r4, r3
 8000bee:	d104      	bne.n	8000bfa <__aeabi_dadd+0x482>
 8000bf0:	0779      	lsls	r1, r7, #29
 8000bf2:	08d0      	lsrs	r0, r2, #3
 8000bf4:	4308      	orrs	r0, r1
 8000bf6:	46e1      	mov	r9, ip
 8000bf8:	0021      	movs	r1, r4
 8000bfa:	464c      	mov	r4, r9
 8000bfc:	0f42      	lsrs	r2, r0, #29
 8000bfe:	00c9      	lsls	r1, r1, #3
 8000c00:	4311      	orrs	r1, r2
 8000c02:	00c0      	lsls	r0, r0, #3
 8000c04:	4d68      	ldr	r5, [pc, #416]	; (8000da8 <__aeabi_dadd+0x630>)
 8000c06:	e6b9      	b.n	800097c <__aeabi_dadd+0x204>
 8000c08:	001d      	movs	r5, r3
 8000c0a:	2200      	movs	r2, #0
 8000c0c:	2300      	movs	r3, #0
 8000c0e:	e6c0      	b.n	8000992 <__aeabi_dadd+0x21a>
 8000c10:	2d00      	cmp	r5, #0
 8000c12:	d15b      	bne.n	8000ccc <__aeabi_dadd+0x554>
 8000c14:	000d      	movs	r5, r1
 8000c16:	4305      	orrs	r5, r0
 8000c18:	d100      	bne.n	8000c1c <__aeabi_dadd+0x4a4>
 8000c1a:	e6e2      	b.n	80009e2 <__aeabi_dadd+0x26a>
 8000c1c:	1c5d      	adds	r5, r3, #1
 8000c1e:	d100      	bne.n	8000c22 <__aeabi_dadd+0x4aa>
 8000c20:	e0b0      	b.n	8000d84 <__aeabi_dadd+0x60c>
 8000c22:	4d61      	ldr	r5, [pc, #388]	; (8000da8 <__aeabi_dadd+0x630>)
 8000c24:	42ae      	cmp	r6, r5
 8000c26:	d01f      	beq.n	8000c68 <__aeabi_dadd+0x4f0>
 8000c28:	43db      	mvns	r3, r3
 8000c2a:	2b38      	cmp	r3, #56	; 0x38
 8000c2c:	dc71      	bgt.n	8000d12 <__aeabi_dadd+0x59a>
 8000c2e:	2b1f      	cmp	r3, #31
 8000c30:	dd00      	ble.n	8000c34 <__aeabi_dadd+0x4bc>
 8000c32:	e096      	b.n	8000d62 <__aeabi_dadd+0x5ea>
 8000c34:	2520      	movs	r5, #32
 8000c36:	000f      	movs	r7, r1
 8000c38:	1aed      	subs	r5, r5, r3
 8000c3a:	40af      	lsls	r7, r5
 8000c3c:	46b9      	mov	r9, r7
 8000c3e:	0007      	movs	r7, r0
 8000c40:	46aa      	mov	sl, r5
 8000c42:	40df      	lsrs	r7, r3
 8000c44:	464d      	mov	r5, r9
 8000c46:	433d      	orrs	r5, r7
 8000c48:	002f      	movs	r7, r5
 8000c4a:	4655      	mov	r5, sl
 8000c4c:	40a8      	lsls	r0, r5
 8000c4e:	40d9      	lsrs	r1, r3
 8000c50:	1e45      	subs	r5, r0, #1
 8000c52:	41a8      	sbcs	r0, r5
 8000c54:	4488      	add	r8, r1
 8000c56:	4307      	orrs	r7, r0
 8000c58:	18bf      	adds	r7, r7, r2
 8000c5a:	4297      	cmp	r7, r2
 8000c5c:	4192      	sbcs	r2, r2
 8000c5e:	4251      	negs	r1, r2
 8000c60:	4441      	add	r1, r8
 8000c62:	0035      	movs	r5, r6
 8000c64:	e63a      	b.n	80008dc <__aeabi_dadd+0x164>
 8000c66:	4664      	mov	r4, ip
 8000c68:	0035      	movs	r5, r6
 8000c6a:	4641      	mov	r1, r8
 8000c6c:	0010      	movs	r0, r2
 8000c6e:	e685      	b.n	800097c <__aeabi_dadd+0x204>
 8000c70:	000b      	movs	r3, r1
 8000c72:	4303      	orrs	r3, r0
 8000c74:	2d00      	cmp	r5, #0
 8000c76:	d000      	beq.n	8000c7a <__aeabi_dadd+0x502>
 8000c78:	e663      	b.n	8000942 <__aeabi_dadd+0x1ca>
 8000c7a:	2b00      	cmp	r3, #0
 8000c7c:	d0f5      	beq.n	8000c6a <__aeabi_dadd+0x4f2>
 8000c7e:	4643      	mov	r3, r8
 8000c80:	4313      	orrs	r3, r2
 8000c82:	d100      	bne.n	8000c86 <__aeabi_dadd+0x50e>
 8000c84:	e67a      	b.n	800097c <__aeabi_dadd+0x204>
 8000c86:	1887      	adds	r7, r0, r2
 8000c88:	4287      	cmp	r7, r0
 8000c8a:	4180      	sbcs	r0, r0
 8000c8c:	2207      	movs	r2, #7
 8000c8e:	4441      	add	r1, r8
 8000c90:	4240      	negs	r0, r0
 8000c92:	1809      	adds	r1, r1, r0
 8000c94:	403a      	ands	r2, r7
 8000c96:	020b      	lsls	r3, r1, #8
 8000c98:	d400      	bmi.n	8000c9c <__aeabi_dadd+0x524>
 8000c9a:	e6d5      	b.n	8000a48 <__aeabi_dadd+0x2d0>
 8000c9c:	4b43      	ldr	r3, [pc, #268]	; (8000dac <__aeabi_dadd+0x634>)
 8000c9e:	3501      	adds	r5, #1
 8000ca0:	4019      	ands	r1, r3
 8000ca2:	e5c9      	b.n	8000838 <__aeabi_dadd+0xc0>
 8000ca4:	0038      	movs	r0, r7
 8000ca6:	e669      	b.n	800097c <__aeabi_dadd+0x204>
 8000ca8:	001e      	movs	r6, r3
 8000caa:	4647      	mov	r7, r8
 8000cac:	3e20      	subs	r6, #32
 8000cae:	40f7      	lsrs	r7, r6
 8000cb0:	46bc      	mov	ip, r7
 8000cb2:	2b20      	cmp	r3, #32
 8000cb4:	d004      	beq.n	8000cc0 <__aeabi_dadd+0x548>
 8000cb6:	2640      	movs	r6, #64	; 0x40
 8000cb8:	1af3      	subs	r3, r6, r3
 8000cba:	4646      	mov	r6, r8
 8000cbc:	409e      	lsls	r6, r3
 8000cbe:	4332      	orrs	r2, r6
 8000cc0:	0017      	movs	r7, r2
 8000cc2:	4663      	mov	r3, ip
 8000cc4:	1e7a      	subs	r2, r7, #1
 8000cc6:	4197      	sbcs	r7, r2
 8000cc8:	431f      	orrs	r7, r3
 8000cca:	e602      	b.n	80008d2 <__aeabi_dadd+0x15a>
 8000ccc:	4d36      	ldr	r5, [pc, #216]	; (8000da8 <__aeabi_dadd+0x630>)
 8000cce:	42ae      	cmp	r6, r5
 8000cd0:	d0ca      	beq.n	8000c68 <__aeabi_dadd+0x4f0>
 8000cd2:	2580      	movs	r5, #128	; 0x80
 8000cd4:	042d      	lsls	r5, r5, #16
 8000cd6:	425b      	negs	r3, r3
 8000cd8:	4329      	orrs	r1, r5
 8000cda:	e7a6      	b.n	8000c2a <__aeabi_dadd+0x4b2>
 8000cdc:	4308      	orrs	r0, r1
 8000cde:	1e41      	subs	r1, r0, #1
 8000ce0:	4188      	sbcs	r0, r1
 8000ce2:	e6a6      	b.n	8000a32 <__aeabi_dadd+0x2ba>
 8000ce4:	2b00      	cmp	r3, #0
 8000ce6:	d100      	bne.n	8000cea <__aeabi_dadd+0x572>
 8000ce8:	e648      	b.n	800097c <__aeabi_dadd+0x204>
 8000cea:	1a87      	subs	r7, r0, r2
 8000cec:	4643      	mov	r3, r8
 8000cee:	42b8      	cmp	r0, r7
 8000cf0:	41b6      	sbcs	r6, r6
 8000cf2:	1acb      	subs	r3, r1, r3
 8000cf4:	4276      	negs	r6, r6
 8000cf6:	1b9e      	subs	r6, r3, r6
 8000cf8:	0233      	lsls	r3, r6, #8
 8000cfa:	d54b      	bpl.n	8000d94 <__aeabi_dadd+0x61c>
 8000cfc:	1a17      	subs	r7, r2, r0
 8000cfe:	4643      	mov	r3, r8
 8000d00:	42ba      	cmp	r2, r7
 8000d02:	4192      	sbcs	r2, r2
 8000d04:	1a59      	subs	r1, r3, r1
 8000d06:	4252      	negs	r2, r2
 8000d08:	1a89      	subs	r1, r1, r2
 8000d0a:	2207      	movs	r2, #7
 8000d0c:	4664      	mov	r4, ip
 8000d0e:	403a      	ands	r2, r7
 8000d10:	e592      	b.n	8000838 <__aeabi_dadd+0xc0>
 8000d12:	4301      	orrs	r1, r0
 8000d14:	000f      	movs	r7, r1
 8000d16:	1e79      	subs	r1, r7, #1
 8000d18:	418f      	sbcs	r7, r1
 8000d1a:	e79d      	b.n	8000c58 <__aeabi_dadd+0x4e0>
 8000d1c:	001c      	movs	r4, r3
 8000d1e:	000f      	movs	r7, r1
 8000d20:	3c20      	subs	r4, #32
 8000d22:	40e7      	lsrs	r7, r4
 8000d24:	2b20      	cmp	r3, #32
 8000d26:	d003      	beq.n	8000d30 <__aeabi_dadd+0x5b8>
 8000d28:	2440      	movs	r4, #64	; 0x40
 8000d2a:	1ae3      	subs	r3, r4, r3
 8000d2c:	4099      	lsls	r1, r3
 8000d2e:	4308      	orrs	r0, r1
 8000d30:	1e41      	subs	r1, r0, #1
 8000d32:	4188      	sbcs	r0, r1
 8000d34:	4338      	orrs	r0, r7
 8000d36:	e67c      	b.n	8000a32 <__aeabi_dadd+0x2ba>
 8000d38:	2200      	movs	r2, #0
 8000d3a:	2400      	movs	r4, #0
 8000d3c:	e625      	b.n	800098a <__aeabi_dadd+0x212>
 8000d3e:	1a17      	subs	r7, r2, r0
 8000d40:	4643      	mov	r3, r8
 8000d42:	42ba      	cmp	r2, r7
 8000d44:	4192      	sbcs	r2, r2
 8000d46:	1a59      	subs	r1, r3, r1
 8000d48:	4252      	negs	r2, r2
 8000d4a:	1a89      	subs	r1, r1, r2
 8000d4c:	4664      	mov	r4, ip
 8000d4e:	0035      	movs	r5, r6
 8000d50:	e543      	b.n	80007da <__aeabi_dadd+0x62>
 8000d52:	4641      	mov	r1, r8
 8000d54:	0010      	movs	r0, r2
 8000d56:	4d14      	ldr	r5, [pc, #80]	; (8000da8 <__aeabi_dadd+0x630>)
 8000d58:	e610      	b.n	800097c <__aeabi_dadd+0x204>
 8000d5a:	2280      	movs	r2, #128	; 0x80
 8000d5c:	2400      	movs	r4, #0
 8000d5e:	0312      	lsls	r2, r2, #12
 8000d60:	e680      	b.n	8000a64 <__aeabi_dadd+0x2ec>
 8000d62:	001d      	movs	r5, r3
 8000d64:	000f      	movs	r7, r1
 8000d66:	3d20      	subs	r5, #32
 8000d68:	40ef      	lsrs	r7, r5
 8000d6a:	46bc      	mov	ip, r7
 8000d6c:	2b20      	cmp	r3, #32
 8000d6e:	d003      	beq.n	8000d78 <__aeabi_dadd+0x600>
 8000d70:	2540      	movs	r5, #64	; 0x40
 8000d72:	1aeb      	subs	r3, r5, r3
 8000d74:	4099      	lsls	r1, r3
 8000d76:	4308      	orrs	r0, r1
 8000d78:	0007      	movs	r7, r0
 8000d7a:	4663      	mov	r3, ip
 8000d7c:	1e78      	subs	r0, r7, #1
 8000d7e:	4187      	sbcs	r7, r0
 8000d80:	431f      	orrs	r7, r3
 8000d82:	e769      	b.n	8000c58 <__aeabi_dadd+0x4e0>
 8000d84:	1887      	adds	r7, r0, r2
 8000d86:	4297      	cmp	r7, r2
 8000d88:	419b      	sbcs	r3, r3
 8000d8a:	4441      	add	r1, r8
 8000d8c:	425b      	negs	r3, r3
 8000d8e:	18c9      	adds	r1, r1, r3
 8000d90:	0035      	movs	r5, r6
 8000d92:	e5a3      	b.n	80008dc <__aeabi_dadd+0x164>
 8000d94:	003b      	movs	r3, r7
 8000d96:	4333      	orrs	r3, r6
 8000d98:	d0ce      	beq.n	8000d38 <__aeabi_dadd+0x5c0>
 8000d9a:	2207      	movs	r2, #7
 8000d9c:	0031      	movs	r1, r6
 8000d9e:	403a      	ands	r2, r7
 8000da0:	e652      	b.n	8000a48 <__aeabi_dadd+0x2d0>
 8000da2:	2300      	movs	r3, #0
 8000da4:	001a      	movs	r2, r3
 8000da6:	e5f4      	b.n	8000992 <__aeabi_dadd+0x21a>
 8000da8:	000007ff 	.word	0x000007ff
 8000dac:	ff7fffff 	.word	0xff7fffff

08000db0 <__aeabi_ddiv>:
 8000db0:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000db2:	4657      	mov	r7, sl
 8000db4:	46de      	mov	lr, fp
 8000db6:	464e      	mov	r6, r9
 8000db8:	4645      	mov	r5, r8
 8000dba:	b5e0      	push	{r5, r6, r7, lr}
 8000dbc:	4683      	mov	fp, r0
 8000dbe:	0007      	movs	r7, r0
 8000dc0:	030e      	lsls	r6, r1, #12
 8000dc2:	0048      	lsls	r0, r1, #1
 8000dc4:	b085      	sub	sp, #20
 8000dc6:	4692      	mov	sl, r2
 8000dc8:	001c      	movs	r4, r3
 8000dca:	0b36      	lsrs	r6, r6, #12
 8000dcc:	0d40      	lsrs	r0, r0, #21
 8000dce:	0fcd      	lsrs	r5, r1, #31
 8000dd0:	2800      	cmp	r0, #0
 8000dd2:	d100      	bne.n	8000dd6 <__aeabi_ddiv+0x26>
 8000dd4:	e09d      	b.n	8000f12 <__aeabi_ddiv+0x162>
 8000dd6:	4b95      	ldr	r3, [pc, #596]	; (800102c <__aeabi_ddiv+0x27c>)
 8000dd8:	4298      	cmp	r0, r3
 8000dda:	d039      	beq.n	8000e50 <__aeabi_ddiv+0xa0>
 8000ddc:	2380      	movs	r3, #128	; 0x80
 8000dde:	00f6      	lsls	r6, r6, #3
 8000de0:	041b      	lsls	r3, r3, #16
 8000de2:	431e      	orrs	r6, r3
 8000de4:	4a92      	ldr	r2, [pc, #584]	; (8001030 <__aeabi_ddiv+0x280>)
 8000de6:	0f7b      	lsrs	r3, r7, #29
 8000de8:	4333      	orrs	r3, r6
 8000dea:	4699      	mov	r9, r3
 8000dec:	4694      	mov	ip, r2
 8000dee:	0003      	movs	r3, r0
 8000df0:	4463      	add	r3, ip
 8000df2:	9300      	str	r3, [sp, #0]
 8000df4:	2300      	movs	r3, #0
 8000df6:	2600      	movs	r6, #0
 8000df8:	00ff      	lsls	r7, r7, #3
 8000dfa:	9302      	str	r3, [sp, #8]
 8000dfc:	0323      	lsls	r3, r4, #12
 8000dfe:	0b1b      	lsrs	r3, r3, #12
 8000e00:	4698      	mov	r8, r3
 8000e02:	0063      	lsls	r3, r4, #1
 8000e04:	0fe4      	lsrs	r4, r4, #31
 8000e06:	4652      	mov	r2, sl
 8000e08:	0d5b      	lsrs	r3, r3, #21
 8000e0a:	9401      	str	r4, [sp, #4]
 8000e0c:	d100      	bne.n	8000e10 <__aeabi_ddiv+0x60>
 8000e0e:	e0b3      	b.n	8000f78 <__aeabi_ddiv+0x1c8>
 8000e10:	4986      	ldr	r1, [pc, #536]	; (800102c <__aeabi_ddiv+0x27c>)
 8000e12:	428b      	cmp	r3, r1
 8000e14:	d100      	bne.n	8000e18 <__aeabi_ddiv+0x68>
 8000e16:	e09e      	b.n	8000f56 <__aeabi_ddiv+0x1a6>
 8000e18:	4642      	mov	r2, r8
 8000e1a:	00d1      	lsls	r1, r2, #3
 8000e1c:	2280      	movs	r2, #128	; 0x80
 8000e1e:	0412      	lsls	r2, r2, #16
 8000e20:	430a      	orrs	r2, r1
 8000e22:	4651      	mov	r1, sl
 8000e24:	0f49      	lsrs	r1, r1, #29
 8000e26:	4311      	orrs	r1, r2
 8000e28:	468b      	mov	fp, r1
 8000e2a:	4981      	ldr	r1, [pc, #516]	; (8001030 <__aeabi_ddiv+0x280>)
 8000e2c:	4652      	mov	r2, sl
 8000e2e:	468c      	mov	ip, r1
 8000e30:	9900      	ldr	r1, [sp, #0]
 8000e32:	4463      	add	r3, ip
 8000e34:	1acb      	subs	r3, r1, r3
 8000e36:	2100      	movs	r1, #0
 8000e38:	00d2      	lsls	r2, r2, #3
 8000e3a:	9300      	str	r3, [sp, #0]
 8000e3c:	002b      	movs	r3, r5
 8000e3e:	4063      	eors	r3, r4
 8000e40:	469a      	mov	sl, r3
 8000e42:	2e0f      	cmp	r6, #15
 8000e44:	d900      	bls.n	8000e48 <__aeabi_ddiv+0x98>
 8000e46:	e105      	b.n	8001054 <__aeabi_ddiv+0x2a4>
 8000e48:	4b7a      	ldr	r3, [pc, #488]	; (8001034 <__aeabi_ddiv+0x284>)
 8000e4a:	00b6      	lsls	r6, r6, #2
 8000e4c:	599b      	ldr	r3, [r3, r6]
 8000e4e:	469f      	mov	pc, r3
 8000e50:	465b      	mov	r3, fp
 8000e52:	4333      	orrs	r3, r6
 8000e54:	4699      	mov	r9, r3
 8000e56:	d000      	beq.n	8000e5a <__aeabi_ddiv+0xaa>
 8000e58:	e0b8      	b.n	8000fcc <__aeabi_ddiv+0x21c>
 8000e5a:	2302      	movs	r3, #2
 8000e5c:	2608      	movs	r6, #8
 8000e5e:	2700      	movs	r7, #0
 8000e60:	9000      	str	r0, [sp, #0]
 8000e62:	9302      	str	r3, [sp, #8]
 8000e64:	e7ca      	b.n	8000dfc <__aeabi_ddiv+0x4c>
 8000e66:	46cb      	mov	fp, r9
 8000e68:	003a      	movs	r2, r7
 8000e6a:	9902      	ldr	r1, [sp, #8]
 8000e6c:	9501      	str	r5, [sp, #4]
 8000e6e:	9b01      	ldr	r3, [sp, #4]
 8000e70:	469a      	mov	sl, r3
 8000e72:	2902      	cmp	r1, #2
 8000e74:	d027      	beq.n	8000ec6 <__aeabi_ddiv+0x116>
 8000e76:	2903      	cmp	r1, #3
 8000e78:	d100      	bne.n	8000e7c <__aeabi_ddiv+0xcc>
 8000e7a:	e280      	b.n	800137e <__aeabi_ddiv+0x5ce>
 8000e7c:	2901      	cmp	r1, #1
 8000e7e:	d044      	beq.n	8000f0a <__aeabi_ddiv+0x15a>
 8000e80:	496d      	ldr	r1, [pc, #436]	; (8001038 <__aeabi_ddiv+0x288>)
 8000e82:	9b00      	ldr	r3, [sp, #0]
 8000e84:	468c      	mov	ip, r1
 8000e86:	4463      	add	r3, ip
 8000e88:	001c      	movs	r4, r3
 8000e8a:	2c00      	cmp	r4, #0
 8000e8c:	dd38      	ble.n	8000f00 <__aeabi_ddiv+0x150>
 8000e8e:	0753      	lsls	r3, r2, #29
 8000e90:	d000      	beq.n	8000e94 <__aeabi_ddiv+0xe4>
 8000e92:	e213      	b.n	80012bc <__aeabi_ddiv+0x50c>
 8000e94:	08d2      	lsrs	r2, r2, #3
 8000e96:	465b      	mov	r3, fp
 8000e98:	01db      	lsls	r3, r3, #7
 8000e9a:	d509      	bpl.n	8000eb0 <__aeabi_ddiv+0x100>
 8000e9c:	4659      	mov	r1, fp
 8000e9e:	4b67      	ldr	r3, [pc, #412]	; (800103c <__aeabi_ddiv+0x28c>)
 8000ea0:	4019      	ands	r1, r3
 8000ea2:	468b      	mov	fp, r1
 8000ea4:	2180      	movs	r1, #128	; 0x80
 8000ea6:	00c9      	lsls	r1, r1, #3
 8000ea8:	468c      	mov	ip, r1
 8000eaa:	9b00      	ldr	r3, [sp, #0]
 8000eac:	4463      	add	r3, ip
 8000eae:	001c      	movs	r4, r3
 8000eb0:	4b63      	ldr	r3, [pc, #396]	; (8001040 <__aeabi_ddiv+0x290>)
 8000eb2:	429c      	cmp	r4, r3
 8000eb4:	dc07      	bgt.n	8000ec6 <__aeabi_ddiv+0x116>
 8000eb6:	465b      	mov	r3, fp
 8000eb8:	0564      	lsls	r4, r4, #21
 8000eba:	075f      	lsls	r7, r3, #29
 8000ebc:	025b      	lsls	r3, r3, #9
 8000ebe:	4317      	orrs	r7, r2
 8000ec0:	0b1b      	lsrs	r3, r3, #12
 8000ec2:	0d62      	lsrs	r2, r4, #21
 8000ec4:	e002      	b.n	8000ecc <__aeabi_ddiv+0x11c>
 8000ec6:	2300      	movs	r3, #0
 8000ec8:	2700      	movs	r7, #0
 8000eca:	4a58      	ldr	r2, [pc, #352]	; (800102c <__aeabi_ddiv+0x27c>)
 8000ecc:	2100      	movs	r1, #0
 8000ece:	031b      	lsls	r3, r3, #12
 8000ed0:	0b1c      	lsrs	r4, r3, #12
 8000ed2:	0d0b      	lsrs	r3, r1, #20
 8000ed4:	051b      	lsls	r3, r3, #20
 8000ed6:	4323      	orrs	r3, r4
 8000ed8:	0514      	lsls	r4, r2, #20
 8000eda:	4a5a      	ldr	r2, [pc, #360]	; (8001044 <__aeabi_ddiv+0x294>)
 8000edc:	0038      	movs	r0, r7
 8000ede:	4013      	ands	r3, r2
 8000ee0:	431c      	orrs	r4, r3
 8000ee2:	4653      	mov	r3, sl
 8000ee4:	0064      	lsls	r4, r4, #1
 8000ee6:	07db      	lsls	r3, r3, #31
 8000ee8:	0864      	lsrs	r4, r4, #1
 8000eea:	431c      	orrs	r4, r3
 8000eec:	0021      	movs	r1, r4
 8000eee:	b005      	add	sp, #20
 8000ef0:	bc3c      	pop	{r2, r3, r4, r5}
 8000ef2:	4690      	mov	r8, r2
 8000ef4:	4699      	mov	r9, r3
 8000ef6:	46a2      	mov	sl, r4
 8000ef8:	46ab      	mov	fp, r5
 8000efa:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000efc:	2201      	movs	r2, #1
 8000efe:	4252      	negs	r2, r2
 8000f00:	2301      	movs	r3, #1
 8000f02:	1b1b      	subs	r3, r3, r4
 8000f04:	2b38      	cmp	r3, #56	; 0x38
 8000f06:	dc00      	bgt.n	8000f0a <__aeabi_ddiv+0x15a>
 8000f08:	e1ad      	b.n	8001266 <__aeabi_ddiv+0x4b6>
 8000f0a:	2200      	movs	r2, #0
 8000f0c:	2300      	movs	r3, #0
 8000f0e:	2700      	movs	r7, #0
 8000f10:	e7dc      	b.n	8000ecc <__aeabi_ddiv+0x11c>
 8000f12:	465b      	mov	r3, fp
 8000f14:	4333      	orrs	r3, r6
 8000f16:	4699      	mov	r9, r3
 8000f18:	d05e      	beq.n	8000fd8 <__aeabi_ddiv+0x228>
 8000f1a:	2e00      	cmp	r6, #0
 8000f1c:	d100      	bne.n	8000f20 <__aeabi_ddiv+0x170>
 8000f1e:	e18a      	b.n	8001236 <__aeabi_ddiv+0x486>
 8000f20:	0030      	movs	r0, r6
 8000f22:	f001 fa19 	bl	8002358 <__clzsi2>
 8000f26:	0003      	movs	r3, r0
 8000f28:	3b0b      	subs	r3, #11
 8000f2a:	2b1c      	cmp	r3, #28
 8000f2c:	dd00      	ble.n	8000f30 <__aeabi_ddiv+0x180>
 8000f2e:	e17b      	b.n	8001228 <__aeabi_ddiv+0x478>
 8000f30:	221d      	movs	r2, #29
 8000f32:	1ad3      	subs	r3, r2, r3
 8000f34:	465a      	mov	r2, fp
 8000f36:	0001      	movs	r1, r0
 8000f38:	40da      	lsrs	r2, r3
 8000f3a:	3908      	subs	r1, #8
 8000f3c:	408e      	lsls	r6, r1
 8000f3e:	0013      	movs	r3, r2
 8000f40:	465f      	mov	r7, fp
 8000f42:	4333      	orrs	r3, r6
 8000f44:	4699      	mov	r9, r3
 8000f46:	408f      	lsls	r7, r1
 8000f48:	4b3f      	ldr	r3, [pc, #252]	; (8001048 <__aeabi_ddiv+0x298>)
 8000f4a:	2600      	movs	r6, #0
 8000f4c:	1a1b      	subs	r3, r3, r0
 8000f4e:	9300      	str	r3, [sp, #0]
 8000f50:	2300      	movs	r3, #0
 8000f52:	9302      	str	r3, [sp, #8]
 8000f54:	e752      	b.n	8000dfc <__aeabi_ddiv+0x4c>
 8000f56:	4641      	mov	r1, r8
 8000f58:	4653      	mov	r3, sl
 8000f5a:	430b      	orrs	r3, r1
 8000f5c:	493b      	ldr	r1, [pc, #236]	; (800104c <__aeabi_ddiv+0x29c>)
 8000f5e:	469b      	mov	fp, r3
 8000f60:	468c      	mov	ip, r1
 8000f62:	9b00      	ldr	r3, [sp, #0]
 8000f64:	4463      	add	r3, ip
 8000f66:	9300      	str	r3, [sp, #0]
 8000f68:	465b      	mov	r3, fp
 8000f6a:	2b00      	cmp	r3, #0
 8000f6c:	d13b      	bne.n	8000fe6 <__aeabi_ddiv+0x236>
 8000f6e:	2302      	movs	r3, #2
 8000f70:	2200      	movs	r2, #0
 8000f72:	431e      	orrs	r6, r3
 8000f74:	2102      	movs	r1, #2
 8000f76:	e761      	b.n	8000e3c <__aeabi_ddiv+0x8c>
 8000f78:	4643      	mov	r3, r8
 8000f7a:	4313      	orrs	r3, r2
 8000f7c:	469b      	mov	fp, r3
 8000f7e:	d037      	beq.n	8000ff0 <__aeabi_ddiv+0x240>
 8000f80:	4643      	mov	r3, r8
 8000f82:	2b00      	cmp	r3, #0
 8000f84:	d100      	bne.n	8000f88 <__aeabi_ddiv+0x1d8>
 8000f86:	e162      	b.n	800124e <__aeabi_ddiv+0x49e>
 8000f88:	4640      	mov	r0, r8
 8000f8a:	f001 f9e5 	bl	8002358 <__clzsi2>
 8000f8e:	0003      	movs	r3, r0
 8000f90:	3b0b      	subs	r3, #11
 8000f92:	2b1c      	cmp	r3, #28
 8000f94:	dd00      	ble.n	8000f98 <__aeabi_ddiv+0x1e8>
 8000f96:	e153      	b.n	8001240 <__aeabi_ddiv+0x490>
 8000f98:	0002      	movs	r2, r0
 8000f9a:	4641      	mov	r1, r8
 8000f9c:	3a08      	subs	r2, #8
 8000f9e:	4091      	lsls	r1, r2
 8000fa0:	4688      	mov	r8, r1
 8000fa2:	211d      	movs	r1, #29
 8000fa4:	1acb      	subs	r3, r1, r3
 8000fa6:	4651      	mov	r1, sl
 8000fa8:	40d9      	lsrs	r1, r3
 8000faa:	000b      	movs	r3, r1
 8000fac:	4641      	mov	r1, r8
 8000fae:	430b      	orrs	r3, r1
 8000fb0:	469b      	mov	fp, r3
 8000fb2:	4653      	mov	r3, sl
 8000fb4:	4093      	lsls	r3, r2
 8000fb6:	001a      	movs	r2, r3
 8000fb8:	9b00      	ldr	r3, [sp, #0]
 8000fba:	4925      	ldr	r1, [pc, #148]	; (8001050 <__aeabi_ddiv+0x2a0>)
 8000fbc:	469c      	mov	ip, r3
 8000fbe:	4460      	add	r0, ip
 8000fc0:	0003      	movs	r3, r0
 8000fc2:	468c      	mov	ip, r1
 8000fc4:	4463      	add	r3, ip
 8000fc6:	9300      	str	r3, [sp, #0]
 8000fc8:	2100      	movs	r1, #0
 8000fca:	e737      	b.n	8000e3c <__aeabi_ddiv+0x8c>
 8000fcc:	2303      	movs	r3, #3
 8000fce:	46b1      	mov	r9, r6
 8000fd0:	9000      	str	r0, [sp, #0]
 8000fd2:	260c      	movs	r6, #12
 8000fd4:	9302      	str	r3, [sp, #8]
 8000fd6:	e711      	b.n	8000dfc <__aeabi_ddiv+0x4c>
 8000fd8:	2300      	movs	r3, #0
 8000fda:	9300      	str	r3, [sp, #0]
 8000fdc:	3301      	adds	r3, #1
 8000fde:	2604      	movs	r6, #4
 8000fe0:	2700      	movs	r7, #0
 8000fe2:	9302      	str	r3, [sp, #8]
 8000fe4:	e70a      	b.n	8000dfc <__aeabi_ddiv+0x4c>
 8000fe6:	2303      	movs	r3, #3
 8000fe8:	46c3      	mov	fp, r8
 8000fea:	431e      	orrs	r6, r3
 8000fec:	2103      	movs	r1, #3
 8000fee:	e725      	b.n	8000e3c <__aeabi_ddiv+0x8c>
 8000ff0:	3301      	adds	r3, #1
 8000ff2:	431e      	orrs	r6, r3
 8000ff4:	2200      	movs	r2, #0
 8000ff6:	2101      	movs	r1, #1
 8000ff8:	e720      	b.n	8000e3c <__aeabi_ddiv+0x8c>
 8000ffa:	2300      	movs	r3, #0
 8000ffc:	469a      	mov	sl, r3
 8000ffe:	2380      	movs	r3, #128	; 0x80
 8001000:	2700      	movs	r7, #0
 8001002:	031b      	lsls	r3, r3, #12
 8001004:	4a09      	ldr	r2, [pc, #36]	; (800102c <__aeabi_ddiv+0x27c>)
 8001006:	e761      	b.n	8000ecc <__aeabi_ddiv+0x11c>
 8001008:	2380      	movs	r3, #128	; 0x80
 800100a:	4649      	mov	r1, r9
 800100c:	031b      	lsls	r3, r3, #12
 800100e:	4219      	tst	r1, r3
 8001010:	d100      	bne.n	8001014 <__aeabi_ddiv+0x264>
 8001012:	e0e2      	b.n	80011da <__aeabi_ddiv+0x42a>
 8001014:	4659      	mov	r1, fp
 8001016:	4219      	tst	r1, r3
 8001018:	d000      	beq.n	800101c <__aeabi_ddiv+0x26c>
 800101a:	e0de      	b.n	80011da <__aeabi_ddiv+0x42a>
 800101c:	430b      	orrs	r3, r1
 800101e:	031b      	lsls	r3, r3, #12
 8001020:	0017      	movs	r7, r2
 8001022:	0b1b      	lsrs	r3, r3, #12
 8001024:	46a2      	mov	sl, r4
 8001026:	4a01      	ldr	r2, [pc, #4]	; (800102c <__aeabi_ddiv+0x27c>)
 8001028:	e750      	b.n	8000ecc <__aeabi_ddiv+0x11c>
 800102a:	46c0      	nop			; (mov r8, r8)
 800102c:	000007ff 	.word	0x000007ff
 8001030:	fffffc01 	.word	0xfffffc01
 8001034:	08006108 	.word	0x08006108
 8001038:	000003ff 	.word	0x000003ff
 800103c:	feffffff 	.word	0xfeffffff
 8001040:	000007fe 	.word	0x000007fe
 8001044:	800fffff 	.word	0x800fffff
 8001048:	fffffc0d 	.word	0xfffffc0d
 800104c:	fffff801 	.word	0xfffff801
 8001050:	000003f3 	.word	0x000003f3
 8001054:	45d9      	cmp	r9, fp
 8001056:	d900      	bls.n	800105a <__aeabi_ddiv+0x2aa>
 8001058:	e0cb      	b.n	80011f2 <__aeabi_ddiv+0x442>
 800105a:	d100      	bne.n	800105e <__aeabi_ddiv+0x2ae>
 800105c:	e0c6      	b.n	80011ec <__aeabi_ddiv+0x43c>
 800105e:	003c      	movs	r4, r7
 8001060:	4648      	mov	r0, r9
 8001062:	2700      	movs	r7, #0
 8001064:	9b00      	ldr	r3, [sp, #0]
 8001066:	3b01      	subs	r3, #1
 8001068:	9300      	str	r3, [sp, #0]
 800106a:	465b      	mov	r3, fp
 800106c:	0e16      	lsrs	r6, r2, #24
 800106e:	021b      	lsls	r3, r3, #8
 8001070:	431e      	orrs	r6, r3
 8001072:	0213      	lsls	r3, r2, #8
 8001074:	4698      	mov	r8, r3
 8001076:	0433      	lsls	r3, r6, #16
 8001078:	0c1b      	lsrs	r3, r3, #16
 800107a:	4699      	mov	r9, r3
 800107c:	0c31      	lsrs	r1, r6, #16
 800107e:	9101      	str	r1, [sp, #4]
 8001080:	f7ff f8da 	bl	8000238 <__aeabi_uidivmod>
 8001084:	464a      	mov	r2, r9
 8001086:	4342      	muls	r2, r0
 8001088:	040b      	lsls	r3, r1, #16
 800108a:	0c21      	lsrs	r1, r4, #16
 800108c:	0005      	movs	r5, r0
 800108e:	4319      	orrs	r1, r3
 8001090:	428a      	cmp	r2, r1
 8001092:	d907      	bls.n	80010a4 <__aeabi_ddiv+0x2f4>
 8001094:	1989      	adds	r1, r1, r6
 8001096:	3d01      	subs	r5, #1
 8001098:	428e      	cmp	r6, r1
 800109a:	d803      	bhi.n	80010a4 <__aeabi_ddiv+0x2f4>
 800109c:	428a      	cmp	r2, r1
 800109e:	d901      	bls.n	80010a4 <__aeabi_ddiv+0x2f4>
 80010a0:	1e85      	subs	r5, r0, #2
 80010a2:	1989      	adds	r1, r1, r6
 80010a4:	1a88      	subs	r0, r1, r2
 80010a6:	9901      	ldr	r1, [sp, #4]
 80010a8:	f7ff f8c6 	bl	8000238 <__aeabi_uidivmod>
 80010ac:	0409      	lsls	r1, r1, #16
 80010ae:	468c      	mov	ip, r1
 80010b0:	464a      	mov	r2, r9
 80010b2:	0421      	lsls	r1, r4, #16
 80010b4:	4664      	mov	r4, ip
 80010b6:	4342      	muls	r2, r0
 80010b8:	0c09      	lsrs	r1, r1, #16
 80010ba:	0003      	movs	r3, r0
 80010bc:	4321      	orrs	r1, r4
 80010be:	428a      	cmp	r2, r1
 80010c0:	d904      	bls.n	80010cc <__aeabi_ddiv+0x31c>
 80010c2:	1989      	adds	r1, r1, r6
 80010c4:	3b01      	subs	r3, #1
 80010c6:	428e      	cmp	r6, r1
 80010c8:	d800      	bhi.n	80010cc <__aeabi_ddiv+0x31c>
 80010ca:	e0f1      	b.n	80012b0 <__aeabi_ddiv+0x500>
 80010cc:	042d      	lsls	r5, r5, #16
 80010ce:	431d      	orrs	r5, r3
 80010d0:	46ab      	mov	fp, r5
 80010d2:	4643      	mov	r3, r8
 80010d4:	1a89      	subs	r1, r1, r2
 80010d6:	4642      	mov	r2, r8
 80010d8:	0c28      	lsrs	r0, r5, #16
 80010da:	0412      	lsls	r2, r2, #16
 80010dc:	0c1d      	lsrs	r5, r3, #16
 80010de:	465b      	mov	r3, fp
 80010e0:	0c14      	lsrs	r4, r2, #16
 80010e2:	0022      	movs	r2, r4
 80010e4:	041b      	lsls	r3, r3, #16
 80010e6:	0c1b      	lsrs	r3, r3, #16
 80010e8:	435a      	muls	r2, r3
 80010ea:	9403      	str	r4, [sp, #12]
 80010ec:	436b      	muls	r3, r5
 80010ee:	4344      	muls	r4, r0
 80010f0:	9502      	str	r5, [sp, #8]
 80010f2:	4368      	muls	r0, r5
 80010f4:	191b      	adds	r3, r3, r4
 80010f6:	0c15      	lsrs	r5, r2, #16
 80010f8:	18eb      	adds	r3, r5, r3
 80010fa:	429c      	cmp	r4, r3
 80010fc:	d903      	bls.n	8001106 <__aeabi_ddiv+0x356>
 80010fe:	2480      	movs	r4, #128	; 0x80
 8001100:	0264      	lsls	r4, r4, #9
 8001102:	46a4      	mov	ip, r4
 8001104:	4460      	add	r0, ip
 8001106:	0c1c      	lsrs	r4, r3, #16
 8001108:	0415      	lsls	r5, r2, #16
 800110a:	041b      	lsls	r3, r3, #16
 800110c:	0c2d      	lsrs	r5, r5, #16
 800110e:	1820      	adds	r0, r4, r0
 8001110:	195d      	adds	r5, r3, r5
 8001112:	4281      	cmp	r1, r0
 8001114:	d377      	bcc.n	8001206 <__aeabi_ddiv+0x456>
 8001116:	d073      	beq.n	8001200 <__aeabi_ddiv+0x450>
 8001118:	1a0c      	subs	r4, r1, r0
 800111a:	4aa2      	ldr	r2, [pc, #648]	; (80013a4 <__aeabi_ddiv+0x5f4>)
 800111c:	1b7d      	subs	r5, r7, r5
 800111e:	42af      	cmp	r7, r5
 8001120:	41bf      	sbcs	r7, r7
 8001122:	4694      	mov	ip, r2
 8001124:	9b00      	ldr	r3, [sp, #0]
 8001126:	427f      	negs	r7, r7
 8001128:	4463      	add	r3, ip
 800112a:	1be0      	subs	r0, r4, r7
 800112c:	001c      	movs	r4, r3
 800112e:	4286      	cmp	r6, r0
 8001130:	d100      	bne.n	8001134 <__aeabi_ddiv+0x384>
 8001132:	e0db      	b.n	80012ec <__aeabi_ddiv+0x53c>
 8001134:	9901      	ldr	r1, [sp, #4]
 8001136:	f7ff f87f 	bl	8000238 <__aeabi_uidivmod>
 800113a:	464a      	mov	r2, r9
 800113c:	4342      	muls	r2, r0
 800113e:	040b      	lsls	r3, r1, #16
 8001140:	0c29      	lsrs	r1, r5, #16
 8001142:	0007      	movs	r7, r0
 8001144:	4319      	orrs	r1, r3
 8001146:	428a      	cmp	r2, r1
 8001148:	d907      	bls.n	800115a <__aeabi_ddiv+0x3aa>
 800114a:	1989      	adds	r1, r1, r6
 800114c:	3f01      	subs	r7, #1
 800114e:	428e      	cmp	r6, r1
 8001150:	d803      	bhi.n	800115a <__aeabi_ddiv+0x3aa>
 8001152:	428a      	cmp	r2, r1
 8001154:	d901      	bls.n	800115a <__aeabi_ddiv+0x3aa>
 8001156:	1e87      	subs	r7, r0, #2
 8001158:	1989      	adds	r1, r1, r6
 800115a:	1a88      	subs	r0, r1, r2
 800115c:	9901      	ldr	r1, [sp, #4]
 800115e:	f7ff f86b 	bl	8000238 <__aeabi_uidivmod>
 8001162:	0409      	lsls	r1, r1, #16
 8001164:	464a      	mov	r2, r9
 8001166:	4689      	mov	r9, r1
 8001168:	0429      	lsls	r1, r5, #16
 800116a:	464d      	mov	r5, r9
 800116c:	4342      	muls	r2, r0
 800116e:	0c09      	lsrs	r1, r1, #16
 8001170:	0003      	movs	r3, r0
 8001172:	4329      	orrs	r1, r5
 8001174:	428a      	cmp	r2, r1
 8001176:	d907      	bls.n	8001188 <__aeabi_ddiv+0x3d8>
 8001178:	1989      	adds	r1, r1, r6
 800117a:	3b01      	subs	r3, #1
 800117c:	428e      	cmp	r6, r1
 800117e:	d803      	bhi.n	8001188 <__aeabi_ddiv+0x3d8>
 8001180:	428a      	cmp	r2, r1
 8001182:	d901      	bls.n	8001188 <__aeabi_ddiv+0x3d8>
 8001184:	1e83      	subs	r3, r0, #2
 8001186:	1989      	adds	r1, r1, r6
 8001188:	043f      	lsls	r7, r7, #16
 800118a:	1a89      	subs	r1, r1, r2
 800118c:	003a      	movs	r2, r7
 800118e:	9f03      	ldr	r7, [sp, #12]
 8001190:	431a      	orrs	r2, r3
 8001192:	0038      	movs	r0, r7
 8001194:	0413      	lsls	r3, r2, #16
 8001196:	0c1b      	lsrs	r3, r3, #16
 8001198:	4358      	muls	r0, r3
 800119a:	4681      	mov	r9, r0
 800119c:	9802      	ldr	r0, [sp, #8]
 800119e:	0c15      	lsrs	r5, r2, #16
 80011a0:	436f      	muls	r7, r5
 80011a2:	4343      	muls	r3, r0
 80011a4:	4345      	muls	r5, r0
 80011a6:	4648      	mov	r0, r9
 80011a8:	0c00      	lsrs	r0, r0, #16
 80011aa:	4684      	mov	ip, r0
 80011ac:	19db      	adds	r3, r3, r7
 80011ae:	4463      	add	r3, ip
 80011b0:	429f      	cmp	r7, r3
 80011b2:	d903      	bls.n	80011bc <__aeabi_ddiv+0x40c>
 80011b4:	2080      	movs	r0, #128	; 0x80
 80011b6:	0240      	lsls	r0, r0, #9
 80011b8:	4684      	mov	ip, r0
 80011ba:	4465      	add	r5, ip
 80011bc:	4648      	mov	r0, r9
 80011be:	0c1f      	lsrs	r7, r3, #16
 80011c0:	0400      	lsls	r0, r0, #16
 80011c2:	041b      	lsls	r3, r3, #16
 80011c4:	0c00      	lsrs	r0, r0, #16
 80011c6:	197d      	adds	r5, r7, r5
 80011c8:	1818      	adds	r0, r3, r0
 80011ca:	42a9      	cmp	r1, r5
 80011cc:	d200      	bcs.n	80011d0 <__aeabi_ddiv+0x420>
 80011ce:	e084      	b.n	80012da <__aeabi_ddiv+0x52a>
 80011d0:	d100      	bne.n	80011d4 <__aeabi_ddiv+0x424>
 80011d2:	e07f      	b.n	80012d4 <__aeabi_ddiv+0x524>
 80011d4:	2301      	movs	r3, #1
 80011d6:	431a      	orrs	r2, r3
 80011d8:	e657      	b.n	8000e8a <__aeabi_ddiv+0xda>
 80011da:	2380      	movs	r3, #128	; 0x80
 80011dc:	464a      	mov	r2, r9
 80011de:	031b      	lsls	r3, r3, #12
 80011e0:	4313      	orrs	r3, r2
 80011e2:	031b      	lsls	r3, r3, #12
 80011e4:	0b1b      	lsrs	r3, r3, #12
 80011e6:	46aa      	mov	sl, r5
 80011e8:	4a6f      	ldr	r2, [pc, #444]	; (80013a8 <__aeabi_ddiv+0x5f8>)
 80011ea:	e66f      	b.n	8000ecc <__aeabi_ddiv+0x11c>
 80011ec:	42ba      	cmp	r2, r7
 80011ee:	d900      	bls.n	80011f2 <__aeabi_ddiv+0x442>
 80011f0:	e735      	b.n	800105e <__aeabi_ddiv+0x2ae>
 80011f2:	464b      	mov	r3, r9
 80011f4:	07dc      	lsls	r4, r3, #31
 80011f6:	0858      	lsrs	r0, r3, #1
 80011f8:	087b      	lsrs	r3, r7, #1
 80011fa:	431c      	orrs	r4, r3
 80011fc:	07ff      	lsls	r7, r7, #31
 80011fe:	e734      	b.n	800106a <__aeabi_ddiv+0x2ba>
 8001200:	2400      	movs	r4, #0
 8001202:	42af      	cmp	r7, r5
 8001204:	d289      	bcs.n	800111a <__aeabi_ddiv+0x36a>
 8001206:	4447      	add	r7, r8
 8001208:	4547      	cmp	r7, r8
 800120a:	41a4      	sbcs	r4, r4
 800120c:	465b      	mov	r3, fp
 800120e:	4264      	negs	r4, r4
 8001210:	19a4      	adds	r4, r4, r6
 8001212:	1864      	adds	r4, r4, r1
 8001214:	3b01      	subs	r3, #1
 8001216:	42a6      	cmp	r6, r4
 8001218:	d21e      	bcs.n	8001258 <__aeabi_ddiv+0x4a8>
 800121a:	42a0      	cmp	r0, r4
 800121c:	d86d      	bhi.n	80012fa <__aeabi_ddiv+0x54a>
 800121e:	d100      	bne.n	8001222 <__aeabi_ddiv+0x472>
 8001220:	e0b6      	b.n	8001390 <__aeabi_ddiv+0x5e0>
 8001222:	1a24      	subs	r4, r4, r0
 8001224:	469b      	mov	fp, r3
 8001226:	e778      	b.n	800111a <__aeabi_ddiv+0x36a>
 8001228:	0003      	movs	r3, r0
 800122a:	465a      	mov	r2, fp
 800122c:	3b28      	subs	r3, #40	; 0x28
 800122e:	409a      	lsls	r2, r3
 8001230:	2700      	movs	r7, #0
 8001232:	4691      	mov	r9, r2
 8001234:	e688      	b.n	8000f48 <__aeabi_ddiv+0x198>
 8001236:	4658      	mov	r0, fp
 8001238:	f001 f88e 	bl	8002358 <__clzsi2>
 800123c:	3020      	adds	r0, #32
 800123e:	e672      	b.n	8000f26 <__aeabi_ddiv+0x176>
 8001240:	0003      	movs	r3, r0
 8001242:	4652      	mov	r2, sl
 8001244:	3b28      	subs	r3, #40	; 0x28
 8001246:	409a      	lsls	r2, r3
 8001248:	4693      	mov	fp, r2
 800124a:	2200      	movs	r2, #0
 800124c:	e6b4      	b.n	8000fb8 <__aeabi_ddiv+0x208>
 800124e:	4650      	mov	r0, sl
 8001250:	f001 f882 	bl	8002358 <__clzsi2>
 8001254:	3020      	adds	r0, #32
 8001256:	e69a      	b.n	8000f8e <__aeabi_ddiv+0x1de>
 8001258:	42a6      	cmp	r6, r4
 800125a:	d1e2      	bne.n	8001222 <__aeabi_ddiv+0x472>
 800125c:	45b8      	cmp	r8, r7
 800125e:	d9dc      	bls.n	800121a <__aeabi_ddiv+0x46a>
 8001260:	1a34      	subs	r4, r6, r0
 8001262:	469b      	mov	fp, r3
 8001264:	e759      	b.n	800111a <__aeabi_ddiv+0x36a>
 8001266:	2b1f      	cmp	r3, #31
 8001268:	dc65      	bgt.n	8001336 <__aeabi_ddiv+0x586>
 800126a:	4c50      	ldr	r4, [pc, #320]	; (80013ac <__aeabi_ddiv+0x5fc>)
 800126c:	9900      	ldr	r1, [sp, #0]
 800126e:	46a4      	mov	ip, r4
 8001270:	465c      	mov	r4, fp
 8001272:	4461      	add	r1, ip
 8001274:	0008      	movs	r0, r1
 8001276:	408c      	lsls	r4, r1
 8001278:	0011      	movs	r1, r2
 800127a:	4082      	lsls	r2, r0
 800127c:	40d9      	lsrs	r1, r3
 800127e:	1e50      	subs	r0, r2, #1
 8001280:	4182      	sbcs	r2, r0
 8001282:	430c      	orrs	r4, r1
 8001284:	4314      	orrs	r4, r2
 8001286:	465a      	mov	r2, fp
 8001288:	40da      	lsrs	r2, r3
 800128a:	0013      	movs	r3, r2
 800128c:	0762      	lsls	r2, r4, #29
 800128e:	d009      	beq.n	80012a4 <__aeabi_ddiv+0x4f4>
 8001290:	220f      	movs	r2, #15
 8001292:	4022      	ands	r2, r4
 8001294:	2a04      	cmp	r2, #4
 8001296:	d005      	beq.n	80012a4 <__aeabi_ddiv+0x4f4>
 8001298:	0022      	movs	r2, r4
 800129a:	1d14      	adds	r4, r2, #4
 800129c:	4294      	cmp	r4, r2
 800129e:	4189      	sbcs	r1, r1
 80012a0:	4249      	negs	r1, r1
 80012a2:	185b      	adds	r3, r3, r1
 80012a4:	021a      	lsls	r2, r3, #8
 80012a6:	d562      	bpl.n	800136e <__aeabi_ddiv+0x5be>
 80012a8:	2201      	movs	r2, #1
 80012aa:	2300      	movs	r3, #0
 80012ac:	2700      	movs	r7, #0
 80012ae:	e60d      	b.n	8000ecc <__aeabi_ddiv+0x11c>
 80012b0:	428a      	cmp	r2, r1
 80012b2:	d800      	bhi.n	80012b6 <__aeabi_ddiv+0x506>
 80012b4:	e70a      	b.n	80010cc <__aeabi_ddiv+0x31c>
 80012b6:	1e83      	subs	r3, r0, #2
 80012b8:	1989      	adds	r1, r1, r6
 80012ba:	e707      	b.n	80010cc <__aeabi_ddiv+0x31c>
 80012bc:	230f      	movs	r3, #15
 80012be:	4013      	ands	r3, r2
 80012c0:	2b04      	cmp	r3, #4
 80012c2:	d100      	bne.n	80012c6 <__aeabi_ddiv+0x516>
 80012c4:	e5e6      	b.n	8000e94 <__aeabi_ddiv+0xe4>
 80012c6:	1d17      	adds	r7, r2, #4
 80012c8:	4297      	cmp	r7, r2
 80012ca:	4192      	sbcs	r2, r2
 80012cc:	4253      	negs	r3, r2
 80012ce:	449b      	add	fp, r3
 80012d0:	08fa      	lsrs	r2, r7, #3
 80012d2:	e5e0      	b.n	8000e96 <__aeabi_ddiv+0xe6>
 80012d4:	2800      	cmp	r0, #0
 80012d6:	d100      	bne.n	80012da <__aeabi_ddiv+0x52a>
 80012d8:	e5d7      	b.n	8000e8a <__aeabi_ddiv+0xda>
 80012da:	1871      	adds	r1, r6, r1
 80012dc:	1e53      	subs	r3, r2, #1
 80012de:	42b1      	cmp	r1, r6
 80012e0:	d327      	bcc.n	8001332 <__aeabi_ddiv+0x582>
 80012e2:	42a9      	cmp	r1, r5
 80012e4:	d315      	bcc.n	8001312 <__aeabi_ddiv+0x562>
 80012e6:	d058      	beq.n	800139a <__aeabi_ddiv+0x5ea>
 80012e8:	001a      	movs	r2, r3
 80012ea:	e773      	b.n	80011d4 <__aeabi_ddiv+0x424>
 80012ec:	2b00      	cmp	r3, #0
 80012ee:	dc00      	bgt.n	80012f2 <__aeabi_ddiv+0x542>
 80012f0:	e604      	b.n	8000efc <__aeabi_ddiv+0x14c>
 80012f2:	2301      	movs	r3, #1
 80012f4:	2200      	movs	r2, #0
 80012f6:	449b      	add	fp, r3
 80012f8:	e5cd      	b.n	8000e96 <__aeabi_ddiv+0xe6>
 80012fa:	2302      	movs	r3, #2
 80012fc:	4447      	add	r7, r8
 80012fe:	4547      	cmp	r7, r8
 8001300:	4189      	sbcs	r1, r1
 8001302:	425b      	negs	r3, r3
 8001304:	469c      	mov	ip, r3
 8001306:	4249      	negs	r1, r1
 8001308:	1989      	adds	r1, r1, r6
 800130a:	190c      	adds	r4, r1, r4
 800130c:	44e3      	add	fp, ip
 800130e:	1a24      	subs	r4, r4, r0
 8001310:	e703      	b.n	800111a <__aeabi_ddiv+0x36a>
 8001312:	4643      	mov	r3, r8
 8001314:	005f      	lsls	r7, r3, #1
 8001316:	4547      	cmp	r7, r8
 8001318:	419b      	sbcs	r3, r3
 800131a:	46b8      	mov	r8, r7
 800131c:	425b      	negs	r3, r3
 800131e:	199e      	adds	r6, r3, r6
 8001320:	3a02      	subs	r2, #2
 8001322:	1989      	adds	r1, r1, r6
 8001324:	42a9      	cmp	r1, r5
 8001326:	d000      	beq.n	800132a <__aeabi_ddiv+0x57a>
 8001328:	e754      	b.n	80011d4 <__aeabi_ddiv+0x424>
 800132a:	4540      	cmp	r0, r8
 800132c:	d000      	beq.n	8001330 <__aeabi_ddiv+0x580>
 800132e:	e751      	b.n	80011d4 <__aeabi_ddiv+0x424>
 8001330:	e5ab      	b.n	8000e8a <__aeabi_ddiv+0xda>
 8001332:	001a      	movs	r2, r3
 8001334:	e7f6      	b.n	8001324 <__aeabi_ddiv+0x574>
 8001336:	211f      	movs	r1, #31
 8001338:	465f      	mov	r7, fp
 800133a:	4249      	negs	r1, r1
 800133c:	1b0c      	subs	r4, r1, r4
 800133e:	40e7      	lsrs	r7, r4
 8001340:	2b20      	cmp	r3, #32
 8001342:	d007      	beq.n	8001354 <__aeabi_ddiv+0x5a4>
 8001344:	491a      	ldr	r1, [pc, #104]	; (80013b0 <__aeabi_ddiv+0x600>)
 8001346:	9b00      	ldr	r3, [sp, #0]
 8001348:	468c      	mov	ip, r1
 800134a:	4463      	add	r3, ip
 800134c:	0018      	movs	r0, r3
 800134e:	465b      	mov	r3, fp
 8001350:	4083      	lsls	r3, r0
 8001352:	431a      	orrs	r2, r3
 8001354:	1e50      	subs	r0, r2, #1
 8001356:	4182      	sbcs	r2, r0
 8001358:	433a      	orrs	r2, r7
 800135a:	2707      	movs	r7, #7
 800135c:	2300      	movs	r3, #0
 800135e:	4017      	ands	r7, r2
 8001360:	d009      	beq.n	8001376 <__aeabi_ddiv+0x5c6>
 8001362:	210f      	movs	r1, #15
 8001364:	2300      	movs	r3, #0
 8001366:	4011      	ands	r1, r2
 8001368:	0014      	movs	r4, r2
 800136a:	2904      	cmp	r1, #4
 800136c:	d195      	bne.n	800129a <__aeabi_ddiv+0x4ea>
 800136e:	0022      	movs	r2, r4
 8001370:	075f      	lsls	r7, r3, #29
 8001372:	025b      	lsls	r3, r3, #9
 8001374:	0b1b      	lsrs	r3, r3, #12
 8001376:	08d2      	lsrs	r2, r2, #3
 8001378:	4317      	orrs	r7, r2
 800137a:	2200      	movs	r2, #0
 800137c:	e5a6      	b.n	8000ecc <__aeabi_ddiv+0x11c>
 800137e:	2380      	movs	r3, #128	; 0x80
 8001380:	4659      	mov	r1, fp
 8001382:	031b      	lsls	r3, r3, #12
 8001384:	430b      	orrs	r3, r1
 8001386:	031b      	lsls	r3, r3, #12
 8001388:	0017      	movs	r7, r2
 800138a:	0b1b      	lsrs	r3, r3, #12
 800138c:	4a06      	ldr	r2, [pc, #24]	; (80013a8 <__aeabi_ddiv+0x5f8>)
 800138e:	e59d      	b.n	8000ecc <__aeabi_ddiv+0x11c>
 8001390:	42bd      	cmp	r5, r7
 8001392:	d8b2      	bhi.n	80012fa <__aeabi_ddiv+0x54a>
 8001394:	469b      	mov	fp, r3
 8001396:	2400      	movs	r4, #0
 8001398:	e6bf      	b.n	800111a <__aeabi_ddiv+0x36a>
 800139a:	4580      	cmp	r8, r0
 800139c:	d3b9      	bcc.n	8001312 <__aeabi_ddiv+0x562>
 800139e:	001a      	movs	r2, r3
 80013a0:	e7c3      	b.n	800132a <__aeabi_ddiv+0x57a>
 80013a2:	46c0      	nop			; (mov r8, r8)
 80013a4:	000003ff 	.word	0x000003ff
 80013a8:	000007ff 	.word	0x000007ff
 80013ac:	0000041e 	.word	0x0000041e
 80013b0:	0000043e 	.word	0x0000043e

080013b4 <__eqdf2>:
 80013b4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80013b6:	464f      	mov	r7, r9
 80013b8:	4646      	mov	r6, r8
 80013ba:	46d6      	mov	lr, sl
 80013bc:	4684      	mov	ip, r0
 80013be:	b5c0      	push	{r6, r7, lr}
 80013c0:	4680      	mov	r8, r0
 80013c2:	4e19      	ldr	r6, [pc, #100]	; (8001428 <__eqdf2+0x74>)
 80013c4:	0318      	lsls	r0, r3, #12
 80013c6:	030f      	lsls	r7, r1, #12
 80013c8:	004d      	lsls	r5, r1, #1
 80013ca:	0b00      	lsrs	r0, r0, #12
 80013cc:	005c      	lsls	r4, r3, #1
 80013ce:	4682      	mov	sl, r0
 80013d0:	0b3f      	lsrs	r7, r7, #12
 80013d2:	0d6d      	lsrs	r5, r5, #21
 80013d4:	0fc9      	lsrs	r1, r1, #31
 80013d6:	4691      	mov	r9, r2
 80013d8:	0d64      	lsrs	r4, r4, #21
 80013da:	0fdb      	lsrs	r3, r3, #31
 80013dc:	2001      	movs	r0, #1
 80013de:	42b5      	cmp	r5, r6
 80013e0:	d00a      	beq.n	80013f8 <__eqdf2+0x44>
 80013e2:	42b4      	cmp	r4, r6
 80013e4:	d003      	beq.n	80013ee <__eqdf2+0x3a>
 80013e6:	42a5      	cmp	r5, r4
 80013e8:	d101      	bne.n	80013ee <__eqdf2+0x3a>
 80013ea:	4557      	cmp	r7, sl
 80013ec:	d00c      	beq.n	8001408 <__eqdf2+0x54>
 80013ee:	bc1c      	pop	{r2, r3, r4}
 80013f0:	4690      	mov	r8, r2
 80013f2:	4699      	mov	r9, r3
 80013f4:	46a2      	mov	sl, r4
 80013f6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80013f8:	4666      	mov	r6, ip
 80013fa:	433e      	orrs	r6, r7
 80013fc:	d1f7      	bne.n	80013ee <__eqdf2+0x3a>
 80013fe:	42ac      	cmp	r4, r5
 8001400:	d1f5      	bne.n	80013ee <__eqdf2+0x3a>
 8001402:	4654      	mov	r4, sl
 8001404:	4314      	orrs	r4, r2
 8001406:	d1f2      	bne.n	80013ee <__eqdf2+0x3a>
 8001408:	2001      	movs	r0, #1
 800140a:	45c8      	cmp	r8, r9
 800140c:	d1ef      	bne.n	80013ee <__eqdf2+0x3a>
 800140e:	4299      	cmp	r1, r3
 8001410:	d007      	beq.n	8001422 <__eqdf2+0x6e>
 8001412:	2d00      	cmp	r5, #0
 8001414:	d1eb      	bne.n	80013ee <__eqdf2+0x3a>
 8001416:	4663      	mov	r3, ip
 8001418:	431f      	orrs	r7, r3
 800141a:	0038      	movs	r0, r7
 800141c:	1e47      	subs	r7, r0, #1
 800141e:	41b8      	sbcs	r0, r7
 8001420:	e7e5      	b.n	80013ee <__eqdf2+0x3a>
 8001422:	2000      	movs	r0, #0
 8001424:	e7e3      	b.n	80013ee <__eqdf2+0x3a>
 8001426:	46c0      	nop			; (mov r8, r8)
 8001428:	000007ff 	.word	0x000007ff

0800142c <__gedf2>:
 800142c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800142e:	464f      	mov	r7, r9
 8001430:	4646      	mov	r6, r8
 8001432:	46d6      	mov	lr, sl
 8001434:	004d      	lsls	r5, r1, #1
 8001436:	b5c0      	push	{r6, r7, lr}
 8001438:	030e      	lsls	r6, r1, #12
 800143a:	0fc9      	lsrs	r1, r1, #31
 800143c:	468a      	mov	sl, r1
 800143e:	492c      	ldr	r1, [pc, #176]	; (80014f0 <__gedf2+0xc4>)
 8001440:	031f      	lsls	r7, r3, #12
 8001442:	005c      	lsls	r4, r3, #1
 8001444:	4680      	mov	r8, r0
 8001446:	0b36      	lsrs	r6, r6, #12
 8001448:	0d6d      	lsrs	r5, r5, #21
 800144a:	4691      	mov	r9, r2
 800144c:	0b3f      	lsrs	r7, r7, #12
 800144e:	0d64      	lsrs	r4, r4, #21
 8001450:	0fdb      	lsrs	r3, r3, #31
 8001452:	428d      	cmp	r5, r1
 8001454:	d01e      	beq.n	8001494 <__gedf2+0x68>
 8001456:	428c      	cmp	r4, r1
 8001458:	d016      	beq.n	8001488 <__gedf2+0x5c>
 800145a:	2d00      	cmp	r5, #0
 800145c:	d11e      	bne.n	800149c <__gedf2+0x70>
 800145e:	4330      	orrs	r0, r6
 8001460:	4684      	mov	ip, r0
 8001462:	2c00      	cmp	r4, #0
 8001464:	d101      	bne.n	800146a <__gedf2+0x3e>
 8001466:	433a      	orrs	r2, r7
 8001468:	d023      	beq.n	80014b2 <__gedf2+0x86>
 800146a:	4662      	mov	r2, ip
 800146c:	2a00      	cmp	r2, #0
 800146e:	d01a      	beq.n	80014a6 <__gedf2+0x7a>
 8001470:	459a      	cmp	sl, r3
 8001472:	d029      	beq.n	80014c8 <__gedf2+0x9c>
 8001474:	4651      	mov	r1, sl
 8001476:	2002      	movs	r0, #2
 8001478:	3901      	subs	r1, #1
 800147a:	4008      	ands	r0, r1
 800147c:	3801      	subs	r0, #1
 800147e:	bc1c      	pop	{r2, r3, r4}
 8001480:	4690      	mov	r8, r2
 8001482:	4699      	mov	r9, r3
 8001484:	46a2      	mov	sl, r4
 8001486:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001488:	0039      	movs	r1, r7
 800148a:	4311      	orrs	r1, r2
 800148c:	d0e5      	beq.n	800145a <__gedf2+0x2e>
 800148e:	2002      	movs	r0, #2
 8001490:	4240      	negs	r0, r0
 8001492:	e7f4      	b.n	800147e <__gedf2+0x52>
 8001494:	4330      	orrs	r0, r6
 8001496:	d1fa      	bne.n	800148e <__gedf2+0x62>
 8001498:	42ac      	cmp	r4, r5
 800149a:	d00f      	beq.n	80014bc <__gedf2+0x90>
 800149c:	2c00      	cmp	r4, #0
 800149e:	d10f      	bne.n	80014c0 <__gedf2+0x94>
 80014a0:	433a      	orrs	r2, r7
 80014a2:	d0e7      	beq.n	8001474 <__gedf2+0x48>
 80014a4:	e00c      	b.n	80014c0 <__gedf2+0x94>
 80014a6:	2201      	movs	r2, #1
 80014a8:	3b01      	subs	r3, #1
 80014aa:	4393      	bics	r3, r2
 80014ac:	0018      	movs	r0, r3
 80014ae:	3001      	adds	r0, #1
 80014b0:	e7e5      	b.n	800147e <__gedf2+0x52>
 80014b2:	4663      	mov	r3, ip
 80014b4:	2000      	movs	r0, #0
 80014b6:	2b00      	cmp	r3, #0
 80014b8:	d0e1      	beq.n	800147e <__gedf2+0x52>
 80014ba:	e7db      	b.n	8001474 <__gedf2+0x48>
 80014bc:	433a      	orrs	r2, r7
 80014be:	d1e6      	bne.n	800148e <__gedf2+0x62>
 80014c0:	459a      	cmp	sl, r3
 80014c2:	d1d7      	bne.n	8001474 <__gedf2+0x48>
 80014c4:	42a5      	cmp	r5, r4
 80014c6:	dcd5      	bgt.n	8001474 <__gedf2+0x48>
 80014c8:	42a5      	cmp	r5, r4
 80014ca:	db05      	blt.n	80014d8 <__gedf2+0xac>
 80014cc:	42be      	cmp	r6, r7
 80014ce:	d8d1      	bhi.n	8001474 <__gedf2+0x48>
 80014d0:	d008      	beq.n	80014e4 <__gedf2+0xb8>
 80014d2:	2000      	movs	r0, #0
 80014d4:	42be      	cmp	r6, r7
 80014d6:	d2d2      	bcs.n	800147e <__gedf2+0x52>
 80014d8:	4650      	mov	r0, sl
 80014da:	2301      	movs	r3, #1
 80014dc:	3801      	subs	r0, #1
 80014de:	4398      	bics	r0, r3
 80014e0:	3001      	adds	r0, #1
 80014e2:	e7cc      	b.n	800147e <__gedf2+0x52>
 80014e4:	45c8      	cmp	r8, r9
 80014e6:	d8c5      	bhi.n	8001474 <__gedf2+0x48>
 80014e8:	2000      	movs	r0, #0
 80014ea:	45c8      	cmp	r8, r9
 80014ec:	d3f4      	bcc.n	80014d8 <__gedf2+0xac>
 80014ee:	e7c6      	b.n	800147e <__gedf2+0x52>
 80014f0:	000007ff 	.word	0x000007ff

080014f4 <__ledf2>:
 80014f4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80014f6:	464f      	mov	r7, r9
 80014f8:	4646      	mov	r6, r8
 80014fa:	46d6      	mov	lr, sl
 80014fc:	004d      	lsls	r5, r1, #1
 80014fe:	b5c0      	push	{r6, r7, lr}
 8001500:	030e      	lsls	r6, r1, #12
 8001502:	0fc9      	lsrs	r1, r1, #31
 8001504:	468a      	mov	sl, r1
 8001506:	492e      	ldr	r1, [pc, #184]	; (80015c0 <__ledf2+0xcc>)
 8001508:	031f      	lsls	r7, r3, #12
 800150a:	005c      	lsls	r4, r3, #1
 800150c:	4680      	mov	r8, r0
 800150e:	0b36      	lsrs	r6, r6, #12
 8001510:	0d6d      	lsrs	r5, r5, #21
 8001512:	4691      	mov	r9, r2
 8001514:	0b3f      	lsrs	r7, r7, #12
 8001516:	0d64      	lsrs	r4, r4, #21
 8001518:	0fdb      	lsrs	r3, r3, #31
 800151a:	428d      	cmp	r5, r1
 800151c:	d018      	beq.n	8001550 <__ledf2+0x5c>
 800151e:	428c      	cmp	r4, r1
 8001520:	d011      	beq.n	8001546 <__ledf2+0x52>
 8001522:	2d00      	cmp	r5, #0
 8001524:	d118      	bne.n	8001558 <__ledf2+0x64>
 8001526:	4330      	orrs	r0, r6
 8001528:	4684      	mov	ip, r0
 800152a:	2c00      	cmp	r4, #0
 800152c:	d11e      	bne.n	800156c <__ledf2+0x78>
 800152e:	433a      	orrs	r2, r7
 8001530:	d11c      	bne.n	800156c <__ledf2+0x78>
 8001532:	4663      	mov	r3, ip
 8001534:	2000      	movs	r0, #0
 8001536:	2b00      	cmp	r3, #0
 8001538:	d030      	beq.n	800159c <__ledf2+0xa8>
 800153a:	4651      	mov	r1, sl
 800153c:	2002      	movs	r0, #2
 800153e:	3901      	subs	r1, #1
 8001540:	4008      	ands	r0, r1
 8001542:	3801      	subs	r0, #1
 8001544:	e02a      	b.n	800159c <__ledf2+0xa8>
 8001546:	0039      	movs	r1, r7
 8001548:	4311      	orrs	r1, r2
 800154a:	d0ea      	beq.n	8001522 <__ledf2+0x2e>
 800154c:	2002      	movs	r0, #2
 800154e:	e025      	b.n	800159c <__ledf2+0xa8>
 8001550:	4330      	orrs	r0, r6
 8001552:	d1fb      	bne.n	800154c <__ledf2+0x58>
 8001554:	42ac      	cmp	r4, r5
 8001556:	d026      	beq.n	80015a6 <__ledf2+0xb2>
 8001558:	2c00      	cmp	r4, #0
 800155a:	d126      	bne.n	80015aa <__ledf2+0xb6>
 800155c:	433a      	orrs	r2, r7
 800155e:	d124      	bne.n	80015aa <__ledf2+0xb6>
 8001560:	4651      	mov	r1, sl
 8001562:	2002      	movs	r0, #2
 8001564:	3901      	subs	r1, #1
 8001566:	4008      	ands	r0, r1
 8001568:	3801      	subs	r0, #1
 800156a:	e017      	b.n	800159c <__ledf2+0xa8>
 800156c:	4662      	mov	r2, ip
 800156e:	2a00      	cmp	r2, #0
 8001570:	d00f      	beq.n	8001592 <__ledf2+0x9e>
 8001572:	459a      	cmp	sl, r3
 8001574:	d1e1      	bne.n	800153a <__ledf2+0x46>
 8001576:	42a5      	cmp	r5, r4
 8001578:	db05      	blt.n	8001586 <__ledf2+0x92>
 800157a:	42be      	cmp	r6, r7
 800157c:	d8dd      	bhi.n	800153a <__ledf2+0x46>
 800157e:	d019      	beq.n	80015b4 <__ledf2+0xc0>
 8001580:	2000      	movs	r0, #0
 8001582:	42be      	cmp	r6, r7
 8001584:	d20a      	bcs.n	800159c <__ledf2+0xa8>
 8001586:	4650      	mov	r0, sl
 8001588:	2301      	movs	r3, #1
 800158a:	3801      	subs	r0, #1
 800158c:	4398      	bics	r0, r3
 800158e:	3001      	adds	r0, #1
 8001590:	e004      	b.n	800159c <__ledf2+0xa8>
 8001592:	2201      	movs	r2, #1
 8001594:	3b01      	subs	r3, #1
 8001596:	4393      	bics	r3, r2
 8001598:	0018      	movs	r0, r3
 800159a:	3001      	adds	r0, #1
 800159c:	bc1c      	pop	{r2, r3, r4}
 800159e:	4690      	mov	r8, r2
 80015a0:	4699      	mov	r9, r3
 80015a2:	46a2      	mov	sl, r4
 80015a4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80015a6:	433a      	orrs	r2, r7
 80015a8:	d1d0      	bne.n	800154c <__ledf2+0x58>
 80015aa:	459a      	cmp	sl, r3
 80015ac:	d1c5      	bne.n	800153a <__ledf2+0x46>
 80015ae:	42a5      	cmp	r5, r4
 80015b0:	dcc3      	bgt.n	800153a <__ledf2+0x46>
 80015b2:	e7e0      	b.n	8001576 <__ledf2+0x82>
 80015b4:	45c8      	cmp	r8, r9
 80015b6:	d8c0      	bhi.n	800153a <__ledf2+0x46>
 80015b8:	2000      	movs	r0, #0
 80015ba:	45c8      	cmp	r8, r9
 80015bc:	d3e3      	bcc.n	8001586 <__ledf2+0x92>
 80015be:	e7ed      	b.n	800159c <__ledf2+0xa8>
 80015c0:	000007ff 	.word	0x000007ff

080015c4 <__aeabi_dmul>:
 80015c4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80015c6:	4657      	mov	r7, sl
 80015c8:	46de      	mov	lr, fp
 80015ca:	464e      	mov	r6, r9
 80015cc:	4645      	mov	r5, r8
 80015ce:	b5e0      	push	{r5, r6, r7, lr}
 80015d0:	4683      	mov	fp, r0
 80015d2:	0006      	movs	r6, r0
 80015d4:	030f      	lsls	r7, r1, #12
 80015d6:	0048      	lsls	r0, r1, #1
 80015d8:	b087      	sub	sp, #28
 80015da:	4692      	mov	sl, r2
 80015dc:	001d      	movs	r5, r3
 80015de:	0b3f      	lsrs	r7, r7, #12
 80015e0:	0d40      	lsrs	r0, r0, #21
 80015e2:	0fcc      	lsrs	r4, r1, #31
 80015e4:	2800      	cmp	r0, #0
 80015e6:	d100      	bne.n	80015ea <__aeabi_dmul+0x26>
 80015e8:	e06f      	b.n	80016ca <__aeabi_dmul+0x106>
 80015ea:	4bde      	ldr	r3, [pc, #888]	; (8001964 <__aeabi_dmul+0x3a0>)
 80015ec:	4298      	cmp	r0, r3
 80015ee:	d038      	beq.n	8001662 <__aeabi_dmul+0x9e>
 80015f0:	2380      	movs	r3, #128	; 0x80
 80015f2:	00ff      	lsls	r7, r7, #3
 80015f4:	041b      	lsls	r3, r3, #16
 80015f6:	431f      	orrs	r7, r3
 80015f8:	0f73      	lsrs	r3, r6, #29
 80015fa:	433b      	orrs	r3, r7
 80015fc:	9301      	str	r3, [sp, #4]
 80015fe:	4bda      	ldr	r3, [pc, #872]	; (8001968 <__aeabi_dmul+0x3a4>)
 8001600:	2700      	movs	r7, #0
 8001602:	4699      	mov	r9, r3
 8001604:	2300      	movs	r3, #0
 8001606:	469b      	mov	fp, r3
 8001608:	00f6      	lsls	r6, r6, #3
 800160a:	4481      	add	r9, r0
 800160c:	032b      	lsls	r3, r5, #12
 800160e:	0069      	lsls	r1, r5, #1
 8001610:	0b1b      	lsrs	r3, r3, #12
 8001612:	4652      	mov	r2, sl
 8001614:	4698      	mov	r8, r3
 8001616:	0d49      	lsrs	r1, r1, #21
 8001618:	0fed      	lsrs	r5, r5, #31
 800161a:	2900      	cmp	r1, #0
 800161c:	d100      	bne.n	8001620 <__aeabi_dmul+0x5c>
 800161e:	e085      	b.n	800172c <__aeabi_dmul+0x168>
 8001620:	4bd0      	ldr	r3, [pc, #832]	; (8001964 <__aeabi_dmul+0x3a0>)
 8001622:	4299      	cmp	r1, r3
 8001624:	d100      	bne.n	8001628 <__aeabi_dmul+0x64>
 8001626:	e073      	b.n	8001710 <__aeabi_dmul+0x14c>
 8001628:	4643      	mov	r3, r8
 800162a:	00da      	lsls	r2, r3, #3
 800162c:	2380      	movs	r3, #128	; 0x80
 800162e:	041b      	lsls	r3, r3, #16
 8001630:	4313      	orrs	r3, r2
 8001632:	4652      	mov	r2, sl
 8001634:	48cc      	ldr	r0, [pc, #816]	; (8001968 <__aeabi_dmul+0x3a4>)
 8001636:	0f52      	lsrs	r2, r2, #29
 8001638:	4684      	mov	ip, r0
 800163a:	4313      	orrs	r3, r2
 800163c:	4652      	mov	r2, sl
 800163e:	2000      	movs	r0, #0
 8001640:	4461      	add	r1, ip
 8001642:	00d2      	lsls	r2, r2, #3
 8001644:	4489      	add	r9, r1
 8001646:	0021      	movs	r1, r4
 8001648:	4069      	eors	r1, r5
 800164a:	9100      	str	r1, [sp, #0]
 800164c:	468c      	mov	ip, r1
 800164e:	2101      	movs	r1, #1
 8001650:	4449      	add	r1, r9
 8001652:	468a      	mov	sl, r1
 8001654:	2f0f      	cmp	r7, #15
 8001656:	d900      	bls.n	800165a <__aeabi_dmul+0x96>
 8001658:	e090      	b.n	800177c <__aeabi_dmul+0x1b8>
 800165a:	49c4      	ldr	r1, [pc, #784]	; (800196c <__aeabi_dmul+0x3a8>)
 800165c:	00bf      	lsls	r7, r7, #2
 800165e:	59cf      	ldr	r7, [r1, r7]
 8001660:	46bf      	mov	pc, r7
 8001662:	465b      	mov	r3, fp
 8001664:	433b      	orrs	r3, r7
 8001666:	9301      	str	r3, [sp, #4]
 8001668:	d000      	beq.n	800166c <__aeabi_dmul+0xa8>
 800166a:	e16a      	b.n	8001942 <__aeabi_dmul+0x37e>
 800166c:	2302      	movs	r3, #2
 800166e:	2708      	movs	r7, #8
 8001670:	2600      	movs	r6, #0
 8001672:	4681      	mov	r9, r0
 8001674:	469b      	mov	fp, r3
 8001676:	e7c9      	b.n	800160c <__aeabi_dmul+0x48>
 8001678:	0032      	movs	r2, r6
 800167a:	4658      	mov	r0, fp
 800167c:	9b01      	ldr	r3, [sp, #4]
 800167e:	4661      	mov	r1, ip
 8001680:	9100      	str	r1, [sp, #0]
 8001682:	2802      	cmp	r0, #2
 8001684:	d100      	bne.n	8001688 <__aeabi_dmul+0xc4>
 8001686:	e075      	b.n	8001774 <__aeabi_dmul+0x1b0>
 8001688:	2803      	cmp	r0, #3
 800168a:	d100      	bne.n	800168e <__aeabi_dmul+0xca>
 800168c:	e1fe      	b.n	8001a8c <__aeabi_dmul+0x4c8>
 800168e:	2801      	cmp	r0, #1
 8001690:	d000      	beq.n	8001694 <__aeabi_dmul+0xd0>
 8001692:	e12c      	b.n	80018ee <__aeabi_dmul+0x32a>
 8001694:	2300      	movs	r3, #0
 8001696:	2700      	movs	r7, #0
 8001698:	2600      	movs	r6, #0
 800169a:	2500      	movs	r5, #0
 800169c:	033f      	lsls	r7, r7, #12
 800169e:	0d2a      	lsrs	r2, r5, #20
 80016a0:	0b3f      	lsrs	r7, r7, #12
 80016a2:	48b3      	ldr	r0, [pc, #716]	; (8001970 <__aeabi_dmul+0x3ac>)
 80016a4:	0512      	lsls	r2, r2, #20
 80016a6:	433a      	orrs	r2, r7
 80016a8:	4002      	ands	r2, r0
 80016aa:	051b      	lsls	r3, r3, #20
 80016ac:	4313      	orrs	r3, r2
 80016ae:	9a00      	ldr	r2, [sp, #0]
 80016b0:	005b      	lsls	r3, r3, #1
 80016b2:	07d1      	lsls	r1, r2, #31
 80016b4:	085b      	lsrs	r3, r3, #1
 80016b6:	430b      	orrs	r3, r1
 80016b8:	0030      	movs	r0, r6
 80016ba:	0019      	movs	r1, r3
 80016bc:	b007      	add	sp, #28
 80016be:	bc3c      	pop	{r2, r3, r4, r5}
 80016c0:	4690      	mov	r8, r2
 80016c2:	4699      	mov	r9, r3
 80016c4:	46a2      	mov	sl, r4
 80016c6:	46ab      	mov	fp, r5
 80016c8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80016ca:	465b      	mov	r3, fp
 80016cc:	433b      	orrs	r3, r7
 80016ce:	9301      	str	r3, [sp, #4]
 80016d0:	d100      	bne.n	80016d4 <__aeabi_dmul+0x110>
 80016d2:	e12f      	b.n	8001934 <__aeabi_dmul+0x370>
 80016d4:	2f00      	cmp	r7, #0
 80016d6:	d100      	bne.n	80016da <__aeabi_dmul+0x116>
 80016d8:	e1a5      	b.n	8001a26 <__aeabi_dmul+0x462>
 80016da:	0038      	movs	r0, r7
 80016dc:	f000 fe3c 	bl	8002358 <__clzsi2>
 80016e0:	0003      	movs	r3, r0
 80016e2:	3b0b      	subs	r3, #11
 80016e4:	2b1c      	cmp	r3, #28
 80016e6:	dd00      	ble.n	80016ea <__aeabi_dmul+0x126>
 80016e8:	e196      	b.n	8001a18 <__aeabi_dmul+0x454>
 80016ea:	221d      	movs	r2, #29
 80016ec:	1ad3      	subs	r3, r2, r3
 80016ee:	465a      	mov	r2, fp
 80016f0:	0001      	movs	r1, r0
 80016f2:	40da      	lsrs	r2, r3
 80016f4:	465e      	mov	r6, fp
 80016f6:	3908      	subs	r1, #8
 80016f8:	408f      	lsls	r7, r1
 80016fa:	0013      	movs	r3, r2
 80016fc:	408e      	lsls	r6, r1
 80016fe:	433b      	orrs	r3, r7
 8001700:	9301      	str	r3, [sp, #4]
 8001702:	4b9c      	ldr	r3, [pc, #624]	; (8001974 <__aeabi_dmul+0x3b0>)
 8001704:	2700      	movs	r7, #0
 8001706:	1a1b      	subs	r3, r3, r0
 8001708:	4699      	mov	r9, r3
 800170a:	2300      	movs	r3, #0
 800170c:	469b      	mov	fp, r3
 800170e:	e77d      	b.n	800160c <__aeabi_dmul+0x48>
 8001710:	4641      	mov	r1, r8
 8001712:	4653      	mov	r3, sl
 8001714:	430b      	orrs	r3, r1
 8001716:	4993      	ldr	r1, [pc, #588]	; (8001964 <__aeabi_dmul+0x3a0>)
 8001718:	468c      	mov	ip, r1
 800171a:	44e1      	add	r9, ip
 800171c:	2b00      	cmp	r3, #0
 800171e:	d000      	beq.n	8001722 <__aeabi_dmul+0x15e>
 8001720:	e11a      	b.n	8001958 <__aeabi_dmul+0x394>
 8001722:	2202      	movs	r2, #2
 8001724:	2002      	movs	r0, #2
 8001726:	4317      	orrs	r7, r2
 8001728:	2200      	movs	r2, #0
 800172a:	e78c      	b.n	8001646 <__aeabi_dmul+0x82>
 800172c:	4313      	orrs	r3, r2
 800172e:	d100      	bne.n	8001732 <__aeabi_dmul+0x16e>
 8001730:	e10d      	b.n	800194e <__aeabi_dmul+0x38a>
 8001732:	4643      	mov	r3, r8
 8001734:	2b00      	cmp	r3, #0
 8001736:	d100      	bne.n	800173a <__aeabi_dmul+0x176>
 8001738:	e181      	b.n	8001a3e <__aeabi_dmul+0x47a>
 800173a:	4640      	mov	r0, r8
 800173c:	f000 fe0c 	bl	8002358 <__clzsi2>
 8001740:	0002      	movs	r2, r0
 8001742:	3a0b      	subs	r2, #11
 8001744:	2a1c      	cmp	r2, #28
 8001746:	dd00      	ble.n	800174a <__aeabi_dmul+0x186>
 8001748:	e172      	b.n	8001a30 <__aeabi_dmul+0x46c>
 800174a:	0001      	movs	r1, r0
 800174c:	4643      	mov	r3, r8
 800174e:	3908      	subs	r1, #8
 8001750:	408b      	lsls	r3, r1
 8001752:	4698      	mov	r8, r3
 8001754:	231d      	movs	r3, #29
 8001756:	1a9a      	subs	r2, r3, r2
 8001758:	4653      	mov	r3, sl
 800175a:	40d3      	lsrs	r3, r2
 800175c:	001a      	movs	r2, r3
 800175e:	4643      	mov	r3, r8
 8001760:	4313      	orrs	r3, r2
 8001762:	4652      	mov	r2, sl
 8001764:	408a      	lsls	r2, r1
 8001766:	4649      	mov	r1, r9
 8001768:	1a08      	subs	r0, r1, r0
 800176a:	4982      	ldr	r1, [pc, #520]	; (8001974 <__aeabi_dmul+0x3b0>)
 800176c:	4689      	mov	r9, r1
 800176e:	4481      	add	r9, r0
 8001770:	2000      	movs	r0, #0
 8001772:	e768      	b.n	8001646 <__aeabi_dmul+0x82>
 8001774:	4b7b      	ldr	r3, [pc, #492]	; (8001964 <__aeabi_dmul+0x3a0>)
 8001776:	2700      	movs	r7, #0
 8001778:	2600      	movs	r6, #0
 800177a:	e78e      	b.n	800169a <__aeabi_dmul+0xd6>
 800177c:	0c14      	lsrs	r4, r2, #16
 800177e:	0412      	lsls	r2, r2, #16
 8001780:	0c12      	lsrs	r2, r2, #16
 8001782:	0011      	movs	r1, r2
 8001784:	0c37      	lsrs	r7, r6, #16
 8001786:	0436      	lsls	r6, r6, #16
 8001788:	0c35      	lsrs	r5, r6, #16
 800178a:	4379      	muls	r1, r7
 800178c:	0028      	movs	r0, r5
 800178e:	468c      	mov	ip, r1
 8001790:	002e      	movs	r6, r5
 8001792:	4360      	muls	r0, r4
 8001794:	4460      	add	r0, ip
 8001796:	4683      	mov	fp, r0
 8001798:	4356      	muls	r6, r2
 800179a:	0021      	movs	r1, r4
 800179c:	0c30      	lsrs	r0, r6, #16
 800179e:	4680      	mov	r8, r0
 80017a0:	4658      	mov	r0, fp
 80017a2:	4379      	muls	r1, r7
 80017a4:	4440      	add	r0, r8
 80017a6:	9102      	str	r1, [sp, #8]
 80017a8:	4584      	cmp	ip, r0
 80017aa:	d906      	bls.n	80017ba <__aeabi_dmul+0x1f6>
 80017ac:	4688      	mov	r8, r1
 80017ae:	2180      	movs	r1, #128	; 0x80
 80017b0:	0249      	lsls	r1, r1, #9
 80017b2:	468c      	mov	ip, r1
 80017b4:	44e0      	add	r8, ip
 80017b6:	4641      	mov	r1, r8
 80017b8:	9102      	str	r1, [sp, #8]
 80017ba:	0436      	lsls	r6, r6, #16
 80017bc:	0c01      	lsrs	r1, r0, #16
 80017be:	0c36      	lsrs	r6, r6, #16
 80017c0:	0400      	lsls	r0, r0, #16
 80017c2:	468b      	mov	fp, r1
 80017c4:	1981      	adds	r1, r0, r6
 80017c6:	0c1e      	lsrs	r6, r3, #16
 80017c8:	041b      	lsls	r3, r3, #16
 80017ca:	0c1b      	lsrs	r3, r3, #16
 80017cc:	9103      	str	r1, [sp, #12]
 80017ce:	0019      	movs	r1, r3
 80017d0:	4379      	muls	r1, r7
 80017d2:	468c      	mov	ip, r1
 80017d4:	0028      	movs	r0, r5
 80017d6:	4375      	muls	r5, r6
 80017d8:	4465      	add	r5, ip
 80017da:	46a8      	mov	r8, r5
 80017dc:	4358      	muls	r0, r3
 80017de:	0c05      	lsrs	r5, r0, #16
 80017e0:	4445      	add	r5, r8
 80017e2:	4377      	muls	r7, r6
 80017e4:	42a9      	cmp	r1, r5
 80017e6:	d903      	bls.n	80017f0 <__aeabi_dmul+0x22c>
 80017e8:	2180      	movs	r1, #128	; 0x80
 80017ea:	0249      	lsls	r1, r1, #9
 80017ec:	468c      	mov	ip, r1
 80017ee:	4467      	add	r7, ip
 80017f0:	0c29      	lsrs	r1, r5, #16
 80017f2:	468c      	mov	ip, r1
 80017f4:	0039      	movs	r1, r7
 80017f6:	0400      	lsls	r0, r0, #16
 80017f8:	0c00      	lsrs	r0, r0, #16
 80017fa:	042d      	lsls	r5, r5, #16
 80017fc:	182d      	adds	r5, r5, r0
 80017fe:	4461      	add	r1, ip
 8001800:	44ab      	add	fp, r5
 8001802:	9105      	str	r1, [sp, #20]
 8001804:	4659      	mov	r1, fp
 8001806:	9104      	str	r1, [sp, #16]
 8001808:	9901      	ldr	r1, [sp, #4]
 800180a:	040f      	lsls	r7, r1, #16
 800180c:	0c3f      	lsrs	r7, r7, #16
 800180e:	0c08      	lsrs	r0, r1, #16
 8001810:	0039      	movs	r1, r7
 8001812:	4351      	muls	r1, r2
 8001814:	4342      	muls	r2, r0
 8001816:	4690      	mov	r8, r2
 8001818:	0002      	movs	r2, r0
 800181a:	468c      	mov	ip, r1
 800181c:	0c09      	lsrs	r1, r1, #16
 800181e:	468b      	mov	fp, r1
 8001820:	4362      	muls	r2, r4
 8001822:	437c      	muls	r4, r7
 8001824:	4444      	add	r4, r8
 8001826:	445c      	add	r4, fp
 8001828:	45a0      	cmp	r8, r4
 800182a:	d903      	bls.n	8001834 <__aeabi_dmul+0x270>
 800182c:	2180      	movs	r1, #128	; 0x80
 800182e:	0249      	lsls	r1, r1, #9
 8001830:	4688      	mov	r8, r1
 8001832:	4442      	add	r2, r8
 8001834:	0c21      	lsrs	r1, r4, #16
 8001836:	4688      	mov	r8, r1
 8001838:	4661      	mov	r1, ip
 800183a:	0409      	lsls	r1, r1, #16
 800183c:	0c09      	lsrs	r1, r1, #16
 800183e:	468c      	mov	ip, r1
 8001840:	0039      	movs	r1, r7
 8001842:	4359      	muls	r1, r3
 8001844:	4343      	muls	r3, r0
 8001846:	4370      	muls	r0, r6
 8001848:	437e      	muls	r6, r7
 800184a:	0c0f      	lsrs	r7, r1, #16
 800184c:	18f6      	adds	r6, r6, r3
 800184e:	0424      	lsls	r4, r4, #16
 8001850:	19be      	adds	r6, r7, r6
 8001852:	4464      	add	r4, ip
 8001854:	4442      	add	r2, r8
 8001856:	468c      	mov	ip, r1
 8001858:	42b3      	cmp	r3, r6
 800185a:	d903      	bls.n	8001864 <__aeabi_dmul+0x2a0>
 800185c:	2380      	movs	r3, #128	; 0x80
 800185e:	025b      	lsls	r3, r3, #9
 8001860:	4698      	mov	r8, r3
 8001862:	4440      	add	r0, r8
 8001864:	9b02      	ldr	r3, [sp, #8]
 8001866:	4661      	mov	r1, ip
 8001868:	4698      	mov	r8, r3
 800186a:	9b04      	ldr	r3, [sp, #16]
 800186c:	0437      	lsls	r7, r6, #16
 800186e:	4443      	add	r3, r8
 8001870:	469b      	mov	fp, r3
 8001872:	45ab      	cmp	fp, r5
 8001874:	41ad      	sbcs	r5, r5
 8001876:	426b      	negs	r3, r5
 8001878:	040d      	lsls	r5, r1, #16
 800187a:	9905      	ldr	r1, [sp, #20]
 800187c:	0c2d      	lsrs	r5, r5, #16
 800187e:	468c      	mov	ip, r1
 8001880:	197f      	adds	r7, r7, r5
 8001882:	4467      	add	r7, ip
 8001884:	18fd      	adds	r5, r7, r3
 8001886:	46a8      	mov	r8, r5
 8001888:	465d      	mov	r5, fp
 800188a:	192d      	adds	r5, r5, r4
 800188c:	42a5      	cmp	r5, r4
 800188e:	41a4      	sbcs	r4, r4
 8001890:	4693      	mov	fp, r2
 8001892:	4264      	negs	r4, r4
 8001894:	46a4      	mov	ip, r4
 8001896:	44c3      	add	fp, r8
 8001898:	44dc      	add	ip, fp
 800189a:	428f      	cmp	r7, r1
 800189c:	41bf      	sbcs	r7, r7
 800189e:	4598      	cmp	r8, r3
 80018a0:	419b      	sbcs	r3, r3
 80018a2:	4593      	cmp	fp, r2
 80018a4:	4192      	sbcs	r2, r2
 80018a6:	45a4      	cmp	ip, r4
 80018a8:	41a4      	sbcs	r4, r4
 80018aa:	425b      	negs	r3, r3
 80018ac:	427f      	negs	r7, r7
 80018ae:	431f      	orrs	r7, r3
 80018b0:	0c36      	lsrs	r6, r6, #16
 80018b2:	4252      	negs	r2, r2
 80018b4:	4264      	negs	r4, r4
 80018b6:	19bf      	adds	r7, r7, r6
 80018b8:	4322      	orrs	r2, r4
 80018ba:	18bf      	adds	r7, r7, r2
 80018bc:	4662      	mov	r2, ip
 80018be:	1838      	adds	r0, r7, r0
 80018c0:	0243      	lsls	r3, r0, #9
 80018c2:	0dd2      	lsrs	r2, r2, #23
 80018c4:	9903      	ldr	r1, [sp, #12]
 80018c6:	4313      	orrs	r3, r2
 80018c8:	026a      	lsls	r2, r5, #9
 80018ca:	430a      	orrs	r2, r1
 80018cc:	1e50      	subs	r0, r2, #1
 80018ce:	4182      	sbcs	r2, r0
 80018d0:	4661      	mov	r1, ip
 80018d2:	0ded      	lsrs	r5, r5, #23
 80018d4:	432a      	orrs	r2, r5
 80018d6:	024e      	lsls	r6, r1, #9
 80018d8:	4332      	orrs	r2, r6
 80018da:	01d9      	lsls	r1, r3, #7
 80018dc:	d400      	bmi.n	80018e0 <__aeabi_dmul+0x31c>
 80018de:	e0b3      	b.n	8001a48 <__aeabi_dmul+0x484>
 80018e0:	2601      	movs	r6, #1
 80018e2:	0850      	lsrs	r0, r2, #1
 80018e4:	4032      	ands	r2, r6
 80018e6:	4302      	orrs	r2, r0
 80018e8:	07de      	lsls	r6, r3, #31
 80018ea:	4332      	orrs	r2, r6
 80018ec:	085b      	lsrs	r3, r3, #1
 80018ee:	4c22      	ldr	r4, [pc, #136]	; (8001978 <__aeabi_dmul+0x3b4>)
 80018f0:	4454      	add	r4, sl
 80018f2:	2c00      	cmp	r4, #0
 80018f4:	dd62      	ble.n	80019bc <__aeabi_dmul+0x3f8>
 80018f6:	0751      	lsls	r1, r2, #29
 80018f8:	d009      	beq.n	800190e <__aeabi_dmul+0x34a>
 80018fa:	200f      	movs	r0, #15
 80018fc:	4010      	ands	r0, r2
 80018fe:	2804      	cmp	r0, #4
 8001900:	d005      	beq.n	800190e <__aeabi_dmul+0x34a>
 8001902:	1d10      	adds	r0, r2, #4
 8001904:	4290      	cmp	r0, r2
 8001906:	4192      	sbcs	r2, r2
 8001908:	4252      	negs	r2, r2
 800190a:	189b      	adds	r3, r3, r2
 800190c:	0002      	movs	r2, r0
 800190e:	01d9      	lsls	r1, r3, #7
 8001910:	d504      	bpl.n	800191c <__aeabi_dmul+0x358>
 8001912:	2480      	movs	r4, #128	; 0x80
 8001914:	4819      	ldr	r0, [pc, #100]	; (800197c <__aeabi_dmul+0x3b8>)
 8001916:	00e4      	lsls	r4, r4, #3
 8001918:	4003      	ands	r3, r0
 800191a:	4454      	add	r4, sl
 800191c:	4818      	ldr	r0, [pc, #96]	; (8001980 <__aeabi_dmul+0x3bc>)
 800191e:	4284      	cmp	r4, r0
 8001920:	dd00      	ble.n	8001924 <__aeabi_dmul+0x360>
 8001922:	e727      	b.n	8001774 <__aeabi_dmul+0x1b0>
 8001924:	075e      	lsls	r6, r3, #29
 8001926:	025b      	lsls	r3, r3, #9
 8001928:	08d2      	lsrs	r2, r2, #3
 800192a:	0b1f      	lsrs	r7, r3, #12
 800192c:	0563      	lsls	r3, r4, #21
 800192e:	4316      	orrs	r6, r2
 8001930:	0d5b      	lsrs	r3, r3, #21
 8001932:	e6b2      	b.n	800169a <__aeabi_dmul+0xd6>
 8001934:	2300      	movs	r3, #0
 8001936:	4699      	mov	r9, r3
 8001938:	3301      	adds	r3, #1
 800193a:	2704      	movs	r7, #4
 800193c:	2600      	movs	r6, #0
 800193e:	469b      	mov	fp, r3
 8001940:	e664      	b.n	800160c <__aeabi_dmul+0x48>
 8001942:	2303      	movs	r3, #3
 8001944:	9701      	str	r7, [sp, #4]
 8001946:	4681      	mov	r9, r0
 8001948:	270c      	movs	r7, #12
 800194a:	469b      	mov	fp, r3
 800194c:	e65e      	b.n	800160c <__aeabi_dmul+0x48>
 800194e:	2201      	movs	r2, #1
 8001950:	2001      	movs	r0, #1
 8001952:	4317      	orrs	r7, r2
 8001954:	2200      	movs	r2, #0
 8001956:	e676      	b.n	8001646 <__aeabi_dmul+0x82>
 8001958:	2303      	movs	r3, #3
 800195a:	2003      	movs	r0, #3
 800195c:	431f      	orrs	r7, r3
 800195e:	4643      	mov	r3, r8
 8001960:	e671      	b.n	8001646 <__aeabi_dmul+0x82>
 8001962:	46c0      	nop			; (mov r8, r8)
 8001964:	000007ff 	.word	0x000007ff
 8001968:	fffffc01 	.word	0xfffffc01
 800196c:	08006148 	.word	0x08006148
 8001970:	800fffff 	.word	0x800fffff
 8001974:	fffffc0d 	.word	0xfffffc0d
 8001978:	000003ff 	.word	0x000003ff
 800197c:	feffffff 	.word	0xfeffffff
 8001980:	000007fe 	.word	0x000007fe
 8001984:	2300      	movs	r3, #0
 8001986:	2780      	movs	r7, #128	; 0x80
 8001988:	9300      	str	r3, [sp, #0]
 800198a:	033f      	lsls	r7, r7, #12
 800198c:	2600      	movs	r6, #0
 800198e:	4b43      	ldr	r3, [pc, #268]	; (8001a9c <__aeabi_dmul+0x4d8>)
 8001990:	e683      	b.n	800169a <__aeabi_dmul+0xd6>
 8001992:	9b01      	ldr	r3, [sp, #4]
 8001994:	0032      	movs	r2, r6
 8001996:	46a4      	mov	ip, r4
 8001998:	4658      	mov	r0, fp
 800199a:	e670      	b.n	800167e <__aeabi_dmul+0xba>
 800199c:	46ac      	mov	ip, r5
 800199e:	e66e      	b.n	800167e <__aeabi_dmul+0xba>
 80019a0:	2780      	movs	r7, #128	; 0x80
 80019a2:	9901      	ldr	r1, [sp, #4]
 80019a4:	033f      	lsls	r7, r7, #12
 80019a6:	4239      	tst	r1, r7
 80019a8:	d02d      	beq.n	8001a06 <__aeabi_dmul+0x442>
 80019aa:	423b      	tst	r3, r7
 80019ac:	d12b      	bne.n	8001a06 <__aeabi_dmul+0x442>
 80019ae:	431f      	orrs	r7, r3
 80019b0:	033f      	lsls	r7, r7, #12
 80019b2:	0b3f      	lsrs	r7, r7, #12
 80019b4:	9500      	str	r5, [sp, #0]
 80019b6:	0016      	movs	r6, r2
 80019b8:	4b38      	ldr	r3, [pc, #224]	; (8001a9c <__aeabi_dmul+0x4d8>)
 80019ba:	e66e      	b.n	800169a <__aeabi_dmul+0xd6>
 80019bc:	2501      	movs	r5, #1
 80019be:	1b2d      	subs	r5, r5, r4
 80019c0:	2d38      	cmp	r5, #56	; 0x38
 80019c2:	dd00      	ble.n	80019c6 <__aeabi_dmul+0x402>
 80019c4:	e666      	b.n	8001694 <__aeabi_dmul+0xd0>
 80019c6:	2d1f      	cmp	r5, #31
 80019c8:	dc40      	bgt.n	8001a4c <__aeabi_dmul+0x488>
 80019ca:	4835      	ldr	r0, [pc, #212]	; (8001aa0 <__aeabi_dmul+0x4dc>)
 80019cc:	001c      	movs	r4, r3
 80019ce:	4450      	add	r0, sl
 80019d0:	0016      	movs	r6, r2
 80019d2:	4082      	lsls	r2, r0
 80019d4:	4084      	lsls	r4, r0
 80019d6:	40ee      	lsrs	r6, r5
 80019d8:	1e50      	subs	r0, r2, #1
 80019da:	4182      	sbcs	r2, r0
 80019dc:	4334      	orrs	r4, r6
 80019de:	4314      	orrs	r4, r2
 80019e0:	40eb      	lsrs	r3, r5
 80019e2:	0762      	lsls	r2, r4, #29
 80019e4:	d009      	beq.n	80019fa <__aeabi_dmul+0x436>
 80019e6:	220f      	movs	r2, #15
 80019e8:	4022      	ands	r2, r4
 80019ea:	2a04      	cmp	r2, #4
 80019ec:	d005      	beq.n	80019fa <__aeabi_dmul+0x436>
 80019ee:	0022      	movs	r2, r4
 80019f0:	1d14      	adds	r4, r2, #4
 80019f2:	4294      	cmp	r4, r2
 80019f4:	4180      	sbcs	r0, r0
 80019f6:	4240      	negs	r0, r0
 80019f8:	181b      	adds	r3, r3, r0
 80019fa:	021a      	lsls	r2, r3, #8
 80019fc:	d53e      	bpl.n	8001a7c <__aeabi_dmul+0x4b8>
 80019fe:	2301      	movs	r3, #1
 8001a00:	2700      	movs	r7, #0
 8001a02:	2600      	movs	r6, #0
 8001a04:	e649      	b.n	800169a <__aeabi_dmul+0xd6>
 8001a06:	2780      	movs	r7, #128	; 0x80
 8001a08:	9b01      	ldr	r3, [sp, #4]
 8001a0a:	033f      	lsls	r7, r7, #12
 8001a0c:	431f      	orrs	r7, r3
 8001a0e:	033f      	lsls	r7, r7, #12
 8001a10:	0b3f      	lsrs	r7, r7, #12
 8001a12:	9400      	str	r4, [sp, #0]
 8001a14:	4b21      	ldr	r3, [pc, #132]	; (8001a9c <__aeabi_dmul+0x4d8>)
 8001a16:	e640      	b.n	800169a <__aeabi_dmul+0xd6>
 8001a18:	0003      	movs	r3, r0
 8001a1a:	465a      	mov	r2, fp
 8001a1c:	3b28      	subs	r3, #40	; 0x28
 8001a1e:	409a      	lsls	r2, r3
 8001a20:	2600      	movs	r6, #0
 8001a22:	9201      	str	r2, [sp, #4]
 8001a24:	e66d      	b.n	8001702 <__aeabi_dmul+0x13e>
 8001a26:	4658      	mov	r0, fp
 8001a28:	f000 fc96 	bl	8002358 <__clzsi2>
 8001a2c:	3020      	adds	r0, #32
 8001a2e:	e657      	b.n	80016e0 <__aeabi_dmul+0x11c>
 8001a30:	0003      	movs	r3, r0
 8001a32:	4652      	mov	r2, sl
 8001a34:	3b28      	subs	r3, #40	; 0x28
 8001a36:	409a      	lsls	r2, r3
 8001a38:	0013      	movs	r3, r2
 8001a3a:	2200      	movs	r2, #0
 8001a3c:	e693      	b.n	8001766 <__aeabi_dmul+0x1a2>
 8001a3e:	4650      	mov	r0, sl
 8001a40:	f000 fc8a 	bl	8002358 <__clzsi2>
 8001a44:	3020      	adds	r0, #32
 8001a46:	e67b      	b.n	8001740 <__aeabi_dmul+0x17c>
 8001a48:	46ca      	mov	sl, r9
 8001a4a:	e750      	b.n	80018ee <__aeabi_dmul+0x32a>
 8001a4c:	201f      	movs	r0, #31
 8001a4e:	001e      	movs	r6, r3
 8001a50:	4240      	negs	r0, r0
 8001a52:	1b04      	subs	r4, r0, r4
 8001a54:	40e6      	lsrs	r6, r4
 8001a56:	2d20      	cmp	r5, #32
 8001a58:	d003      	beq.n	8001a62 <__aeabi_dmul+0x49e>
 8001a5a:	4c12      	ldr	r4, [pc, #72]	; (8001aa4 <__aeabi_dmul+0x4e0>)
 8001a5c:	4454      	add	r4, sl
 8001a5e:	40a3      	lsls	r3, r4
 8001a60:	431a      	orrs	r2, r3
 8001a62:	1e50      	subs	r0, r2, #1
 8001a64:	4182      	sbcs	r2, r0
 8001a66:	4332      	orrs	r2, r6
 8001a68:	2607      	movs	r6, #7
 8001a6a:	2700      	movs	r7, #0
 8001a6c:	4016      	ands	r6, r2
 8001a6e:	d009      	beq.n	8001a84 <__aeabi_dmul+0x4c0>
 8001a70:	200f      	movs	r0, #15
 8001a72:	2300      	movs	r3, #0
 8001a74:	4010      	ands	r0, r2
 8001a76:	0014      	movs	r4, r2
 8001a78:	2804      	cmp	r0, #4
 8001a7a:	d1b9      	bne.n	80019f0 <__aeabi_dmul+0x42c>
 8001a7c:	0022      	movs	r2, r4
 8001a7e:	075e      	lsls	r6, r3, #29
 8001a80:	025b      	lsls	r3, r3, #9
 8001a82:	0b1f      	lsrs	r7, r3, #12
 8001a84:	08d2      	lsrs	r2, r2, #3
 8001a86:	4316      	orrs	r6, r2
 8001a88:	2300      	movs	r3, #0
 8001a8a:	e606      	b.n	800169a <__aeabi_dmul+0xd6>
 8001a8c:	2780      	movs	r7, #128	; 0x80
 8001a8e:	033f      	lsls	r7, r7, #12
 8001a90:	431f      	orrs	r7, r3
 8001a92:	033f      	lsls	r7, r7, #12
 8001a94:	0b3f      	lsrs	r7, r7, #12
 8001a96:	0016      	movs	r6, r2
 8001a98:	4b00      	ldr	r3, [pc, #0]	; (8001a9c <__aeabi_dmul+0x4d8>)
 8001a9a:	e5fe      	b.n	800169a <__aeabi_dmul+0xd6>
 8001a9c:	000007ff 	.word	0x000007ff
 8001aa0:	0000041e 	.word	0x0000041e
 8001aa4:	0000043e 	.word	0x0000043e

08001aa8 <__aeabi_dsub>:
 8001aa8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001aaa:	4657      	mov	r7, sl
 8001aac:	464e      	mov	r6, r9
 8001aae:	4645      	mov	r5, r8
 8001ab0:	46de      	mov	lr, fp
 8001ab2:	000c      	movs	r4, r1
 8001ab4:	0309      	lsls	r1, r1, #12
 8001ab6:	b5e0      	push	{r5, r6, r7, lr}
 8001ab8:	0a49      	lsrs	r1, r1, #9
 8001aba:	0f46      	lsrs	r6, r0, #29
 8001abc:	005f      	lsls	r7, r3, #1
 8001abe:	4331      	orrs	r1, r6
 8001ac0:	031e      	lsls	r6, r3, #12
 8001ac2:	0fdb      	lsrs	r3, r3, #31
 8001ac4:	0a76      	lsrs	r6, r6, #9
 8001ac6:	469b      	mov	fp, r3
 8001ac8:	0f53      	lsrs	r3, r2, #29
 8001aca:	4333      	orrs	r3, r6
 8001acc:	4ec8      	ldr	r6, [pc, #800]	; (8001df0 <__aeabi_dsub+0x348>)
 8001ace:	0065      	lsls	r5, r4, #1
 8001ad0:	00c0      	lsls	r0, r0, #3
 8001ad2:	0fe4      	lsrs	r4, r4, #31
 8001ad4:	00d2      	lsls	r2, r2, #3
 8001ad6:	0d6d      	lsrs	r5, r5, #21
 8001ad8:	46a2      	mov	sl, r4
 8001ada:	4681      	mov	r9, r0
 8001adc:	0d7f      	lsrs	r7, r7, #21
 8001ade:	469c      	mov	ip, r3
 8001ae0:	4690      	mov	r8, r2
 8001ae2:	42b7      	cmp	r7, r6
 8001ae4:	d100      	bne.n	8001ae8 <__aeabi_dsub+0x40>
 8001ae6:	e0b9      	b.n	8001c5c <__aeabi_dsub+0x1b4>
 8001ae8:	465b      	mov	r3, fp
 8001aea:	2601      	movs	r6, #1
 8001aec:	4073      	eors	r3, r6
 8001aee:	469b      	mov	fp, r3
 8001af0:	1bee      	subs	r6, r5, r7
 8001af2:	45a3      	cmp	fp, r4
 8001af4:	d100      	bne.n	8001af8 <__aeabi_dsub+0x50>
 8001af6:	e083      	b.n	8001c00 <__aeabi_dsub+0x158>
 8001af8:	2e00      	cmp	r6, #0
 8001afa:	dd63      	ble.n	8001bc4 <__aeabi_dsub+0x11c>
 8001afc:	2f00      	cmp	r7, #0
 8001afe:	d000      	beq.n	8001b02 <__aeabi_dsub+0x5a>
 8001b00:	e0b1      	b.n	8001c66 <__aeabi_dsub+0x1be>
 8001b02:	4663      	mov	r3, ip
 8001b04:	4313      	orrs	r3, r2
 8001b06:	d100      	bne.n	8001b0a <__aeabi_dsub+0x62>
 8001b08:	e123      	b.n	8001d52 <__aeabi_dsub+0x2aa>
 8001b0a:	1e73      	subs	r3, r6, #1
 8001b0c:	2b00      	cmp	r3, #0
 8001b0e:	d000      	beq.n	8001b12 <__aeabi_dsub+0x6a>
 8001b10:	e1ba      	b.n	8001e88 <__aeabi_dsub+0x3e0>
 8001b12:	1a86      	subs	r6, r0, r2
 8001b14:	4663      	mov	r3, ip
 8001b16:	42b0      	cmp	r0, r6
 8001b18:	4180      	sbcs	r0, r0
 8001b1a:	2501      	movs	r5, #1
 8001b1c:	1ac9      	subs	r1, r1, r3
 8001b1e:	4240      	negs	r0, r0
 8001b20:	1a09      	subs	r1, r1, r0
 8001b22:	020b      	lsls	r3, r1, #8
 8001b24:	d400      	bmi.n	8001b28 <__aeabi_dsub+0x80>
 8001b26:	e147      	b.n	8001db8 <__aeabi_dsub+0x310>
 8001b28:	0249      	lsls	r1, r1, #9
 8001b2a:	0a4b      	lsrs	r3, r1, #9
 8001b2c:	4698      	mov	r8, r3
 8001b2e:	4643      	mov	r3, r8
 8001b30:	2b00      	cmp	r3, #0
 8001b32:	d100      	bne.n	8001b36 <__aeabi_dsub+0x8e>
 8001b34:	e189      	b.n	8001e4a <__aeabi_dsub+0x3a2>
 8001b36:	4640      	mov	r0, r8
 8001b38:	f000 fc0e 	bl	8002358 <__clzsi2>
 8001b3c:	0003      	movs	r3, r0
 8001b3e:	3b08      	subs	r3, #8
 8001b40:	2b1f      	cmp	r3, #31
 8001b42:	dd00      	ble.n	8001b46 <__aeabi_dsub+0x9e>
 8001b44:	e17c      	b.n	8001e40 <__aeabi_dsub+0x398>
 8001b46:	2220      	movs	r2, #32
 8001b48:	0030      	movs	r0, r6
 8001b4a:	1ad2      	subs	r2, r2, r3
 8001b4c:	4641      	mov	r1, r8
 8001b4e:	40d0      	lsrs	r0, r2
 8001b50:	4099      	lsls	r1, r3
 8001b52:	0002      	movs	r2, r0
 8001b54:	409e      	lsls	r6, r3
 8001b56:	430a      	orrs	r2, r1
 8001b58:	429d      	cmp	r5, r3
 8001b5a:	dd00      	ble.n	8001b5e <__aeabi_dsub+0xb6>
 8001b5c:	e16a      	b.n	8001e34 <__aeabi_dsub+0x38c>
 8001b5e:	1b5d      	subs	r5, r3, r5
 8001b60:	1c6b      	adds	r3, r5, #1
 8001b62:	2b1f      	cmp	r3, #31
 8001b64:	dd00      	ble.n	8001b68 <__aeabi_dsub+0xc0>
 8001b66:	e194      	b.n	8001e92 <__aeabi_dsub+0x3ea>
 8001b68:	2120      	movs	r1, #32
 8001b6a:	0010      	movs	r0, r2
 8001b6c:	0035      	movs	r5, r6
 8001b6e:	1ac9      	subs	r1, r1, r3
 8001b70:	408e      	lsls	r6, r1
 8001b72:	40da      	lsrs	r2, r3
 8001b74:	4088      	lsls	r0, r1
 8001b76:	40dd      	lsrs	r5, r3
 8001b78:	1e71      	subs	r1, r6, #1
 8001b7a:	418e      	sbcs	r6, r1
 8001b7c:	0011      	movs	r1, r2
 8001b7e:	2207      	movs	r2, #7
 8001b80:	4328      	orrs	r0, r5
 8001b82:	2500      	movs	r5, #0
 8001b84:	4306      	orrs	r6, r0
 8001b86:	4032      	ands	r2, r6
 8001b88:	2a00      	cmp	r2, #0
 8001b8a:	d009      	beq.n	8001ba0 <__aeabi_dsub+0xf8>
 8001b8c:	230f      	movs	r3, #15
 8001b8e:	4033      	ands	r3, r6
 8001b90:	2b04      	cmp	r3, #4
 8001b92:	d005      	beq.n	8001ba0 <__aeabi_dsub+0xf8>
 8001b94:	1d33      	adds	r3, r6, #4
 8001b96:	42b3      	cmp	r3, r6
 8001b98:	41b6      	sbcs	r6, r6
 8001b9a:	4276      	negs	r6, r6
 8001b9c:	1989      	adds	r1, r1, r6
 8001b9e:	001e      	movs	r6, r3
 8001ba0:	020b      	lsls	r3, r1, #8
 8001ba2:	d400      	bmi.n	8001ba6 <__aeabi_dsub+0xfe>
 8001ba4:	e23d      	b.n	8002022 <__aeabi_dsub+0x57a>
 8001ba6:	1c6a      	adds	r2, r5, #1
 8001ba8:	4b91      	ldr	r3, [pc, #580]	; (8001df0 <__aeabi_dsub+0x348>)
 8001baa:	0555      	lsls	r5, r2, #21
 8001bac:	0d6d      	lsrs	r5, r5, #21
 8001bae:	429a      	cmp	r2, r3
 8001bb0:	d100      	bne.n	8001bb4 <__aeabi_dsub+0x10c>
 8001bb2:	e119      	b.n	8001de8 <__aeabi_dsub+0x340>
 8001bb4:	4a8f      	ldr	r2, [pc, #572]	; (8001df4 <__aeabi_dsub+0x34c>)
 8001bb6:	08f6      	lsrs	r6, r6, #3
 8001bb8:	400a      	ands	r2, r1
 8001bba:	0757      	lsls	r7, r2, #29
 8001bbc:	0252      	lsls	r2, r2, #9
 8001bbe:	4337      	orrs	r7, r6
 8001bc0:	0b12      	lsrs	r2, r2, #12
 8001bc2:	e09b      	b.n	8001cfc <__aeabi_dsub+0x254>
 8001bc4:	2e00      	cmp	r6, #0
 8001bc6:	d000      	beq.n	8001bca <__aeabi_dsub+0x122>
 8001bc8:	e0c5      	b.n	8001d56 <__aeabi_dsub+0x2ae>
 8001bca:	1c6e      	adds	r6, r5, #1
 8001bcc:	0576      	lsls	r6, r6, #21
 8001bce:	0d76      	lsrs	r6, r6, #21
 8001bd0:	2e01      	cmp	r6, #1
 8001bd2:	dc00      	bgt.n	8001bd6 <__aeabi_dsub+0x12e>
 8001bd4:	e148      	b.n	8001e68 <__aeabi_dsub+0x3c0>
 8001bd6:	4667      	mov	r7, ip
 8001bd8:	1a86      	subs	r6, r0, r2
 8001bda:	1bcb      	subs	r3, r1, r7
 8001bdc:	42b0      	cmp	r0, r6
 8001bde:	41bf      	sbcs	r7, r7
 8001be0:	427f      	negs	r7, r7
 8001be2:	46b8      	mov	r8, r7
 8001be4:	001f      	movs	r7, r3
 8001be6:	4643      	mov	r3, r8
 8001be8:	1aff      	subs	r7, r7, r3
 8001bea:	003b      	movs	r3, r7
 8001bec:	46b8      	mov	r8, r7
 8001bee:	021b      	lsls	r3, r3, #8
 8001bf0:	d500      	bpl.n	8001bf4 <__aeabi_dsub+0x14c>
 8001bf2:	e15f      	b.n	8001eb4 <__aeabi_dsub+0x40c>
 8001bf4:	4337      	orrs	r7, r6
 8001bf6:	d19a      	bne.n	8001b2e <__aeabi_dsub+0x86>
 8001bf8:	2200      	movs	r2, #0
 8001bfa:	2400      	movs	r4, #0
 8001bfc:	2500      	movs	r5, #0
 8001bfe:	e079      	b.n	8001cf4 <__aeabi_dsub+0x24c>
 8001c00:	2e00      	cmp	r6, #0
 8001c02:	dc00      	bgt.n	8001c06 <__aeabi_dsub+0x15e>
 8001c04:	e0fa      	b.n	8001dfc <__aeabi_dsub+0x354>
 8001c06:	2f00      	cmp	r7, #0
 8001c08:	d100      	bne.n	8001c0c <__aeabi_dsub+0x164>
 8001c0a:	e08d      	b.n	8001d28 <__aeabi_dsub+0x280>
 8001c0c:	4b78      	ldr	r3, [pc, #480]	; (8001df0 <__aeabi_dsub+0x348>)
 8001c0e:	429d      	cmp	r5, r3
 8001c10:	d067      	beq.n	8001ce2 <__aeabi_dsub+0x23a>
 8001c12:	2380      	movs	r3, #128	; 0x80
 8001c14:	4667      	mov	r7, ip
 8001c16:	041b      	lsls	r3, r3, #16
 8001c18:	431f      	orrs	r7, r3
 8001c1a:	46bc      	mov	ip, r7
 8001c1c:	2e38      	cmp	r6, #56	; 0x38
 8001c1e:	dc00      	bgt.n	8001c22 <__aeabi_dsub+0x17a>
 8001c20:	e152      	b.n	8001ec8 <__aeabi_dsub+0x420>
 8001c22:	4663      	mov	r3, ip
 8001c24:	4313      	orrs	r3, r2
 8001c26:	1e5a      	subs	r2, r3, #1
 8001c28:	4193      	sbcs	r3, r2
 8001c2a:	181e      	adds	r6, r3, r0
 8001c2c:	4286      	cmp	r6, r0
 8001c2e:	4180      	sbcs	r0, r0
 8001c30:	4240      	negs	r0, r0
 8001c32:	1809      	adds	r1, r1, r0
 8001c34:	020b      	lsls	r3, r1, #8
 8001c36:	d400      	bmi.n	8001c3a <__aeabi_dsub+0x192>
 8001c38:	e0be      	b.n	8001db8 <__aeabi_dsub+0x310>
 8001c3a:	4b6d      	ldr	r3, [pc, #436]	; (8001df0 <__aeabi_dsub+0x348>)
 8001c3c:	3501      	adds	r5, #1
 8001c3e:	429d      	cmp	r5, r3
 8001c40:	d100      	bne.n	8001c44 <__aeabi_dsub+0x19c>
 8001c42:	e0d2      	b.n	8001dea <__aeabi_dsub+0x342>
 8001c44:	4a6b      	ldr	r2, [pc, #428]	; (8001df4 <__aeabi_dsub+0x34c>)
 8001c46:	0873      	lsrs	r3, r6, #1
 8001c48:	400a      	ands	r2, r1
 8001c4a:	2101      	movs	r1, #1
 8001c4c:	400e      	ands	r6, r1
 8001c4e:	431e      	orrs	r6, r3
 8001c50:	0851      	lsrs	r1, r2, #1
 8001c52:	07d3      	lsls	r3, r2, #31
 8001c54:	2207      	movs	r2, #7
 8001c56:	431e      	orrs	r6, r3
 8001c58:	4032      	ands	r2, r6
 8001c5a:	e795      	b.n	8001b88 <__aeabi_dsub+0xe0>
 8001c5c:	001e      	movs	r6, r3
 8001c5e:	4316      	orrs	r6, r2
 8001c60:	d000      	beq.n	8001c64 <__aeabi_dsub+0x1bc>
 8001c62:	e745      	b.n	8001af0 <__aeabi_dsub+0x48>
 8001c64:	e740      	b.n	8001ae8 <__aeabi_dsub+0x40>
 8001c66:	4b62      	ldr	r3, [pc, #392]	; (8001df0 <__aeabi_dsub+0x348>)
 8001c68:	429d      	cmp	r5, r3
 8001c6a:	d03a      	beq.n	8001ce2 <__aeabi_dsub+0x23a>
 8001c6c:	2380      	movs	r3, #128	; 0x80
 8001c6e:	4667      	mov	r7, ip
 8001c70:	041b      	lsls	r3, r3, #16
 8001c72:	431f      	orrs	r7, r3
 8001c74:	46bc      	mov	ip, r7
 8001c76:	2e38      	cmp	r6, #56	; 0x38
 8001c78:	dd00      	ble.n	8001c7c <__aeabi_dsub+0x1d4>
 8001c7a:	e0eb      	b.n	8001e54 <__aeabi_dsub+0x3ac>
 8001c7c:	2e1f      	cmp	r6, #31
 8001c7e:	dc00      	bgt.n	8001c82 <__aeabi_dsub+0x1da>
 8001c80:	e13a      	b.n	8001ef8 <__aeabi_dsub+0x450>
 8001c82:	0033      	movs	r3, r6
 8001c84:	4667      	mov	r7, ip
 8001c86:	3b20      	subs	r3, #32
 8001c88:	40df      	lsrs	r7, r3
 8001c8a:	003b      	movs	r3, r7
 8001c8c:	2e20      	cmp	r6, #32
 8001c8e:	d005      	beq.n	8001c9c <__aeabi_dsub+0x1f4>
 8001c90:	2740      	movs	r7, #64	; 0x40
 8001c92:	1bbf      	subs	r7, r7, r6
 8001c94:	4666      	mov	r6, ip
 8001c96:	40be      	lsls	r6, r7
 8001c98:	4332      	orrs	r2, r6
 8001c9a:	4690      	mov	r8, r2
 8001c9c:	4646      	mov	r6, r8
 8001c9e:	1e72      	subs	r2, r6, #1
 8001ca0:	4196      	sbcs	r6, r2
 8001ca2:	4333      	orrs	r3, r6
 8001ca4:	e0da      	b.n	8001e5c <__aeabi_dsub+0x3b4>
 8001ca6:	2b00      	cmp	r3, #0
 8001ca8:	d100      	bne.n	8001cac <__aeabi_dsub+0x204>
 8001caa:	e214      	b.n	80020d6 <__aeabi_dsub+0x62e>
 8001cac:	4663      	mov	r3, ip
 8001cae:	4313      	orrs	r3, r2
 8001cb0:	d100      	bne.n	8001cb4 <__aeabi_dsub+0x20c>
 8001cb2:	e168      	b.n	8001f86 <__aeabi_dsub+0x4de>
 8001cb4:	2380      	movs	r3, #128	; 0x80
 8001cb6:	074e      	lsls	r6, r1, #29
 8001cb8:	08c0      	lsrs	r0, r0, #3
 8001cba:	08c9      	lsrs	r1, r1, #3
 8001cbc:	031b      	lsls	r3, r3, #12
 8001cbe:	4306      	orrs	r6, r0
 8001cc0:	4219      	tst	r1, r3
 8001cc2:	d008      	beq.n	8001cd6 <__aeabi_dsub+0x22e>
 8001cc4:	4660      	mov	r0, ip
 8001cc6:	08c0      	lsrs	r0, r0, #3
 8001cc8:	4218      	tst	r0, r3
 8001cca:	d104      	bne.n	8001cd6 <__aeabi_dsub+0x22e>
 8001ccc:	4663      	mov	r3, ip
 8001cce:	0001      	movs	r1, r0
 8001cd0:	08d2      	lsrs	r2, r2, #3
 8001cd2:	075e      	lsls	r6, r3, #29
 8001cd4:	4316      	orrs	r6, r2
 8001cd6:	00f3      	lsls	r3, r6, #3
 8001cd8:	4699      	mov	r9, r3
 8001cda:	00c9      	lsls	r1, r1, #3
 8001cdc:	0f72      	lsrs	r2, r6, #29
 8001cde:	4d44      	ldr	r5, [pc, #272]	; (8001df0 <__aeabi_dsub+0x348>)
 8001ce0:	4311      	orrs	r1, r2
 8001ce2:	464b      	mov	r3, r9
 8001ce4:	08de      	lsrs	r6, r3, #3
 8001ce6:	4b42      	ldr	r3, [pc, #264]	; (8001df0 <__aeabi_dsub+0x348>)
 8001ce8:	074f      	lsls	r7, r1, #29
 8001cea:	4337      	orrs	r7, r6
 8001cec:	08ca      	lsrs	r2, r1, #3
 8001cee:	429d      	cmp	r5, r3
 8001cf0:	d100      	bne.n	8001cf4 <__aeabi_dsub+0x24c>
 8001cf2:	e06e      	b.n	8001dd2 <__aeabi_dsub+0x32a>
 8001cf4:	0312      	lsls	r2, r2, #12
 8001cf6:	056d      	lsls	r5, r5, #21
 8001cf8:	0b12      	lsrs	r2, r2, #12
 8001cfa:	0d6d      	lsrs	r5, r5, #21
 8001cfc:	2100      	movs	r1, #0
 8001cfe:	0312      	lsls	r2, r2, #12
 8001d00:	0b13      	lsrs	r3, r2, #12
 8001d02:	0d0a      	lsrs	r2, r1, #20
 8001d04:	0512      	lsls	r2, r2, #20
 8001d06:	431a      	orrs	r2, r3
 8001d08:	4b3b      	ldr	r3, [pc, #236]	; (8001df8 <__aeabi_dsub+0x350>)
 8001d0a:	052d      	lsls	r5, r5, #20
 8001d0c:	4013      	ands	r3, r2
 8001d0e:	432b      	orrs	r3, r5
 8001d10:	005b      	lsls	r3, r3, #1
 8001d12:	07e4      	lsls	r4, r4, #31
 8001d14:	085b      	lsrs	r3, r3, #1
 8001d16:	4323      	orrs	r3, r4
 8001d18:	0038      	movs	r0, r7
 8001d1a:	0019      	movs	r1, r3
 8001d1c:	bc3c      	pop	{r2, r3, r4, r5}
 8001d1e:	4690      	mov	r8, r2
 8001d20:	4699      	mov	r9, r3
 8001d22:	46a2      	mov	sl, r4
 8001d24:	46ab      	mov	fp, r5
 8001d26:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8001d28:	4663      	mov	r3, ip
 8001d2a:	4313      	orrs	r3, r2
 8001d2c:	d011      	beq.n	8001d52 <__aeabi_dsub+0x2aa>
 8001d2e:	1e73      	subs	r3, r6, #1
 8001d30:	2b00      	cmp	r3, #0
 8001d32:	d000      	beq.n	8001d36 <__aeabi_dsub+0x28e>
 8001d34:	e107      	b.n	8001f46 <__aeabi_dsub+0x49e>
 8001d36:	1886      	adds	r6, r0, r2
 8001d38:	4286      	cmp	r6, r0
 8001d3a:	4180      	sbcs	r0, r0
 8001d3c:	4461      	add	r1, ip
 8001d3e:	4240      	negs	r0, r0
 8001d40:	1809      	adds	r1, r1, r0
 8001d42:	2501      	movs	r5, #1
 8001d44:	020b      	lsls	r3, r1, #8
 8001d46:	d537      	bpl.n	8001db8 <__aeabi_dsub+0x310>
 8001d48:	2502      	movs	r5, #2
 8001d4a:	e77b      	b.n	8001c44 <__aeabi_dsub+0x19c>
 8001d4c:	003e      	movs	r6, r7
 8001d4e:	4661      	mov	r1, ip
 8001d50:	4691      	mov	r9, r2
 8001d52:	0035      	movs	r5, r6
 8001d54:	e7c5      	b.n	8001ce2 <__aeabi_dsub+0x23a>
 8001d56:	465c      	mov	r4, fp
 8001d58:	2d00      	cmp	r5, #0
 8001d5a:	d000      	beq.n	8001d5e <__aeabi_dsub+0x2b6>
 8001d5c:	e0e1      	b.n	8001f22 <__aeabi_dsub+0x47a>
 8001d5e:	000b      	movs	r3, r1
 8001d60:	4303      	orrs	r3, r0
 8001d62:	d0f3      	beq.n	8001d4c <__aeabi_dsub+0x2a4>
 8001d64:	1c73      	adds	r3, r6, #1
 8001d66:	d100      	bne.n	8001d6a <__aeabi_dsub+0x2c2>
 8001d68:	e1ac      	b.n	80020c4 <__aeabi_dsub+0x61c>
 8001d6a:	4b21      	ldr	r3, [pc, #132]	; (8001df0 <__aeabi_dsub+0x348>)
 8001d6c:	429f      	cmp	r7, r3
 8001d6e:	d100      	bne.n	8001d72 <__aeabi_dsub+0x2ca>
 8001d70:	e13a      	b.n	8001fe8 <__aeabi_dsub+0x540>
 8001d72:	43f3      	mvns	r3, r6
 8001d74:	2b38      	cmp	r3, #56	; 0x38
 8001d76:	dd00      	ble.n	8001d7a <__aeabi_dsub+0x2d2>
 8001d78:	e16f      	b.n	800205a <__aeabi_dsub+0x5b2>
 8001d7a:	2b1f      	cmp	r3, #31
 8001d7c:	dd00      	ble.n	8001d80 <__aeabi_dsub+0x2d8>
 8001d7e:	e18c      	b.n	800209a <__aeabi_dsub+0x5f2>
 8001d80:	2520      	movs	r5, #32
 8001d82:	000e      	movs	r6, r1
 8001d84:	1aed      	subs	r5, r5, r3
 8001d86:	40ae      	lsls	r6, r5
 8001d88:	46b0      	mov	r8, r6
 8001d8a:	0006      	movs	r6, r0
 8001d8c:	46aa      	mov	sl, r5
 8001d8e:	40de      	lsrs	r6, r3
 8001d90:	4645      	mov	r5, r8
 8001d92:	4335      	orrs	r5, r6
 8001d94:	002e      	movs	r6, r5
 8001d96:	4655      	mov	r5, sl
 8001d98:	40d9      	lsrs	r1, r3
 8001d9a:	40a8      	lsls	r0, r5
 8001d9c:	4663      	mov	r3, ip
 8001d9e:	1e45      	subs	r5, r0, #1
 8001da0:	41a8      	sbcs	r0, r5
 8001da2:	1a5b      	subs	r3, r3, r1
 8001da4:	469c      	mov	ip, r3
 8001da6:	4330      	orrs	r0, r6
 8001da8:	1a16      	subs	r6, r2, r0
 8001daa:	42b2      	cmp	r2, r6
 8001dac:	4192      	sbcs	r2, r2
 8001dae:	4663      	mov	r3, ip
 8001db0:	4252      	negs	r2, r2
 8001db2:	1a99      	subs	r1, r3, r2
 8001db4:	003d      	movs	r5, r7
 8001db6:	e6b4      	b.n	8001b22 <__aeabi_dsub+0x7a>
 8001db8:	2207      	movs	r2, #7
 8001dba:	4032      	ands	r2, r6
 8001dbc:	2a00      	cmp	r2, #0
 8001dbe:	d000      	beq.n	8001dc2 <__aeabi_dsub+0x31a>
 8001dc0:	e6e4      	b.n	8001b8c <__aeabi_dsub+0xe4>
 8001dc2:	4b0b      	ldr	r3, [pc, #44]	; (8001df0 <__aeabi_dsub+0x348>)
 8001dc4:	08f6      	lsrs	r6, r6, #3
 8001dc6:	074f      	lsls	r7, r1, #29
 8001dc8:	4337      	orrs	r7, r6
 8001dca:	08ca      	lsrs	r2, r1, #3
 8001dcc:	429d      	cmp	r5, r3
 8001dce:	d000      	beq.n	8001dd2 <__aeabi_dsub+0x32a>
 8001dd0:	e790      	b.n	8001cf4 <__aeabi_dsub+0x24c>
 8001dd2:	003b      	movs	r3, r7
 8001dd4:	4313      	orrs	r3, r2
 8001dd6:	d100      	bne.n	8001dda <__aeabi_dsub+0x332>
 8001dd8:	e1a6      	b.n	8002128 <__aeabi_dsub+0x680>
 8001dda:	2380      	movs	r3, #128	; 0x80
 8001ddc:	031b      	lsls	r3, r3, #12
 8001dde:	431a      	orrs	r2, r3
 8001de0:	0312      	lsls	r2, r2, #12
 8001de2:	0b12      	lsrs	r2, r2, #12
 8001de4:	4d02      	ldr	r5, [pc, #8]	; (8001df0 <__aeabi_dsub+0x348>)
 8001de6:	e789      	b.n	8001cfc <__aeabi_dsub+0x254>
 8001de8:	0015      	movs	r5, r2
 8001dea:	2200      	movs	r2, #0
 8001dec:	2700      	movs	r7, #0
 8001dee:	e785      	b.n	8001cfc <__aeabi_dsub+0x254>
 8001df0:	000007ff 	.word	0x000007ff
 8001df4:	ff7fffff 	.word	0xff7fffff
 8001df8:	800fffff 	.word	0x800fffff
 8001dfc:	2e00      	cmp	r6, #0
 8001dfe:	d000      	beq.n	8001e02 <__aeabi_dsub+0x35a>
 8001e00:	e0c7      	b.n	8001f92 <__aeabi_dsub+0x4ea>
 8001e02:	1c6b      	adds	r3, r5, #1
 8001e04:	055e      	lsls	r6, r3, #21
 8001e06:	0d76      	lsrs	r6, r6, #21
 8001e08:	2e01      	cmp	r6, #1
 8001e0a:	dc00      	bgt.n	8001e0e <__aeabi_dsub+0x366>
 8001e0c:	e0f0      	b.n	8001ff0 <__aeabi_dsub+0x548>
 8001e0e:	4dc8      	ldr	r5, [pc, #800]	; (8002130 <__aeabi_dsub+0x688>)
 8001e10:	42ab      	cmp	r3, r5
 8001e12:	d100      	bne.n	8001e16 <__aeabi_dsub+0x36e>
 8001e14:	e0b9      	b.n	8001f8a <__aeabi_dsub+0x4e2>
 8001e16:	1885      	adds	r5, r0, r2
 8001e18:	000a      	movs	r2, r1
 8001e1a:	4285      	cmp	r5, r0
 8001e1c:	4189      	sbcs	r1, r1
 8001e1e:	4462      	add	r2, ip
 8001e20:	4249      	negs	r1, r1
 8001e22:	1851      	adds	r1, r2, r1
 8001e24:	2207      	movs	r2, #7
 8001e26:	07ce      	lsls	r6, r1, #31
 8001e28:	086d      	lsrs	r5, r5, #1
 8001e2a:	432e      	orrs	r6, r5
 8001e2c:	0849      	lsrs	r1, r1, #1
 8001e2e:	4032      	ands	r2, r6
 8001e30:	001d      	movs	r5, r3
 8001e32:	e6a9      	b.n	8001b88 <__aeabi_dsub+0xe0>
 8001e34:	49bf      	ldr	r1, [pc, #764]	; (8002134 <__aeabi_dsub+0x68c>)
 8001e36:	1aed      	subs	r5, r5, r3
 8001e38:	4011      	ands	r1, r2
 8001e3a:	2207      	movs	r2, #7
 8001e3c:	4032      	ands	r2, r6
 8001e3e:	e6a3      	b.n	8001b88 <__aeabi_dsub+0xe0>
 8001e40:	0032      	movs	r2, r6
 8001e42:	3828      	subs	r0, #40	; 0x28
 8001e44:	4082      	lsls	r2, r0
 8001e46:	2600      	movs	r6, #0
 8001e48:	e686      	b.n	8001b58 <__aeabi_dsub+0xb0>
 8001e4a:	0030      	movs	r0, r6
 8001e4c:	f000 fa84 	bl	8002358 <__clzsi2>
 8001e50:	3020      	adds	r0, #32
 8001e52:	e673      	b.n	8001b3c <__aeabi_dsub+0x94>
 8001e54:	4663      	mov	r3, ip
 8001e56:	4313      	orrs	r3, r2
 8001e58:	1e5a      	subs	r2, r3, #1
 8001e5a:	4193      	sbcs	r3, r2
 8001e5c:	1ac6      	subs	r6, r0, r3
 8001e5e:	42b0      	cmp	r0, r6
 8001e60:	4180      	sbcs	r0, r0
 8001e62:	4240      	negs	r0, r0
 8001e64:	1a09      	subs	r1, r1, r0
 8001e66:	e65c      	b.n	8001b22 <__aeabi_dsub+0x7a>
 8001e68:	000e      	movs	r6, r1
 8001e6a:	4667      	mov	r7, ip
 8001e6c:	4306      	orrs	r6, r0
 8001e6e:	4317      	orrs	r7, r2
 8001e70:	2d00      	cmp	r5, #0
 8001e72:	d15e      	bne.n	8001f32 <__aeabi_dsub+0x48a>
 8001e74:	2e00      	cmp	r6, #0
 8001e76:	d000      	beq.n	8001e7a <__aeabi_dsub+0x3d2>
 8001e78:	e0f3      	b.n	8002062 <__aeabi_dsub+0x5ba>
 8001e7a:	2f00      	cmp	r7, #0
 8001e7c:	d100      	bne.n	8001e80 <__aeabi_dsub+0x3d8>
 8001e7e:	e11e      	b.n	80020be <__aeabi_dsub+0x616>
 8001e80:	465c      	mov	r4, fp
 8001e82:	4661      	mov	r1, ip
 8001e84:	4691      	mov	r9, r2
 8001e86:	e72c      	b.n	8001ce2 <__aeabi_dsub+0x23a>
 8001e88:	4fa9      	ldr	r7, [pc, #676]	; (8002130 <__aeabi_dsub+0x688>)
 8001e8a:	42be      	cmp	r6, r7
 8001e8c:	d07b      	beq.n	8001f86 <__aeabi_dsub+0x4de>
 8001e8e:	001e      	movs	r6, r3
 8001e90:	e6f1      	b.n	8001c76 <__aeabi_dsub+0x1ce>
 8001e92:	0010      	movs	r0, r2
 8001e94:	3d1f      	subs	r5, #31
 8001e96:	40e8      	lsrs	r0, r5
 8001e98:	2b20      	cmp	r3, #32
 8001e9a:	d003      	beq.n	8001ea4 <__aeabi_dsub+0x3fc>
 8001e9c:	2140      	movs	r1, #64	; 0x40
 8001e9e:	1acb      	subs	r3, r1, r3
 8001ea0:	409a      	lsls	r2, r3
 8001ea2:	4316      	orrs	r6, r2
 8001ea4:	1e73      	subs	r3, r6, #1
 8001ea6:	419e      	sbcs	r6, r3
 8001ea8:	2207      	movs	r2, #7
 8001eaa:	4306      	orrs	r6, r0
 8001eac:	4032      	ands	r2, r6
 8001eae:	2100      	movs	r1, #0
 8001eb0:	2500      	movs	r5, #0
 8001eb2:	e783      	b.n	8001dbc <__aeabi_dsub+0x314>
 8001eb4:	1a16      	subs	r6, r2, r0
 8001eb6:	4663      	mov	r3, ip
 8001eb8:	42b2      	cmp	r2, r6
 8001eba:	4180      	sbcs	r0, r0
 8001ebc:	1a59      	subs	r1, r3, r1
 8001ebe:	4240      	negs	r0, r0
 8001ec0:	1a0b      	subs	r3, r1, r0
 8001ec2:	4698      	mov	r8, r3
 8001ec4:	465c      	mov	r4, fp
 8001ec6:	e632      	b.n	8001b2e <__aeabi_dsub+0x86>
 8001ec8:	2e1f      	cmp	r6, #31
 8001eca:	dd00      	ble.n	8001ece <__aeabi_dsub+0x426>
 8001ecc:	e0ab      	b.n	8002026 <__aeabi_dsub+0x57e>
 8001ece:	2720      	movs	r7, #32
 8001ed0:	1bbb      	subs	r3, r7, r6
 8001ed2:	469a      	mov	sl, r3
 8001ed4:	4663      	mov	r3, ip
 8001ed6:	4657      	mov	r7, sl
 8001ed8:	40bb      	lsls	r3, r7
 8001eda:	4699      	mov	r9, r3
 8001edc:	0013      	movs	r3, r2
 8001ede:	464f      	mov	r7, r9
 8001ee0:	40f3      	lsrs	r3, r6
 8001ee2:	431f      	orrs	r7, r3
 8001ee4:	003b      	movs	r3, r7
 8001ee6:	4657      	mov	r7, sl
 8001ee8:	40ba      	lsls	r2, r7
 8001eea:	1e57      	subs	r7, r2, #1
 8001eec:	41ba      	sbcs	r2, r7
 8001eee:	4313      	orrs	r3, r2
 8001ef0:	4662      	mov	r2, ip
 8001ef2:	40f2      	lsrs	r2, r6
 8001ef4:	1889      	adds	r1, r1, r2
 8001ef6:	e698      	b.n	8001c2a <__aeabi_dsub+0x182>
 8001ef8:	2720      	movs	r7, #32
 8001efa:	1bbb      	subs	r3, r7, r6
 8001efc:	469a      	mov	sl, r3
 8001efe:	4663      	mov	r3, ip
 8001f00:	4657      	mov	r7, sl
 8001f02:	40bb      	lsls	r3, r7
 8001f04:	4699      	mov	r9, r3
 8001f06:	0013      	movs	r3, r2
 8001f08:	464f      	mov	r7, r9
 8001f0a:	40f3      	lsrs	r3, r6
 8001f0c:	431f      	orrs	r7, r3
 8001f0e:	003b      	movs	r3, r7
 8001f10:	4657      	mov	r7, sl
 8001f12:	40ba      	lsls	r2, r7
 8001f14:	1e57      	subs	r7, r2, #1
 8001f16:	41ba      	sbcs	r2, r7
 8001f18:	4313      	orrs	r3, r2
 8001f1a:	4662      	mov	r2, ip
 8001f1c:	40f2      	lsrs	r2, r6
 8001f1e:	1a89      	subs	r1, r1, r2
 8001f20:	e79c      	b.n	8001e5c <__aeabi_dsub+0x3b4>
 8001f22:	4b83      	ldr	r3, [pc, #524]	; (8002130 <__aeabi_dsub+0x688>)
 8001f24:	429f      	cmp	r7, r3
 8001f26:	d05f      	beq.n	8001fe8 <__aeabi_dsub+0x540>
 8001f28:	2580      	movs	r5, #128	; 0x80
 8001f2a:	042d      	lsls	r5, r5, #16
 8001f2c:	4273      	negs	r3, r6
 8001f2e:	4329      	orrs	r1, r5
 8001f30:	e720      	b.n	8001d74 <__aeabi_dsub+0x2cc>
 8001f32:	2e00      	cmp	r6, #0
 8001f34:	d10c      	bne.n	8001f50 <__aeabi_dsub+0x4a8>
 8001f36:	2f00      	cmp	r7, #0
 8001f38:	d100      	bne.n	8001f3c <__aeabi_dsub+0x494>
 8001f3a:	e0d0      	b.n	80020de <__aeabi_dsub+0x636>
 8001f3c:	465c      	mov	r4, fp
 8001f3e:	4661      	mov	r1, ip
 8001f40:	4691      	mov	r9, r2
 8001f42:	4d7b      	ldr	r5, [pc, #492]	; (8002130 <__aeabi_dsub+0x688>)
 8001f44:	e6cd      	b.n	8001ce2 <__aeabi_dsub+0x23a>
 8001f46:	4f7a      	ldr	r7, [pc, #488]	; (8002130 <__aeabi_dsub+0x688>)
 8001f48:	42be      	cmp	r6, r7
 8001f4a:	d01c      	beq.n	8001f86 <__aeabi_dsub+0x4de>
 8001f4c:	001e      	movs	r6, r3
 8001f4e:	e665      	b.n	8001c1c <__aeabi_dsub+0x174>
 8001f50:	2f00      	cmp	r7, #0
 8001f52:	d018      	beq.n	8001f86 <__aeabi_dsub+0x4de>
 8001f54:	08c0      	lsrs	r0, r0, #3
 8001f56:	074e      	lsls	r6, r1, #29
 8001f58:	4306      	orrs	r6, r0
 8001f5a:	2080      	movs	r0, #128	; 0x80
 8001f5c:	08c9      	lsrs	r1, r1, #3
 8001f5e:	0300      	lsls	r0, r0, #12
 8001f60:	4201      	tst	r1, r0
 8001f62:	d008      	beq.n	8001f76 <__aeabi_dsub+0x4ce>
 8001f64:	4663      	mov	r3, ip
 8001f66:	08dc      	lsrs	r4, r3, #3
 8001f68:	4204      	tst	r4, r0
 8001f6a:	d104      	bne.n	8001f76 <__aeabi_dsub+0x4ce>
 8001f6c:	0021      	movs	r1, r4
 8001f6e:	46da      	mov	sl, fp
 8001f70:	08d2      	lsrs	r2, r2, #3
 8001f72:	075e      	lsls	r6, r3, #29
 8001f74:	4316      	orrs	r6, r2
 8001f76:	00f3      	lsls	r3, r6, #3
 8001f78:	4699      	mov	r9, r3
 8001f7a:	2401      	movs	r4, #1
 8001f7c:	4653      	mov	r3, sl
 8001f7e:	00c9      	lsls	r1, r1, #3
 8001f80:	0f72      	lsrs	r2, r6, #29
 8001f82:	4311      	orrs	r1, r2
 8001f84:	401c      	ands	r4, r3
 8001f86:	4d6a      	ldr	r5, [pc, #424]	; (8002130 <__aeabi_dsub+0x688>)
 8001f88:	e6ab      	b.n	8001ce2 <__aeabi_dsub+0x23a>
 8001f8a:	001d      	movs	r5, r3
 8001f8c:	2200      	movs	r2, #0
 8001f8e:	2700      	movs	r7, #0
 8001f90:	e6b4      	b.n	8001cfc <__aeabi_dsub+0x254>
 8001f92:	2d00      	cmp	r5, #0
 8001f94:	d159      	bne.n	800204a <__aeabi_dsub+0x5a2>
 8001f96:	000b      	movs	r3, r1
 8001f98:	4303      	orrs	r3, r0
 8001f9a:	d100      	bne.n	8001f9e <__aeabi_dsub+0x4f6>
 8001f9c:	e6d6      	b.n	8001d4c <__aeabi_dsub+0x2a4>
 8001f9e:	1c73      	adds	r3, r6, #1
 8001fa0:	d100      	bne.n	8001fa4 <__aeabi_dsub+0x4fc>
 8001fa2:	e0b2      	b.n	800210a <__aeabi_dsub+0x662>
 8001fa4:	4b62      	ldr	r3, [pc, #392]	; (8002130 <__aeabi_dsub+0x688>)
 8001fa6:	429f      	cmp	r7, r3
 8001fa8:	d01e      	beq.n	8001fe8 <__aeabi_dsub+0x540>
 8001faa:	43f3      	mvns	r3, r6
 8001fac:	2b38      	cmp	r3, #56	; 0x38
 8001fae:	dc6f      	bgt.n	8002090 <__aeabi_dsub+0x5e8>
 8001fb0:	2b1f      	cmp	r3, #31
 8001fb2:	dd00      	ble.n	8001fb6 <__aeabi_dsub+0x50e>
 8001fb4:	e097      	b.n	80020e6 <__aeabi_dsub+0x63e>
 8001fb6:	2520      	movs	r5, #32
 8001fb8:	000e      	movs	r6, r1
 8001fba:	1aed      	subs	r5, r5, r3
 8001fbc:	40ae      	lsls	r6, r5
 8001fbe:	46b0      	mov	r8, r6
 8001fc0:	0006      	movs	r6, r0
 8001fc2:	46aa      	mov	sl, r5
 8001fc4:	40de      	lsrs	r6, r3
 8001fc6:	4645      	mov	r5, r8
 8001fc8:	4335      	orrs	r5, r6
 8001fca:	002e      	movs	r6, r5
 8001fcc:	4655      	mov	r5, sl
 8001fce:	40a8      	lsls	r0, r5
 8001fd0:	40d9      	lsrs	r1, r3
 8001fd2:	1e45      	subs	r5, r0, #1
 8001fd4:	41a8      	sbcs	r0, r5
 8001fd6:	448c      	add	ip, r1
 8001fd8:	4306      	orrs	r6, r0
 8001fda:	18b6      	adds	r6, r6, r2
 8001fdc:	4296      	cmp	r6, r2
 8001fde:	4192      	sbcs	r2, r2
 8001fe0:	4251      	negs	r1, r2
 8001fe2:	4461      	add	r1, ip
 8001fe4:	003d      	movs	r5, r7
 8001fe6:	e625      	b.n	8001c34 <__aeabi_dsub+0x18c>
 8001fe8:	003d      	movs	r5, r7
 8001fea:	4661      	mov	r1, ip
 8001fec:	4691      	mov	r9, r2
 8001fee:	e678      	b.n	8001ce2 <__aeabi_dsub+0x23a>
 8001ff0:	000b      	movs	r3, r1
 8001ff2:	4303      	orrs	r3, r0
 8001ff4:	2d00      	cmp	r5, #0
 8001ff6:	d000      	beq.n	8001ffa <__aeabi_dsub+0x552>
 8001ff8:	e655      	b.n	8001ca6 <__aeabi_dsub+0x1fe>
 8001ffa:	2b00      	cmp	r3, #0
 8001ffc:	d0f5      	beq.n	8001fea <__aeabi_dsub+0x542>
 8001ffe:	4663      	mov	r3, ip
 8002000:	4313      	orrs	r3, r2
 8002002:	d100      	bne.n	8002006 <__aeabi_dsub+0x55e>
 8002004:	e66d      	b.n	8001ce2 <__aeabi_dsub+0x23a>
 8002006:	1886      	adds	r6, r0, r2
 8002008:	4286      	cmp	r6, r0
 800200a:	4180      	sbcs	r0, r0
 800200c:	4461      	add	r1, ip
 800200e:	4240      	negs	r0, r0
 8002010:	1809      	adds	r1, r1, r0
 8002012:	2200      	movs	r2, #0
 8002014:	020b      	lsls	r3, r1, #8
 8002016:	d400      	bmi.n	800201a <__aeabi_dsub+0x572>
 8002018:	e6d0      	b.n	8001dbc <__aeabi_dsub+0x314>
 800201a:	4b46      	ldr	r3, [pc, #280]	; (8002134 <__aeabi_dsub+0x68c>)
 800201c:	3501      	adds	r5, #1
 800201e:	4019      	ands	r1, r3
 8002020:	e5b2      	b.n	8001b88 <__aeabi_dsub+0xe0>
 8002022:	46b1      	mov	r9, r6
 8002024:	e65d      	b.n	8001ce2 <__aeabi_dsub+0x23a>
 8002026:	0033      	movs	r3, r6
 8002028:	4667      	mov	r7, ip
 800202a:	3b20      	subs	r3, #32
 800202c:	40df      	lsrs	r7, r3
 800202e:	003b      	movs	r3, r7
 8002030:	2e20      	cmp	r6, #32
 8002032:	d005      	beq.n	8002040 <__aeabi_dsub+0x598>
 8002034:	2740      	movs	r7, #64	; 0x40
 8002036:	1bbf      	subs	r7, r7, r6
 8002038:	4666      	mov	r6, ip
 800203a:	40be      	lsls	r6, r7
 800203c:	4332      	orrs	r2, r6
 800203e:	4690      	mov	r8, r2
 8002040:	4646      	mov	r6, r8
 8002042:	1e72      	subs	r2, r6, #1
 8002044:	4196      	sbcs	r6, r2
 8002046:	4333      	orrs	r3, r6
 8002048:	e5ef      	b.n	8001c2a <__aeabi_dsub+0x182>
 800204a:	4b39      	ldr	r3, [pc, #228]	; (8002130 <__aeabi_dsub+0x688>)
 800204c:	429f      	cmp	r7, r3
 800204e:	d0cb      	beq.n	8001fe8 <__aeabi_dsub+0x540>
 8002050:	2580      	movs	r5, #128	; 0x80
 8002052:	042d      	lsls	r5, r5, #16
 8002054:	4273      	negs	r3, r6
 8002056:	4329      	orrs	r1, r5
 8002058:	e7a8      	b.n	8001fac <__aeabi_dsub+0x504>
 800205a:	4308      	orrs	r0, r1
 800205c:	1e41      	subs	r1, r0, #1
 800205e:	4188      	sbcs	r0, r1
 8002060:	e6a2      	b.n	8001da8 <__aeabi_dsub+0x300>
 8002062:	2f00      	cmp	r7, #0
 8002064:	d100      	bne.n	8002068 <__aeabi_dsub+0x5c0>
 8002066:	e63c      	b.n	8001ce2 <__aeabi_dsub+0x23a>
 8002068:	4663      	mov	r3, ip
 800206a:	1a86      	subs	r6, r0, r2
 800206c:	1acf      	subs	r7, r1, r3
 800206e:	42b0      	cmp	r0, r6
 8002070:	419b      	sbcs	r3, r3
 8002072:	425b      	negs	r3, r3
 8002074:	1afb      	subs	r3, r7, r3
 8002076:	4698      	mov	r8, r3
 8002078:	021b      	lsls	r3, r3, #8
 800207a:	d54e      	bpl.n	800211a <__aeabi_dsub+0x672>
 800207c:	1a16      	subs	r6, r2, r0
 800207e:	4663      	mov	r3, ip
 8002080:	42b2      	cmp	r2, r6
 8002082:	4192      	sbcs	r2, r2
 8002084:	1a59      	subs	r1, r3, r1
 8002086:	4252      	negs	r2, r2
 8002088:	1a89      	subs	r1, r1, r2
 800208a:	465c      	mov	r4, fp
 800208c:	2200      	movs	r2, #0
 800208e:	e57b      	b.n	8001b88 <__aeabi_dsub+0xe0>
 8002090:	4301      	orrs	r1, r0
 8002092:	000e      	movs	r6, r1
 8002094:	1e71      	subs	r1, r6, #1
 8002096:	418e      	sbcs	r6, r1
 8002098:	e79f      	b.n	8001fda <__aeabi_dsub+0x532>
 800209a:	001d      	movs	r5, r3
 800209c:	000e      	movs	r6, r1
 800209e:	3d20      	subs	r5, #32
 80020a0:	40ee      	lsrs	r6, r5
 80020a2:	46b0      	mov	r8, r6
 80020a4:	2b20      	cmp	r3, #32
 80020a6:	d004      	beq.n	80020b2 <__aeabi_dsub+0x60a>
 80020a8:	2540      	movs	r5, #64	; 0x40
 80020aa:	1aeb      	subs	r3, r5, r3
 80020ac:	4099      	lsls	r1, r3
 80020ae:	4308      	orrs	r0, r1
 80020b0:	4681      	mov	r9, r0
 80020b2:	4648      	mov	r0, r9
 80020b4:	4643      	mov	r3, r8
 80020b6:	1e41      	subs	r1, r0, #1
 80020b8:	4188      	sbcs	r0, r1
 80020ba:	4318      	orrs	r0, r3
 80020bc:	e674      	b.n	8001da8 <__aeabi_dsub+0x300>
 80020be:	2200      	movs	r2, #0
 80020c0:	2400      	movs	r4, #0
 80020c2:	e617      	b.n	8001cf4 <__aeabi_dsub+0x24c>
 80020c4:	1a16      	subs	r6, r2, r0
 80020c6:	4663      	mov	r3, ip
 80020c8:	42b2      	cmp	r2, r6
 80020ca:	4192      	sbcs	r2, r2
 80020cc:	1a59      	subs	r1, r3, r1
 80020ce:	4252      	negs	r2, r2
 80020d0:	1a89      	subs	r1, r1, r2
 80020d2:	003d      	movs	r5, r7
 80020d4:	e525      	b.n	8001b22 <__aeabi_dsub+0x7a>
 80020d6:	4661      	mov	r1, ip
 80020d8:	4691      	mov	r9, r2
 80020da:	4d15      	ldr	r5, [pc, #84]	; (8002130 <__aeabi_dsub+0x688>)
 80020dc:	e601      	b.n	8001ce2 <__aeabi_dsub+0x23a>
 80020de:	2280      	movs	r2, #128	; 0x80
 80020e0:	2400      	movs	r4, #0
 80020e2:	0312      	lsls	r2, r2, #12
 80020e4:	e679      	b.n	8001dda <__aeabi_dsub+0x332>
 80020e6:	001d      	movs	r5, r3
 80020e8:	000e      	movs	r6, r1
 80020ea:	3d20      	subs	r5, #32
 80020ec:	40ee      	lsrs	r6, r5
 80020ee:	46b0      	mov	r8, r6
 80020f0:	2b20      	cmp	r3, #32
 80020f2:	d004      	beq.n	80020fe <__aeabi_dsub+0x656>
 80020f4:	2540      	movs	r5, #64	; 0x40
 80020f6:	1aeb      	subs	r3, r5, r3
 80020f8:	4099      	lsls	r1, r3
 80020fa:	4308      	orrs	r0, r1
 80020fc:	4681      	mov	r9, r0
 80020fe:	464e      	mov	r6, r9
 8002100:	4643      	mov	r3, r8
 8002102:	1e71      	subs	r1, r6, #1
 8002104:	418e      	sbcs	r6, r1
 8002106:	431e      	orrs	r6, r3
 8002108:	e767      	b.n	8001fda <__aeabi_dsub+0x532>
 800210a:	1886      	adds	r6, r0, r2
 800210c:	4296      	cmp	r6, r2
 800210e:	419b      	sbcs	r3, r3
 8002110:	4461      	add	r1, ip
 8002112:	425b      	negs	r3, r3
 8002114:	18c9      	adds	r1, r1, r3
 8002116:	003d      	movs	r5, r7
 8002118:	e58c      	b.n	8001c34 <__aeabi_dsub+0x18c>
 800211a:	4647      	mov	r7, r8
 800211c:	4337      	orrs	r7, r6
 800211e:	d0ce      	beq.n	80020be <__aeabi_dsub+0x616>
 8002120:	2207      	movs	r2, #7
 8002122:	4641      	mov	r1, r8
 8002124:	4032      	ands	r2, r6
 8002126:	e649      	b.n	8001dbc <__aeabi_dsub+0x314>
 8002128:	2700      	movs	r7, #0
 800212a:	003a      	movs	r2, r7
 800212c:	e5e6      	b.n	8001cfc <__aeabi_dsub+0x254>
 800212e:	46c0      	nop			; (mov r8, r8)
 8002130:	000007ff 	.word	0x000007ff
 8002134:	ff7fffff 	.word	0xff7fffff

08002138 <__aeabi_dcmpun>:
 8002138:	b570      	push	{r4, r5, r6, lr}
 800213a:	4e0c      	ldr	r6, [pc, #48]	; (800216c <__aeabi_dcmpun+0x34>)
 800213c:	030d      	lsls	r5, r1, #12
 800213e:	031c      	lsls	r4, r3, #12
 8002140:	0049      	lsls	r1, r1, #1
 8002142:	005b      	lsls	r3, r3, #1
 8002144:	0b2d      	lsrs	r5, r5, #12
 8002146:	0d49      	lsrs	r1, r1, #21
 8002148:	0b24      	lsrs	r4, r4, #12
 800214a:	0d5b      	lsrs	r3, r3, #21
 800214c:	42b1      	cmp	r1, r6
 800214e:	d008      	beq.n	8002162 <__aeabi_dcmpun+0x2a>
 8002150:	4906      	ldr	r1, [pc, #24]	; (800216c <__aeabi_dcmpun+0x34>)
 8002152:	2000      	movs	r0, #0
 8002154:	428b      	cmp	r3, r1
 8002156:	d103      	bne.n	8002160 <__aeabi_dcmpun+0x28>
 8002158:	4314      	orrs	r4, r2
 800215a:	0020      	movs	r0, r4
 800215c:	1e44      	subs	r4, r0, #1
 800215e:	41a0      	sbcs	r0, r4
 8002160:	bd70      	pop	{r4, r5, r6, pc}
 8002162:	4305      	orrs	r5, r0
 8002164:	2001      	movs	r0, #1
 8002166:	2d00      	cmp	r5, #0
 8002168:	d1fa      	bne.n	8002160 <__aeabi_dcmpun+0x28>
 800216a:	e7f1      	b.n	8002150 <__aeabi_dcmpun+0x18>
 800216c:	000007ff 	.word	0x000007ff

08002170 <__aeabi_d2iz>:
 8002170:	b530      	push	{r4, r5, lr}
 8002172:	4d14      	ldr	r5, [pc, #80]	; (80021c4 <__aeabi_d2iz+0x54>)
 8002174:	030a      	lsls	r2, r1, #12
 8002176:	004b      	lsls	r3, r1, #1
 8002178:	0b12      	lsrs	r2, r2, #12
 800217a:	0d5b      	lsrs	r3, r3, #21
 800217c:	0fc9      	lsrs	r1, r1, #31
 800217e:	2400      	movs	r4, #0
 8002180:	42ab      	cmp	r3, r5
 8002182:	dd11      	ble.n	80021a8 <__aeabi_d2iz+0x38>
 8002184:	4c10      	ldr	r4, [pc, #64]	; (80021c8 <__aeabi_d2iz+0x58>)
 8002186:	42a3      	cmp	r3, r4
 8002188:	dc10      	bgt.n	80021ac <__aeabi_d2iz+0x3c>
 800218a:	2480      	movs	r4, #128	; 0x80
 800218c:	0364      	lsls	r4, r4, #13
 800218e:	4322      	orrs	r2, r4
 8002190:	4c0e      	ldr	r4, [pc, #56]	; (80021cc <__aeabi_d2iz+0x5c>)
 8002192:	1ae4      	subs	r4, r4, r3
 8002194:	2c1f      	cmp	r4, #31
 8002196:	dd0c      	ble.n	80021b2 <__aeabi_d2iz+0x42>
 8002198:	480d      	ldr	r0, [pc, #52]	; (80021d0 <__aeabi_d2iz+0x60>)
 800219a:	1ac3      	subs	r3, r0, r3
 800219c:	40da      	lsrs	r2, r3
 800219e:	0013      	movs	r3, r2
 80021a0:	425c      	negs	r4, r3
 80021a2:	2900      	cmp	r1, #0
 80021a4:	d100      	bne.n	80021a8 <__aeabi_d2iz+0x38>
 80021a6:	001c      	movs	r4, r3
 80021a8:	0020      	movs	r0, r4
 80021aa:	bd30      	pop	{r4, r5, pc}
 80021ac:	4b09      	ldr	r3, [pc, #36]	; (80021d4 <__aeabi_d2iz+0x64>)
 80021ae:	18cc      	adds	r4, r1, r3
 80021b0:	e7fa      	b.n	80021a8 <__aeabi_d2iz+0x38>
 80021b2:	4d09      	ldr	r5, [pc, #36]	; (80021d8 <__aeabi_d2iz+0x68>)
 80021b4:	40e0      	lsrs	r0, r4
 80021b6:	46ac      	mov	ip, r5
 80021b8:	4463      	add	r3, ip
 80021ba:	409a      	lsls	r2, r3
 80021bc:	0013      	movs	r3, r2
 80021be:	4303      	orrs	r3, r0
 80021c0:	e7ee      	b.n	80021a0 <__aeabi_d2iz+0x30>
 80021c2:	46c0      	nop			; (mov r8, r8)
 80021c4:	000003fe 	.word	0x000003fe
 80021c8:	0000041d 	.word	0x0000041d
 80021cc:	00000433 	.word	0x00000433
 80021d0:	00000413 	.word	0x00000413
 80021d4:	7fffffff 	.word	0x7fffffff
 80021d8:	fffffbed 	.word	0xfffffbed

080021dc <__aeabi_i2d>:
 80021dc:	b570      	push	{r4, r5, r6, lr}
 80021de:	2800      	cmp	r0, #0
 80021e0:	d02d      	beq.n	800223e <__aeabi_i2d+0x62>
 80021e2:	17c3      	asrs	r3, r0, #31
 80021e4:	18c5      	adds	r5, r0, r3
 80021e6:	405d      	eors	r5, r3
 80021e8:	0fc4      	lsrs	r4, r0, #31
 80021ea:	0028      	movs	r0, r5
 80021ec:	f000 f8b4 	bl	8002358 <__clzsi2>
 80021f0:	4b15      	ldr	r3, [pc, #84]	; (8002248 <__aeabi_i2d+0x6c>)
 80021f2:	1a1b      	subs	r3, r3, r0
 80021f4:	055b      	lsls	r3, r3, #21
 80021f6:	0d5b      	lsrs	r3, r3, #21
 80021f8:	280a      	cmp	r0, #10
 80021fa:	dd15      	ble.n	8002228 <__aeabi_i2d+0x4c>
 80021fc:	380b      	subs	r0, #11
 80021fe:	4085      	lsls	r5, r0
 8002200:	2200      	movs	r2, #0
 8002202:	032d      	lsls	r5, r5, #12
 8002204:	0b2d      	lsrs	r5, r5, #12
 8002206:	2100      	movs	r1, #0
 8002208:	0010      	movs	r0, r2
 800220a:	032d      	lsls	r5, r5, #12
 800220c:	0d0a      	lsrs	r2, r1, #20
 800220e:	0b2d      	lsrs	r5, r5, #12
 8002210:	0512      	lsls	r2, r2, #20
 8002212:	432a      	orrs	r2, r5
 8002214:	4d0d      	ldr	r5, [pc, #52]	; (800224c <__aeabi_i2d+0x70>)
 8002216:	051b      	lsls	r3, r3, #20
 8002218:	402a      	ands	r2, r5
 800221a:	4313      	orrs	r3, r2
 800221c:	005b      	lsls	r3, r3, #1
 800221e:	07e4      	lsls	r4, r4, #31
 8002220:	085b      	lsrs	r3, r3, #1
 8002222:	4323      	orrs	r3, r4
 8002224:	0019      	movs	r1, r3
 8002226:	bd70      	pop	{r4, r5, r6, pc}
 8002228:	0002      	movs	r2, r0
 800222a:	0029      	movs	r1, r5
 800222c:	3215      	adds	r2, #21
 800222e:	4091      	lsls	r1, r2
 8002230:	000a      	movs	r2, r1
 8002232:	210b      	movs	r1, #11
 8002234:	1a08      	subs	r0, r1, r0
 8002236:	40c5      	lsrs	r5, r0
 8002238:	032d      	lsls	r5, r5, #12
 800223a:	0b2d      	lsrs	r5, r5, #12
 800223c:	e7e3      	b.n	8002206 <__aeabi_i2d+0x2a>
 800223e:	2400      	movs	r4, #0
 8002240:	2300      	movs	r3, #0
 8002242:	2500      	movs	r5, #0
 8002244:	2200      	movs	r2, #0
 8002246:	e7de      	b.n	8002206 <__aeabi_i2d+0x2a>
 8002248:	0000041e 	.word	0x0000041e
 800224c:	800fffff 	.word	0x800fffff

08002250 <__aeabi_ui2d>:
 8002250:	b510      	push	{r4, lr}
 8002252:	1e04      	subs	r4, r0, #0
 8002254:	d025      	beq.n	80022a2 <__aeabi_ui2d+0x52>
 8002256:	f000 f87f 	bl	8002358 <__clzsi2>
 800225a:	4b14      	ldr	r3, [pc, #80]	; (80022ac <__aeabi_ui2d+0x5c>)
 800225c:	1a1b      	subs	r3, r3, r0
 800225e:	055b      	lsls	r3, r3, #21
 8002260:	0d5b      	lsrs	r3, r3, #21
 8002262:	280a      	cmp	r0, #10
 8002264:	dd12      	ble.n	800228c <__aeabi_ui2d+0x3c>
 8002266:	380b      	subs	r0, #11
 8002268:	4084      	lsls	r4, r0
 800226a:	2200      	movs	r2, #0
 800226c:	0324      	lsls	r4, r4, #12
 800226e:	0b24      	lsrs	r4, r4, #12
 8002270:	2100      	movs	r1, #0
 8002272:	0010      	movs	r0, r2
 8002274:	0324      	lsls	r4, r4, #12
 8002276:	0d0a      	lsrs	r2, r1, #20
 8002278:	0b24      	lsrs	r4, r4, #12
 800227a:	0512      	lsls	r2, r2, #20
 800227c:	4322      	orrs	r2, r4
 800227e:	4c0c      	ldr	r4, [pc, #48]	; (80022b0 <__aeabi_ui2d+0x60>)
 8002280:	051b      	lsls	r3, r3, #20
 8002282:	4022      	ands	r2, r4
 8002284:	4313      	orrs	r3, r2
 8002286:	005b      	lsls	r3, r3, #1
 8002288:	0859      	lsrs	r1, r3, #1
 800228a:	bd10      	pop	{r4, pc}
 800228c:	0002      	movs	r2, r0
 800228e:	0021      	movs	r1, r4
 8002290:	3215      	adds	r2, #21
 8002292:	4091      	lsls	r1, r2
 8002294:	000a      	movs	r2, r1
 8002296:	210b      	movs	r1, #11
 8002298:	1a08      	subs	r0, r1, r0
 800229a:	40c4      	lsrs	r4, r0
 800229c:	0324      	lsls	r4, r4, #12
 800229e:	0b24      	lsrs	r4, r4, #12
 80022a0:	e7e6      	b.n	8002270 <__aeabi_ui2d+0x20>
 80022a2:	2300      	movs	r3, #0
 80022a4:	2400      	movs	r4, #0
 80022a6:	2200      	movs	r2, #0
 80022a8:	e7e2      	b.n	8002270 <__aeabi_ui2d+0x20>
 80022aa:	46c0      	nop			; (mov r8, r8)
 80022ac:	0000041e 	.word	0x0000041e
 80022b0:	800fffff 	.word	0x800fffff

080022b4 <__aeabi_f2d>:
 80022b4:	0041      	lsls	r1, r0, #1
 80022b6:	0e09      	lsrs	r1, r1, #24
 80022b8:	1c4b      	adds	r3, r1, #1
 80022ba:	b570      	push	{r4, r5, r6, lr}
 80022bc:	b2db      	uxtb	r3, r3
 80022be:	0246      	lsls	r6, r0, #9
 80022c0:	0a75      	lsrs	r5, r6, #9
 80022c2:	0fc4      	lsrs	r4, r0, #31
 80022c4:	2b01      	cmp	r3, #1
 80022c6:	dd14      	ble.n	80022f2 <__aeabi_f2d+0x3e>
 80022c8:	23e0      	movs	r3, #224	; 0xe0
 80022ca:	009b      	lsls	r3, r3, #2
 80022cc:	076d      	lsls	r5, r5, #29
 80022ce:	0b36      	lsrs	r6, r6, #12
 80022d0:	18cb      	adds	r3, r1, r3
 80022d2:	2100      	movs	r1, #0
 80022d4:	0d0a      	lsrs	r2, r1, #20
 80022d6:	0028      	movs	r0, r5
 80022d8:	0512      	lsls	r2, r2, #20
 80022da:	4d1c      	ldr	r5, [pc, #112]	; (800234c <__aeabi_f2d+0x98>)
 80022dc:	4332      	orrs	r2, r6
 80022de:	055b      	lsls	r3, r3, #21
 80022e0:	402a      	ands	r2, r5
 80022e2:	085b      	lsrs	r3, r3, #1
 80022e4:	4313      	orrs	r3, r2
 80022e6:	005b      	lsls	r3, r3, #1
 80022e8:	07e4      	lsls	r4, r4, #31
 80022ea:	085b      	lsrs	r3, r3, #1
 80022ec:	4323      	orrs	r3, r4
 80022ee:	0019      	movs	r1, r3
 80022f0:	bd70      	pop	{r4, r5, r6, pc}
 80022f2:	2900      	cmp	r1, #0
 80022f4:	d114      	bne.n	8002320 <__aeabi_f2d+0x6c>
 80022f6:	2d00      	cmp	r5, #0
 80022f8:	d01e      	beq.n	8002338 <__aeabi_f2d+0x84>
 80022fa:	0028      	movs	r0, r5
 80022fc:	f000 f82c 	bl	8002358 <__clzsi2>
 8002300:	280a      	cmp	r0, #10
 8002302:	dc1c      	bgt.n	800233e <__aeabi_f2d+0x8a>
 8002304:	230b      	movs	r3, #11
 8002306:	002a      	movs	r2, r5
 8002308:	1a1b      	subs	r3, r3, r0
 800230a:	40da      	lsrs	r2, r3
 800230c:	0003      	movs	r3, r0
 800230e:	3315      	adds	r3, #21
 8002310:	409d      	lsls	r5, r3
 8002312:	4b0f      	ldr	r3, [pc, #60]	; (8002350 <__aeabi_f2d+0x9c>)
 8002314:	0312      	lsls	r2, r2, #12
 8002316:	1a1b      	subs	r3, r3, r0
 8002318:	055b      	lsls	r3, r3, #21
 800231a:	0b16      	lsrs	r6, r2, #12
 800231c:	0d5b      	lsrs	r3, r3, #21
 800231e:	e7d8      	b.n	80022d2 <__aeabi_f2d+0x1e>
 8002320:	2d00      	cmp	r5, #0
 8002322:	d006      	beq.n	8002332 <__aeabi_f2d+0x7e>
 8002324:	0b32      	lsrs	r2, r6, #12
 8002326:	2680      	movs	r6, #128	; 0x80
 8002328:	0336      	lsls	r6, r6, #12
 800232a:	076d      	lsls	r5, r5, #29
 800232c:	4316      	orrs	r6, r2
 800232e:	4b09      	ldr	r3, [pc, #36]	; (8002354 <__aeabi_f2d+0xa0>)
 8002330:	e7cf      	b.n	80022d2 <__aeabi_f2d+0x1e>
 8002332:	4b08      	ldr	r3, [pc, #32]	; (8002354 <__aeabi_f2d+0xa0>)
 8002334:	2600      	movs	r6, #0
 8002336:	e7cc      	b.n	80022d2 <__aeabi_f2d+0x1e>
 8002338:	2300      	movs	r3, #0
 800233a:	2600      	movs	r6, #0
 800233c:	e7c9      	b.n	80022d2 <__aeabi_f2d+0x1e>
 800233e:	0003      	movs	r3, r0
 8002340:	002a      	movs	r2, r5
 8002342:	3b0b      	subs	r3, #11
 8002344:	409a      	lsls	r2, r3
 8002346:	2500      	movs	r5, #0
 8002348:	e7e3      	b.n	8002312 <__aeabi_f2d+0x5e>
 800234a:	46c0      	nop			; (mov r8, r8)
 800234c:	800fffff 	.word	0x800fffff
 8002350:	00000389 	.word	0x00000389
 8002354:	000007ff 	.word	0x000007ff

08002358 <__clzsi2>:
 8002358:	211c      	movs	r1, #28
 800235a:	2301      	movs	r3, #1
 800235c:	041b      	lsls	r3, r3, #16
 800235e:	4298      	cmp	r0, r3
 8002360:	d301      	bcc.n	8002366 <__clzsi2+0xe>
 8002362:	0c00      	lsrs	r0, r0, #16
 8002364:	3910      	subs	r1, #16
 8002366:	0a1b      	lsrs	r3, r3, #8
 8002368:	4298      	cmp	r0, r3
 800236a:	d301      	bcc.n	8002370 <__clzsi2+0x18>
 800236c:	0a00      	lsrs	r0, r0, #8
 800236e:	3908      	subs	r1, #8
 8002370:	091b      	lsrs	r3, r3, #4
 8002372:	4298      	cmp	r0, r3
 8002374:	d301      	bcc.n	800237a <__clzsi2+0x22>
 8002376:	0900      	lsrs	r0, r0, #4
 8002378:	3904      	subs	r1, #4
 800237a:	a202      	add	r2, pc, #8	; (adr r2, 8002384 <__clzsi2+0x2c>)
 800237c:	5c10      	ldrb	r0, [r2, r0]
 800237e:	1840      	adds	r0, r0, r1
 8002380:	4770      	bx	lr
 8002382:	46c0      	nop			; (mov r8, r8)
 8002384:	02020304 	.word	0x02020304
 8002388:	01010101 	.word	0x01010101
	...

08002394 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8002394:	b530      	push	{r4, r5, lr}
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8002396:	2510      	movs	r5, #16
{
 8002398:	b099      	sub	sp, #100	; 0x64
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 800239a:	2230      	movs	r2, #48	; 0x30
 800239c:	2100      	movs	r1, #0
 800239e:	a80c      	add	r0, sp, #48	; 0x30
 80023a0:	f001 fdf7 	bl	8003f92 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 80023a4:	002a      	movs	r2, r5
 80023a6:	2100      	movs	r1, #0
 80023a8:	a801      	add	r0, sp, #4
 80023aa:	f001 fdf2 	bl	8003f92 <memset>
  RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 80023ae:	2218      	movs	r2, #24
 80023b0:	2100      	movs	r1, #0
 80023b2:	a805      	add	r0, sp, #20
 80023b4:	f001 fded 	bl	8003f92 <memset>

  /** Initializes the CPU, AHB and APB busses clocks 
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI|RCC_OSCILLATORTYPE_HSI14
                              |RCC_OSCILLATORTYPE_HSI48;
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 80023b8:	2401      	movs	r4, #1
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI|RCC_OSCILLATORTYPE_HSI14
 80023ba:	2332      	movs	r3, #50	; 0x32
  RCC_OscInitStruct.HSI48State = RCC_HSI48_ON;
  RCC_OscInitStruct.HSI14State = RCC_HSI14_ON;
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
  RCC_OscInitStruct.HSI14CalibrationValue = 16;
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 80023bc:	a80b      	add	r0, sp, #44	; 0x2c
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI|RCC_OSCILLATORTYPE_HSI14
 80023be:	930b      	str	r3, [sp, #44]	; 0x2c
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 80023c0:	950f      	str	r5, [sp, #60]	; 0x3c
  RCC_OscInitStruct.HSI14CalibrationValue = 16;
 80023c2:	9511      	str	r5, [sp, #68]	; 0x44
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 80023c4:	940e      	str	r4, [sp, #56]	; 0x38
  RCC_OscInitStruct.HSI48State = RCC_HSI48_ON;
 80023c6:	9413      	str	r4, [sp, #76]	; 0x4c
  RCC_OscInitStruct.HSI14State = RCC_HSI14_ON;
 80023c8:	9410      	str	r4, [sp, #64]	; 0x40
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 80023ca:	f001 f9fb 	bl	80037c4 <HAL_RCC_OscConfig>
  {
    Error_Handler();
  }
  /** Initializes the CPU, AHB and APB busses clocks 
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 80023ce:	2307      	movs	r3, #7
                              |RCC_CLOCKTYPE_PCLK1;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI48;
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 80023d0:	2500      	movs	r5, #0
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 80023d2:	9301      	str	r3, [sp, #4]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_1) != HAL_OK)
 80023d4:	0021      	movs	r1, r4
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI48;
 80023d6:	3b04      	subs	r3, #4
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_1) != HAL_OK)
 80023d8:	a801      	add	r0, sp, #4
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI48;
 80023da:	9302      	str	r3, [sp, #8]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 80023dc:	9503      	str	r5, [sp, #12]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 80023de:	9504      	str	r5, [sp, #16]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_1) != HAL_OK)
 80023e0:	f001 fc82 	bl	8003ce8 <HAL_RCC_ClockConfig>
  {
    Error_Handler();
  }
  PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_I2C1;
 80023e4:	2320      	movs	r3, #32
  PeriphClkInit.I2c1ClockSelection = RCC_I2C1CLKSOURCE_HSI;
  if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 80023e6:	a805      	add	r0, sp, #20
  PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_I2C1;
 80023e8:	9305      	str	r3, [sp, #20]
  PeriphClkInit.I2c1ClockSelection = RCC_I2C1CLKSOURCE_HSI;
 80023ea:	9508      	str	r5, [sp, #32]
  if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 80023ec:	f001 fd08 	bl	8003e00 <HAL_RCCEx_PeriphCLKConfig>
  {
    Error_Handler();
  }
}
 80023f0:	b019      	add	sp, #100	; 0x64
 80023f2:	bd30      	pop	{r4, r5, pc}

080023f4 <main>:
{
 80023f4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80023f6:	b089      	sub	sp, #36	; 0x24
  HAL_Init();
 80023f8:	f000 fb3a 	bl	8002a70 <HAL_Init>
  SystemClock_Config();
 80023fc:	f7ff ffca 	bl	8002394 <SystemClock_Config>
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002400:	2210      	movs	r2, #16
 8002402:	2100      	movs	r1, #0
 8002404:	a804      	add	r0, sp, #16
 8002406:	f001 fdc4 	bl	8003f92 <memset>

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOF_CLK_ENABLE();
 800240a:	2180      	movs	r1, #128	; 0x80
 800240c:	4c41      	ldr	r4, [pc, #260]	; (8002514 <main+0x120>)
 800240e:	03c9      	lsls	r1, r1, #15
 8002410:	6962      	ldr	r2, [r4, #20]

  /*Configure GPIO pin : BTN_Pin */
  GPIO_InitStruct.Pin = BTN_Pin;
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
  GPIO_InitStruct.Pull = GPIO_PULLUP;
  HAL_GPIO_Init(BTN_GPIO_Port, &GPIO_InitStruct);
 8002412:	2090      	movs	r0, #144	; 0x90
  __HAL_RCC_GPIOF_CLK_ENABLE();
 8002414:	430a      	orrs	r2, r1
 8002416:	6162      	str	r2, [r4, #20]
 8002418:	6963      	ldr	r3, [r4, #20]
  GPIO_InitStruct.Pull = GPIO_PULLUP;
 800241a:	2701      	movs	r7, #1
  __HAL_RCC_GPIOF_CLK_ENABLE();
 800241c:	400b      	ands	r3, r1
  __HAL_RCC_GPIOA_CLK_ENABLE();
 800241e:	2180      	movs	r1, #128	; 0x80
  __HAL_RCC_GPIOF_CLK_ENABLE();
 8002420:	9301      	str	r3, [sp, #4]
 8002422:	9b01      	ldr	r3, [sp, #4]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8002424:	6962      	ldr	r2, [r4, #20]
 8002426:	0289      	lsls	r1, r1, #10
 8002428:	430a      	orrs	r2, r1
 800242a:	6162      	str	r2, [r4, #20]
 800242c:	6963      	ldr	r3, [r4, #20]
  HAL_GPIO_Init(BTN_GPIO_Port, &GPIO_InitStruct);
 800242e:	05c0      	lsls	r0, r0, #23
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8002430:	400b      	ands	r3, r1
 8002432:	9302      	str	r3, [sp, #8]
 8002434:	9b02      	ldr	r3, [sp, #8]
  GPIO_InitStruct.Pin = BTN_Pin;
 8002436:	2380      	movs	r3, #128	; 0x80
  HAL_GPIO_Init(BTN_GPIO_Port, &GPIO_InitStruct);
 8002438:	a903      	add	r1, sp, #12
  GPIO_InitStruct.Pin = BTN_Pin;
 800243a:	9303      	str	r3, [sp, #12]
  GPIO_InitStruct.Pull = GPIO_PULLUP;
 800243c:	9705      	str	r7, [sp, #20]
  HAL_GPIO_Init(BTN_GPIO_Port, &GPIO_InitStruct);
 800243e:	f000 feaf 	bl	80031a0 <HAL_GPIO_Init>
  HAL_NVIC_SetPriority(DMA1_Channel1_IRQn, 0, 0);
 8002442:	2200      	movs	r2, #0
  __HAL_RCC_DMA1_CLK_ENABLE();
 8002444:	6963      	ldr	r3, [r4, #20]
  HAL_NVIC_SetPriority(DMA1_Channel1_IRQn, 0, 0);
 8002446:	0011      	movs	r1, r2
  __HAL_RCC_DMA1_CLK_ENABLE();
 8002448:	433b      	orrs	r3, r7
 800244a:	6163      	str	r3, [r4, #20]
 800244c:	6963      	ldr	r3, [r4, #20]
  HAL_NVIC_SetPriority(DMA1_Channel1_IRQn, 0, 0);
 800244e:	2009      	movs	r0, #9
  __HAL_RCC_DMA1_CLK_ENABLE();
 8002450:	403b      	ands	r3, r7
 8002452:	9300      	str	r3, [sp, #0]
 8002454:	9b00      	ldr	r3, [sp, #0]
  HAL_NVIC_SetPriority(DMA1_Channel1_IRQn, 0, 0);
 8002456:	f000 fd9b 	bl	8002f90 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA1_Channel1_IRQn);
 800245a:	2009      	movs	r0, #9
 800245c:	f000 fdc2 	bl	8002fe4 <HAL_NVIC_EnableIRQ>
  ADC_ChannelConfTypeDef sConfig = {0};
 8002460:	220c      	movs	r2, #12
 8002462:	2100      	movs	r1, #0
 8002464:	a803      	add	r0, sp, #12
 8002466:	f001 fd94 	bl	8003f92 <memset>
  hadc.Instance = ADC1;
 800246a:	4c2b      	ldr	r4, [pc, #172]	; (8002518 <main+0x124>)
 800246c:	4b2b      	ldr	r3, [pc, #172]	; (800251c <main+0x128>)
  hadc.Init.ClockPrescaler = ADC_CLOCK_ASYNC_DIV1;
 800246e:	2500      	movs	r5, #0
  hadc.Instance = ADC1;
 8002470:	6023      	str	r3, [r4, #0]
  hadc.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 8002472:	2304      	movs	r3, #4
 8002474:	6163      	str	r3, [r4, #20]
  hadc.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 8002476:	23c2      	movs	r3, #194	; 0xc2
 8002478:	33ff      	adds	r3, #255	; 0xff
 800247a:	61e3      	str	r3, [r4, #28]
  if (HAL_ADC_Init(&hadc) != HAL_OK)
 800247c:	0020      	movs	r0, r4
  hadc.Init.DMAContinuousRequests = DISABLE;
 800247e:	1d63      	adds	r3, r4, #5
 8002480:	77dd      	strb	r5, [r3, #31]
  hadc.Init.ClockPrescaler = ADC_CLOCK_ASYNC_DIV1;
 8002482:	6065      	str	r5, [r4, #4]
  hadc.Init.Resolution = ADC_RESOLUTION_12B;
 8002484:	60a5      	str	r5, [r4, #8]
  hadc.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 8002486:	60e5      	str	r5, [r4, #12]
  hadc.Init.LowPowerAutoWait = DISABLE;
 8002488:	7625      	strb	r5, [r4, #24]
  hadc.Init.LowPowerAutoPowerOff = DISABLE;
 800248a:	7665      	strb	r5, [r4, #25]
  hadc.Init.DiscontinuousConvMode = DISABLE;
 800248c:	76e5      	strb	r5, [r4, #27]
  hadc.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 800248e:	6225      	str	r5, [r4, #32]
  hadc.Init.ScanConvMode = ADC_SCAN_DIRECTION_FORWARD;
 8002490:	6127      	str	r7, [r4, #16]
  hadc.Init.ContinuousConvMode = ENABLE;
 8002492:	76a7      	strb	r7, [r4, #26]
  hadc.Init.Overrun = ADC_OVR_DATA_PRESERVED;
 8002494:	62a7      	str	r7, [r4, #40]	; 0x28
  if (HAL_ADC_Init(&hadc) != HAL_OK)
 8002496:	f000 fb6b 	bl	8002b70 <HAL_ADC_Init>
  sConfig.Rank = ADC_RANK_CHANNEL_NUMBER;
 800249a:	2380      	movs	r3, #128	; 0x80
 800249c:	015b      	lsls	r3, r3, #5
 800249e:	9304      	str	r3, [sp, #16]
  sConfig.SamplingTime = ADC_SAMPLETIME_1CYCLE_5;
 80024a0:	2380      	movs	r3, #128	; 0x80
  if (HAL_ADC_ConfigChannel(&hadc, &sConfig) != HAL_OK)
 80024a2:	a903      	add	r1, sp, #12
  sConfig.SamplingTime = ADC_SAMPLETIME_1CYCLE_5;
 80024a4:	055b      	lsls	r3, r3, #21
  if (HAL_ADC_ConfigChannel(&hadc, &sConfig) != HAL_OK)
 80024a6:	0020      	movs	r0, r4
  sConfig.Channel = ADC_CHANNEL_0;
 80024a8:	9503      	str	r5, [sp, #12]
  sConfig.SamplingTime = ADC_SAMPLETIME_1CYCLE_5;
 80024aa:	9305      	str	r3, [sp, #20]
  if (HAL_ADC_ConfigChannel(&hadc, &sConfig) != HAL_OK)
 80024ac:	f000 fc9c 	bl	8002de8 <HAL_ADC_ConfigChannel>
  hi2c1.Instance = I2C1;
 80024b0:	4e1b      	ldr	r6, [pc, #108]	; (8002520 <main+0x12c>)
 80024b2:	4b1c      	ldr	r3, [pc, #112]	; (8002524 <main+0x130>)
  if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 80024b4:	0030      	movs	r0, r6
  hi2c1.Instance = I2C1;
 80024b6:	6033      	str	r3, [r6, #0]
  hi2c1.Init.Timing = 0x2000090E;
 80024b8:	4b1b      	ldr	r3, [pc, #108]	; (8002528 <main+0x134>)
  hi2c1.Init.OwnAddress1 = 0;
 80024ba:	60b5      	str	r5, [r6, #8]
  hi2c1.Init.Timing = 0x2000090E;
 80024bc:	6073      	str	r3, [r6, #4]
  hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 80024be:	6135      	str	r5, [r6, #16]
  hi2c1.Init.OwnAddress2 = 0;
 80024c0:	6175      	str	r5, [r6, #20]
  hi2c1.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
 80024c2:	61b5      	str	r5, [r6, #24]
  hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 80024c4:	61f5      	str	r5, [r6, #28]
  hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 80024c6:	6235      	str	r5, [r6, #32]
  hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 80024c8:	60f7      	str	r7, [r6, #12]
  if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 80024ca:	f001 f825 	bl	8003518 <HAL_I2C_Init>
  if (HAL_I2CEx_ConfigAnalogFilter(&hi2c1, I2C_ANALOGFILTER_ENABLE) != HAL_OK)
 80024ce:	0029      	movs	r1, r5
 80024d0:	0030      	movs	r0, r6
 80024d2:	f001 f92d 	bl	8003730 <HAL_I2CEx_ConfigAnalogFilter>
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c1, 0) != HAL_OK)
 80024d6:	0029      	movs	r1, r5
 80024d8:	0030      	movs	r0, r6
 80024da:	f001 f94f 	bl	800377c <HAL_I2CEx_ConfigDigitalFilter>
  HAL_ADCEx_Calibration_Start(&hadc);
 80024de:	0020      	movs	r0, r4
 80024e0:	f000 fd02 	bl	8002ee8 <HAL_ADCEx_Calibration_Start>
  ssd1306_Init();
 80024e4:	f000 f9a8 	bl	8002838 <ssd1306_Init>
  state=0;
 80024e8:	4e10      	ldr	r6, [pc, #64]	; (800252c <main+0x138>)
 80024ea:	7035      	strb	r5, [r6, #0]
	  bitstatus = HAL_GPIO_ReadPin(BTN_GPIO_Port, BTN_Pin);
 80024ec:	2590      	movs	r5, #144	; 0x90
 80024ee:	05ed      	lsls	r5, r5, #23
 80024f0:	2180      	movs	r1, #128	; 0x80
 80024f2:	0028      	movs	r0, r5
 80024f4:	f000 fefe 	bl	80032f4 <HAL_GPIO_ReadPin>
	  if (state == 0 &&  bitstatus == GPIO_PIN_RESET) {
 80024f8:	7833      	ldrb	r3, [r6, #0]
 80024fa:	2b00      	cmp	r3, #0
 80024fc:	d1f8      	bne.n	80024f0 <main+0xfc>
 80024fe:	2800      	cmp	r0, #0
 8002500:	d1f6      	bne.n	80024f0 <main+0xfc>
		  HAL_ADC_Start_DMA(&hadc, (uint32_t *) adcBuffer, ADC_BUFFER_SIZE);
 8002502:	2280      	movs	r2, #128	; 0x80
 8002504:	490a      	ldr	r1, [pc, #40]	; (8002530 <main+0x13c>)
 8002506:	0052      	lsls	r2, r2, #1
 8002508:	0020      	movs	r0, r4
		  state = 1;
 800250a:	7037      	strb	r7, [r6, #0]
		  HAL_ADC_Start_DMA(&hadc, (uint32_t *) adcBuffer, ADC_BUFFER_SIZE);
 800250c:	f000 fbd6 	bl	8002cbc <HAL_ADC_Start_DMA>
 8002510:	e7ee      	b.n	80024f0 <main+0xfc>
 8002512:	46c0      	nop			; (mov r8, r8)
 8002514:	40021000 	.word	0x40021000
 8002518:	200008a8 	.word	0x200008a8
 800251c:	40012400 	.word	0x40012400
 8002520:	20000814 	.word	0x20000814
 8002524:	40005400 	.word	0x40005400
 8002528:	2000090e 	.word	0x2000090e
 800252c:	20000860 	.word	0x20000860
 8002530:	20000614 	.word	0x20000614

08002534 <HAL_ADC_ConvCpltCallback>:
/* USER CODE BEGIN 4 */
void HAL_ADC_ConvCpltCallback(ADC_HandleTypeDef* hadc)
{
	char displayBuffer[8];

	sprintf(displayBuffer, "%f", (float) adcBuffer[0]*ADC_LSB);
 8002534:	4b10      	ldr	r3, [pc, #64]	; (8002578 <HAL_ADC_ConvCpltCallback+0x44>)
{
 8002536:	b507      	push	{r0, r1, r2, lr}
	sprintf(displayBuffer, "%f", (float) adcBuffer[0]*ADC_LSB);
 8002538:	8818      	ldrh	r0, [r3, #0]
 800253a:	f7fe f8dd 	bl	80006f8 <__aeabi_ui2f>
 800253e:	490f      	ldr	r1, [pc, #60]	; (800257c <HAL_ADC_ConvCpltCallback+0x48>)
 8002540:	f7fd ffa8 	bl	8000494 <__aeabi_fmul>
 8002544:	f7ff feb6 	bl	80022b4 <__aeabi_f2d>
 8002548:	0002      	movs	r2, r0
 800254a:	000b      	movs	r3, r1
 800254c:	4668      	mov	r0, sp
 800254e:	490c      	ldr	r1, [pc, #48]	; (8002580 <HAL_ADC_ConvCpltCallback+0x4c>)
 8002550:	f002 f986 	bl	8004860 <siprintf>
	ssd1306_SetCursor(20, 30);
 8002554:	211e      	movs	r1, #30
 8002556:	2014      	movs	r0, #20
 8002558:	f000 fa60 	bl	8002a1c <ssd1306_SetCursor>
	ssd1306_WriteString(displayBuffer, Font_11x18, White);
 800255c:	4a09      	ldr	r2, [pc, #36]	; (8002584 <HAL_ADC_ConvCpltCallback+0x50>)
 800255e:	2301      	movs	r3, #1
 8002560:	6811      	ldr	r1, [r2, #0]
 8002562:	4668      	mov	r0, sp
 8002564:	6852      	ldr	r2, [r2, #4]
 8002566:	f000 fa45 	bl	80029f4 <ssd1306_WriteString>
	ssd1306_UpdateScreen();
 800256a:	f000 f94b 	bl	8002804 <ssd1306_UpdateScreen>

	state=0;
 800256e:	2200      	movs	r2, #0
 8002570:	4b05      	ldr	r3, [pc, #20]	; (8002588 <HAL_ADC_ConvCpltCallback+0x54>)
 8002572:	701a      	strb	r2, [r3, #0]
}
 8002574:	bd07      	pop	{r0, r1, r2, pc}
 8002576:	46c0      	nop			; (mov r8, r8)
 8002578:	20000614 	.word	0x20000614
 800257c:	3a51b717 	.word	0x3a51b717
 8002580:	08006188 	.word	0x08006188
 8002584:	20000004 	.word	0x20000004
 8002588:	20000860 	.word	0x20000860

0800258c <Error_Handler>:
{
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */

  /* USER CODE END Error_Handler_Debug */
}
 800258c:	4770      	bx	lr
	...

08002590 <HAL_MspInit>:
{
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8002590:	2001      	movs	r0, #1
 8002592:	4b0a      	ldr	r3, [pc, #40]	; (80025bc <HAL_MspInit+0x2c>)
{
 8002594:	b082      	sub	sp, #8
  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8002596:	6999      	ldr	r1, [r3, #24]
 8002598:	4301      	orrs	r1, r0
 800259a:	6199      	str	r1, [r3, #24]
  __HAL_RCC_PWR_CLK_ENABLE();
 800259c:	2180      	movs	r1, #128	; 0x80
  __HAL_RCC_SYSCFG_CLK_ENABLE();
 800259e:	699a      	ldr	r2, [r3, #24]
  __HAL_RCC_PWR_CLK_ENABLE();
 80025a0:	0549      	lsls	r1, r1, #21
  __HAL_RCC_SYSCFG_CLK_ENABLE();
 80025a2:	4002      	ands	r2, r0
 80025a4:	9200      	str	r2, [sp, #0]
 80025a6:	9a00      	ldr	r2, [sp, #0]
  __HAL_RCC_PWR_CLK_ENABLE();
 80025a8:	69da      	ldr	r2, [r3, #28]
 80025aa:	430a      	orrs	r2, r1
 80025ac:	61da      	str	r2, [r3, #28]
 80025ae:	69db      	ldr	r3, [r3, #28]
 80025b0:	400b      	ands	r3, r1
 80025b2:	9301      	str	r3, [sp, #4]
 80025b4:	9b01      	ldr	r3, [sp, #4]
  /* System interrupt init*/

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 80025b6:	b002      	add	sp, #8
 80025b8:	4770      	bx	lr
 80025ba:	46c0      	nop			; (mov r8, r8)
 80025bc:	40021000 	.word	0x40021000

080025c0 <HAL_ADC_MspInit>:
* This function configures the hardware resources used in this example
* @param hadc: ADC handle pointer
* @retval None
*/
void HAL_ADC_MspInit(ADC_HandleTypeDef* hadc)
{
 80025c0:	b530      	push	{r4, r5, lr}
 80025c2:	0005      	movs	r5, r0
 80025c4:	b089      	sub	sp, #36	; 0x24
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80025c6:	2214      	movs	r2, #20
 80025c8:	2100      	movs	r1, #0
 80025ca:	a803      	add	r0, sp, #12
 80025cc:	f001 fce1 	bl	8003f92 <memset>
  if(hadc->Instance==ADC1)
 80025d0:	4b1d      	ldr	r3, [pc, #116]	; (8002648 <HAL_ADC_MspInit+0x88>)
 80025d2:	682a      	ldr	r2, [r5, #0]
 80025d4:	429a      	cmp	r2, r3
 80025d6:	d134      	bne.n	8002642 <HAL_ADC_MspInit+0x82>
  {
  /* USER CODE BEGIN ADC1_MspInit 0 */

  /* USER CODE END ADC1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_ADC1_CLK_ENABLE();
 80025d8:	2080      	movs	r0, #128	; 0x80
 80025da:	4b1c      	ldr	r3, [pc, #112]	; (800264c <HAL_ADC_MspInit+0x8c>)
 80025dc:	0080      	lsls	r0, r0, #2
 80025de:	6999      	ldr	r1, [r3, #24]
 80025e0:	4301      	orrs	r1, r0
 80025e2:	6199      	str	r1, [r3, #24]
  
    __HAL_RCC_GPIOA_CLK_ENABLE();
 80025e4:	2180      	movs	r1, #128	; 0x80
    __HAL_RCC_ADC1_CLK_ENABLE();
 80025e6:	699a      	ldr	r2, [r3, #24]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 80025e8:	0289      	lsls	r1, r1, #10
    __HAL_RCC_ADC1_CLK_ENABLE();
 80025ea:	4002      	ands	r2, r0
 80025ec:	9201      	str	r2, [sp, #4]
 80025ee:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 80025f0:	695a      	ldr	r2, [r3, #20]
    PA0     ------> ADC_IN0 
    */
    GPIO_InitStruct.Pin = GPIO_PIN_0;
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80025f2:	2090      	movs	r0, #144	; 0x90
    __HAL_RCC_GPIOA_CLK_ENABLE();
 80025f4:	430a      	orrs	r2, r1
 80025f6:	615a      	str	r2, [r3, #20]
 80025f8:	695b      	ldr	r3, [r3, #20]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80025fa:	05c0      	lsls	r0, r0, #23
    __HAL_RCC_GPIOA_CLK_ENABLE();
 80025fc:	400b      	ands	r3, r1
 80025fe:	9302      	str	r3, [sp, #8]
 8002600:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Pin = GPIO_PIN_0;
 8002602:	2301      	movs	r3, #1
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002604:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Pin = GPIO_PIN_0;
 8002606:	9303      	str	r3, [sp, #12]
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 8002608:	3302      	adds	r3, #2
 800260a:	9304      	str	r3, [sp, #16]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800260c:	f000 fdc8 	bl	80031a0 <HAL_GPIO_Init>
    /* ADC1 DMA Init */
    /* ADC Init */
    hdma_adc.Instance = DMA1_Channel1;
    hdma_adc.Init.Direction = DMA_PERIPH_TO_MEMORY;
    hdma_adc.Init.PeriphInc = DMA_PINC_DISABLE;
    hdma_adc.Init.MemInc = DMA_MINC_ENABLE;
 8002610:	2280      	movs	r2, #128	; 0x80
    hdma_adc.Instance = DMA1_Channel1;
 8002612:	4c0f      	ldr	r4, [pc, #60]	; (8002650 <HAL_ADC_MspInit+0x90>)
 8002614:	4b0f      	ldr	r3, [pc, #60]	; (8002654 <HAL_ADC_MspInit+0x94>)
    hdma_adc.Init.MemInc = DMA_MINC_ENABLE;
 8002616:	60e2      	str	r2, [r4, #12]
    hdma_adc.Init.PeriphDataAlignment = DMA_PDATAALIGN_HALFWORD;
 8002618:	1892      	adds	r2, r2, r2
 800261a:	6122      	str	r2, [r4, #16]
    hdma_adc.Init.MemDataAlignment = DMA_MDATAALIGN_HALFWORD;
 800261c:	2280      	movs	r2, #128	; 0x80
 800261e:	00d2      	lsls	r2, r2, #3
    hdma_adc.Instance = DMA1_Channel1;
 8002620:	6023      	str	r3, [r4, #0]
    hdma_adc.Init.MemDataAlignment = DMA_MDATAALIGN_HALFWORD;
 8002622:	6162      	str	r2, [r4, #20]
    hdma_adc.Init.Direction = DMA_PERIPH_TO_MEMORY;
 8002624:	2300      	movs	r3, #0
    hdma_adc.Init.Mode = DMA_CIRCULAR;
 8002626:	2220      	movs	r2, #32
    hdma_adc.Init.Priority = DMA_PRIORITY_LOW;
    if (HAL_DMA_Init(&hdma_adc) != HAL_OK)
 8002628:	0020      	movs	r0, r4
    hdma_adc.Init.Direction = DMA_PERIPH_TO_MEMORY;
 800262a:	6063      	str	r3, [r4, #4]
    hdma_adc.Init.PeriphInc = DMA_PINC_DISABLE;
 800262c:	60a3      	str	r3, [r4, #8]
    hdma_adc.Init.Mode = DMA_CIRCULAR;
 800262e:	61a2      	str	r2, [r4, #24]
    hdma_adc.Init.Priority = DMA_PRIORITY_LOW;
 8002630:	61e3      	str	r3, [r4, #28]
    if (HAL_DMA_Init(&hdma_adc) != HAL_OK)
 8002632:	f000 fcfd 	bl	8003030 <HAL_DMA_Init>
 8002636:	2800      	cmp	r0, #0
 8002638:	d001      	beq.n	800263e <HAL_ADC_MspInit+0x7e>
    {
      Error_Handler();
 800263a:	f7ff ffa7 	bl	800258c <Error_Handler>
    }

    __HAL_LINKDMA(hadc,DMA_Handle,hdma_adc);
 800263e:	632c      	str	r4, [r5, #48]	; 0x30
 8002640:	6265      	str	r5, [r4, #36]	; 0x24
  /* USER CODE BEGIN ADC1_MspInit 1 */

  /* USER CODE END ADC1_MspInit 1 */
  }

}
 8002642:	b009      	add	sp, #36	; 0x24
 8002644:	bd30      	pop	{r4, r5, pc}
 8002646:	46c0      	nop			; (mov r8, r8)
 8002648:	40012400 	.word	0x40012400
 800264c:	40021000 	.word	0x40021000
 8002650:	20000864 	.word	0x20000864
 8002654:	40020008 	.word	0x40020008

08002658 <HAL_I2C_MspInit>:
* This function configures the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 8002658:	b510      	push	{r4, lr}
 800265a:	0004      	movs	r4, r0
 800265c:	b088      	sub	sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800265e:	2214      	movs	r2, #20
 8002660:	2100      	movs	r1, #0
 8002662:	a803      	add	r0, sp, #12
 8002664:	f001 fc95 	bl	8003f92 <memset>
  if(hi2c->Instance==I2C1)
 8002668:	4b12      	ldr	r3, [pc, #72]	; (80026b4 <HAL_I2C_MspInit+0x5c>)
 800266a:	6822      	ldr	r2, [r4, #0]
 800266c:	429a      	cmp	r2, r3
 800266e:	d11e      	bne.n	80026ae <HAL_I2C_MspInit+0x56>
  {
  /* USER CODE BEGIN I2C1_MspInit 0 */

  /* USER CODE END I2C1_MspInit 0 */
  
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8002670:	2180      	movs	r1, #128	; 0x80
 8002672:	4c11      	ldr	r4, [pc, #68]	; (80026b8 <HAL_I2C_MspInit+0x60>)
 8002674:	03c9      	lsls	r1, r1, #15
 8002676:	6962      	ldr	r2, [r4, #20]
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
    GPIO_InitStruct.Pull = GPIO_PULLUP;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF1_I2C1;
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002678:	4810      	ldr	r0, [pc, #64]	; (80026bc <HAL_I2C_MspInit+0x64>)
    __HAL_RCC_GPIOF_CLK_ENABLE();
 800267a:	430a      	orrs	r2, r1
 800267c:	6162      	str	r2, [r4, #20]
 800267e:	6963      	ldr	r3, [r4, #20]
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 8002680:	2203      	movs	r2, #3
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8002682:	400b      	ands	r3, r1
 8002684:	9301      	str	r3, [sp, #4]
 8002686:	9b01      	ldr	r3, [sp, #4]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8002688:	2312      	movs	r3, #18
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 800268a:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 800268c:	9304      	str	r3, [sp, #16]
    GPIO_InitStruct.Pull = GPIO_PULLUP;
 800268e:	3b11      	subs	r3, #17
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 8002690:	9203      	str	r2, [sp, #12]
    GPIO_InitStruct.Pull = GPIO_PULLUP;
 8002692:	9305      	str	r3, [sp, #20]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8002694:	9206      	str	r2, [sp, #24]
    GPIO_InitStruct.Alternate = GPIO_AF1_I2C1;
 8002696:	9307      	str	r3, [sp, #28]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002698:	f000 fd82 	bl	80031a0 <HAL_GPIO_Init>

    /* Peripheral clock enable */
    __HAL_RCC_I2C1_CLK_ENABLE();
 800269c:	2180      	movs	r1, #128	; 0x80
 800269e:	69e2      	ldr	r2, [r4, #28]
 80026a0:	0389      	lsls	r1, r1, #14
 80026a2:	430a      	orrs	r2, r1
 80026a4:	61e2      	str	r2, [r4, #28]
 80026a6:	69e3      	ldr	r3, [r4, #28]
 80026a8:	400b      	ands	r3, r1
 80026aa:	9302      	str	r3, [sp, #8]
 80026ac:	9b02      	ldr	r3, [sp, #8]
  /* USER CODE BEGIN I2C1_MspInit 1 */

  /* USER CODE END I2C1_MspInit 1 */
  }

}
 80026ae:	b008      	add	sp, #32
 80026b0:	bd10      	pop	{r4, pc}
 80026b2:	46c0      	nop			; (mov r8, r8)
 80026b4:	40005400 	.word	0x40005400
 80026b8:	40021000 	.word	0x40021000
 80026bc:	48001400 	.word	0x48001400

080026c0 <NMI_Handler>:

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
 80026c0:	4770      	bx	lr

080026c2 <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 80026c2:	e7fe      	b.n	80026c2 <HardFault_Handler>

080026c4 <SVC_Handler>:
 80026c4:	4770      	bx	lr

080026c6 <PendSV_Handler>:
 80026c6:	4770      	bx	lr

080026c8 <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 80026c8:	b510      	push	{r4, lr}
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 80026ca:	f000 f9e1 	bl	8002a90 <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 80026ce:	bd10      	pop	{r4, pc}

080026d0 <DMA1_Channel1_IRQHandler>:

/**
  * @brief This function handles DMA1 channel 1 interrupt.
  */
void DMA1_Channel1_IRQHandler(void)
{
 80026d0:	b510      	push	{r4, lr}
  /* USER CODE BEGIN DMA1_Channel1_IRQn 0 */

  /* USER CODE END DMA1_Channel1_IRQn 0 */
  HAL_DMA_IRQHandler(&hdma_adc);
 80026d2:	4802      	ldr	r0, [pc, #8]	; (80026dc <DMA1_Channel1_IRQHandler+0xc>)
 80026d4:	f000 fd1a 	bl	800310c <HAL_DMA_IRQHandler>
  /* USER CODE BEGIN DMA1_Channel1_IRQn 1 */

  /* USER CODE END DMA1_Channel1_IRQn 1 */
}
 80026d8:	bd10      	pop	{r4, pc}
 80026da:	46c0      	nop			; (mov r8, r8)
 80026dc:	20000864 	.word	0x20000864

080026e0 <_sbrk>:
{
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
 80026e0:	4b0a      	ldr	r3, [pc, #40]	; (800270c <_sbrk+0x2c>)
{
 80026e2:	b510      	push	{r4, lr}
	if (heap_end == 0)
 80026e4:	6819      	ldr	r1, [r3, #0]
{
 80026e6:	0002      	movs	r2, r0
	if (heap_end == 0)
 80026e8:	2900      	cmp	r1, #0
 80026ea:	d101      	bne.n	80026f0 <_sbrk+0x10>
		heap_end = &end;
 80026ec:	4908      	ldr	r1, [pc, #32]	; (8002710 <_sbrk+0x30>)
 80026ee:	6019      	str	r1, [r3, #0]

	prev_heap_end = heap_end;
	if (heap_end + incr > stack_ptr)
 80026f0:	4669      	mov	r1, sp
	prev_heap_end = heap_end;
 80026f2:	6818      	ldr	r0, [r3, #0]
	if (heap_end + incr > stack_ptr)
 80026f4:	1882      	adds	r2, r0, r2
 80026f6:	428a      	cmp	r2, r1
 80026f8:	d906      	bls.n	8002708 <_sbrk+0x28>
	{
		errno = ENOMEM;
 80026fa:	f001 fc17 	bl	8003f2c <__errno>
 80026fe:	230c      	movs	r3, #12
 8002700:	6003      	str	r3, [r0, #0]
		return (caddr_t) -1;
 8002702:	2001      	movs	r0, #1
 8002704:	4240      	negs	r0, r0
	}

	heap_end += incr;

	return (caddr_t) prev_heap_end;
}
 8002706:	bd10      	pop	{r4, pc}
	heap_end += incr;
 8002708:	601a      	str	r2, [r3, #0]
	return (caddr_t) prev_heap_end;
 800270a:	e7fc      	b.n	8002706 <_sbrk+0x26>
 800270c:	20000200 	.word	0x20000200
 8002710:	200008f0 	.word	0x200008f0

08002714 <SystemInit>:
                         before branch to main program. This call is made inside
                         the "startup_stm32f0xx.s" file.
                         User can setups the default system clock (System clock source, PLL Multiplier
                         and Divider factors, AHB/APBx prescalers and Flash settings).
   */
}
 8002714:	4770      	bx	lr
	...

08002718 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8002718:	4813      	ldr	r0, [pc, #76]	; (8002768 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800271a:	4685      	mov	sp, r0

/*Check if boot space corresponds to test memory*/
 
    LDR R0,=0x00000004
 800271c:	4813      	ldr	r0, [pc, #76]	; (800276c <LoopForever+0x6>)
    LDR R1, [R0]
 800271e:	6801      	ldr	r1, [r0, #0]
    LSRS R1, R1, #24
 8002720:	0e09      	lsrs	r1, r1, #24
    LDR R2,=0x1F
 8002722:	4a13      	ldr	r2, [pc, #76]	; (8002770 <LoopForever+0xa>)
    CMP R1, R2
 8002724:	4291      	cmp	r1, r2
    BNE ApplicationStart
 8002726:	d105      	bne.n	8002734 <ApplicationStart>

 /*SYSCFG clock enable*/

    LDR R0,=0x40021018
 8002728:	4812      	ldr	r0, [pc, #72]	; (8002774 <LoopForever+0xe>)
    LDR R1,=0x00000001
 800272a:	4913      	ldr	r1, [pc, #76]	; (8002778 <LoopForever+0x12>)
    STR R1, [R0]
 800272c:	6001      	str	r1, [r0, #0]

/*Set CFGR1 register with flash memory remap at address 0*/
    LDR R0,=0x40010000
 800272e:	4813      	ldr	r0, [pc, #76]	; (800277c <LoopForever+0x16>)
    LDR R1,=0x00000000
 8002730:	4913      	ldr	r1, [pc, #76]	; (8002780 <LoopForever+0x1a>)
    STR R1, [R0]
 8002732:	6001      	str	r1, [r0, #0]

08002734 <ApplicationStart>:

ApplicationStart:
/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8002734:	4813      	ldr	r0, [pc, #76]	; (8002784 <LoopForever+0x1e>)
  ldr r1, =_edata
 8002736:	4914      	ldr	r1, [pc, #80]	; (8002788 <LoopForever+0x22>)
  ldr r2, =_sidata
 8002738:	4a14      	ldr	r2, [pc, #80]	; (800278c <LoopForever+0x26>)
  movs r3, #0
 800273a:	2300      	movs	r3, #0
  b LoopCopyDataInit
 800273c:	e002      	b.n	8002744 <LoopCopyDataInit>

0800273e <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800273e:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8002740:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8002742:	3304      	adds	r3, #4

08002744 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8002744:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8002746:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8002748:	d3f9      	bcc.n	800273e <CopyDataInit>
  
/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800274a:	4a11      	ldr	r2, [pc, #68]	; (8002790 <LoopForever+0x2a>)
  ldr r4, =_ebss
 800274c:	4c11      	ldr	r4, [pc, #68]	; (8002794 <LoopForever+0x2e>)
  movs r3, #0
 800274e:	2300      	movs	r3, #0
  b LoopFillZerobss
 8002750:	e001      	b.n	8002756 <LoopFillZerobss>

08002752 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8002752:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8002754:	3204      	adds	r2, #4

08002756 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8002756:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8002758:	d3fb      	bcc.n	8002752 <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit
 800275a:	f7ff ffdb 	bl	8002714 <SystemInit>
/* Call static constructors */
  bl __libc_init_array
 800275e:	f001 fbeb 	bl	8003f38 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8002762:	f7ff fe47 	bl	80023f4 <main>

08002766 <LoopForever>:

LoopForever:
    b LoopForever
 8002766:	e7fe      	b.n	8002766 <LoopForever>
  ldr   r0, =_estack
 8002768:	20001800 	.word	0x20001800
    LDR R0,=0x00000004
 800276c:	00000004 	.word	0x00000004
    LDR R2,=0x1F
 8002770:	0000001f 	.word	0x0000001f
    LDR R0,=0x40021018
 8002774:	40021018 	.word	0x40021018
    LDR R1,=0x00000001
 8002778:	00000001 	.word	0x00000001
    LDR R0,=0x40010000
 800277c:	40010000 	.word	0x40010000
    LDR R1,=0x00000000
 8002780:	00000000 	.word	0x00000000
  ldr r0, =_sdata
 8002784:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8002788:	200001e4 	.word	0x200001e4
  ldr r2, =_sidata
 800278c:	08007160 	.word	0x08007160
  ldr r2, =_sbss
 8002790:	200001e4 	.word	0x200001e4
  ldr r4, =_ebss
 8002794:	200008f0 	.word	0x200008f0

08002798 <ADC1_IRQHandler>:
 * @retval : None
*/
    .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8002798:	e7fe      	b.n	8002798 <ADC1_IRQHandler>
	...

0800279c <ssd1306_WriteCommand>:
void ssd1306_Reset(void) {
	/* for I2C - do nothing */
}

// Send a byte to the command register
void ssd1306_WriteCommand(uint8_t byte) {
 800279c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800279e:	2217      	movs	r2, #23
	HAL_I2C_Mem_Write(&SSD1306_I2C_PORT, SSD1306_I2C_ADDR, 0x00, 1, &byte, 1, HAL_MAX_DELAY);
 80027a0:	2301      	movs	r3, #1
void ssd1306_WriteCommand(uint8_t byte) {
 80027a2:	446a      	add	r2, sp
	HAL_I2C_Mem_Write(&SSD1306_I2C_PORT, SSD1306_I2C_ADDR, 0x00, 1, &byte, 1, HAL_MAX_DELAY);
 80027a4:	425b      	negs	r3, r3
void ssd1306_WriteCommand(uint8_t byte) {
 80027a6:	7010      	strb	r0, [r2, #0]
	HAL_I2C_Mem_Write(&SSD1306_I2C_PORT, SSD1306_I2C_ADDR, 0x00, 1, &byte, 1, HAL_MAX_DELAY);
 80027a8:	9302      	str	r3, [sp, #8]
 80027aa:	3302      	adds	r3, #2
 80027ac:	9200      	str	r2, [sp, #0]
 80027ae:	9301      	str	r3, [sp, #4]
 80027b0:	2200      	movs	r2, #0
 80027b2:	2178      	movs	r1, #120	; 0x78
 80027b4:	4802      	ldr	r0, [pc, #8]	; (80027c0 <ssd1306_WriteCommand+0x24>)
 80027b6:	f000 ff05 	bl	80035c4 <HAL_I2C_Mem_Write>
}
 80027ba:	b007      	add	sp, #28
 80027bc:	bd00      	pop	{pc}
 80027be:	46c0      	nop			; (mov r8, r8)
 80027c0:	20000814 	.word	0x20000814

080027c4 <ssd1306_WriteData>:

// Send data
void ssd1306_WriteData(uint8_t* buffer, size_t buff_size) {
 80027c4:	b51f      	push	{r0, r1, r2, r3, r4, lr}
	HAL_I2C_Mem_Write(&SSD1306_I2C_PORT, SSD1306_I2C_ADDR, 0x40, 1, buffer, buff_size, HAL_MAX_DELAY);
 80027c6:	2301      	movs	r3, #1
 80027c8:	b289      	uxth	r1, r1
 80027ca:	425b      	negs	r3, r3
 80027cc:	9302      	str	r3, [sp, #8]
 80027ce:	9101      	str	r1, [sp, #4]
 80027d0:	9000      	str	r0, [sp, #0]
 80027d2:	3302      	adds	r3, #2
 80027d4:	2240      	movs	r2, #64	; 0x40
 80027d6:	2178      	movs	r1, #120	; 0x78
 80027d8:	4802      	ldr	r0, [pc, #8]	; (80027e4 <ssd1306_WriteData+0x20>)
 80027da:	f000 fef3 	bl	80035c4 <HAL_I2C_Mem_Write>
}
 80027de:	b005      	add	sp, #20
 80027e0:	bd00      	pop	{pc}
 80027e2:	46c0      	nop			; (mov r8, r8)
 80027e4:	20000814 	.word	0x20000814

080027e8 <ssd1306_Fill>:
void ssd1306_Fill(SSD1306_COLOR color) {
    /* Set memory */
    uint32_t i;

    for(i = 0; i < sizeof(SSD1306_Buffer); i++) {
        SSD1306_Buffer[i] = (color == Black) ? 0x00 : 0xFF;
 80027e8:	1e42      	subs	r2, r0, #1
 80027ea:	4190      	sbcs	r0, r2
    for(i = 0; i < sizeof(SSD1306_Buffer); i++) {
 80027ec:	2280      	movs	r2, #128	; 0x80
 80027ee:	2300      	movs	r3, #0
        SSD1306_Buffer[i] = (color == Black) ? 0x00 : 0xFF;
 80027f0:	4903      	ldr	r1, [pc, #12]	; (8002800 <ssd1306_Fill+0x18>)
 80027f2:	4240      	negs	r0, r0
    for(i = 0; i < sizeof(SSD1306_Buffer); i++) {
 80027f4:	00d2      	lsls	r2, r2, #3
        SSD1306_Buffer[i] = (color == Black) ? 0x00 : 0xFF;
 80027f6:	54c8      	strb	r0, [r1, r3]
    for(i = 0; i < sizeof(SSD1306_Buffer); i++) {
 80027f8:	3301      	adds	r3, #1
 80027fa:	4293      	cmp	r3, r2
 80027fc:	d1fb      	bne.n	80027f6 <ssd1306_Fill+0xe>
    }
}
 80027fe:	4770      	bx	lr
 8002800:	2000020a 	.word	0x2000020a

08002804 <ssd1306_UpdateScreen>:

// Write the screenbuffer with changed to the screen
void ssd1306_UpdateScreen(void) {
 8002804:	b510      	push	{r4, lr}
 8002806:	2400      	movs	r4, #0
    uint8_t i;
    for(i = 0; i < 8; i++) {
        ssd1306_WriteCommand(0xB0 + i);
 8002808:	0020      	movs	r0, r4
 800280a:	3850      	subs	r0, #80	; 0x50
 800280c:	b2c0      	uxtb	r0, r0
 800280e:	f7ff ffc5 	bl	800279c <ssd1306_WriteCommand>
        ssd1306_WriteCommand(0x00);
 8002812:	2000      	movs	r0, #0
 8002814:	f7ff ffc2 	bl	800279c <ssd1306_WriteCommand>
        ssd1306_WriteCommand(0x10);
 8002818:	2010      	movs	r0, #16
 800281a:	f7ff ffbf 	bl	800279c <ssd1306_WriteCommand>
        ssd1306_WriteData(&SSD1306_Buffer[SSD1306_WIDTH*i],SSD1306_WIDTH);
 800281e:	4b05      	ldr	r3, [pc, #20]	; (8002834 <ssd1306_UpdateScreen+0x30>)
 8002820:	01e0      	lsls	r0, r4, #7
 8002822:	18c0      	adds	r0, r0, r3
 8002824:	2180      	movs	r1, #128	; 0x80
 8002826:	3401      	adds	r4, #1
 8002828:	f7ff ffcc 	bl	80027c4 <ssd1306_WriteData>
    for(i = 0; i < 8; i++) {
 800282c:	2c08      	cmp	r4, #8
 800282e:	d1eb      	bne.n	8002808 <ssd1306_UpdateScreen+0x4>
    }
}
 8002830:	bd10      	pop	{r4, pc}
 8002832:	46c0      	nop			; (mov r8, r8)
 8002834:	2000020a 	.word	0x2000020a

08002838 <ssd1306_Init>:
void ssd1306_Init(void) {
 8002838:	b510      	push	{r4, lr}
    HAL_Delay(100);
 800283a:	2064      	movs	r0, #100	; 0x64
 800283c:	f000 f93a 	bl	8002ab4 <HAL_Delay>
    ssd1306_WriteCommand(0xAE); //display off
 8002840:	20ae      	movs	r0, #174	; 0xae
 8002842:	f7ff ffab 	bl	800279c <ssd1306_WriteCommand>
    ssd1306_WriteCommand(0x20); //Set Memory Addressing Mode   
 8002846:	2020      	movs	r0, #32
 8002848:	f7ff ffa8 	bl	800279c <ssd1306_WriteCommand>
    ssd1306_WriteCommand(0x00); // 00b,Horizontal Addressing Mode; 01b,Vertical Addressing Mode;
 800284c:	2000      	movs	r0, #0
 800284e:	f7ff ffa5 	bl	800279c <ssd1306_WriteCommand>
    ssd1306_WriteCommand(0xB0); //Set Page Start Address for Page Addressing Mode,0-7
 8002852:	20b0      	movs	r0, #176	; 0xb0
 8002854:	f7ff ffa2 	bl	800279c <ssd1306_WriteCommand>
    ssd1306_WriteCommand(0xC8); //Set COM Output Scan Direction
 8002858:	20c8      	movs	r0, #200	; 0xc8
 800285a:	f7ff ff9f 	bl	800279c <ssd1306_WriteCommand>
    ssd1306_WriteCommand(0x00); //---set low column address
 800285e:	2000      	movs	r0, #0
 8002860:	f7ff ff9c 	bl	800279c <ssd1306_WriteCommand>
    ssd1306_WriteCommand(0x10); //---set high column address
 8002864:	2010      	movs	r0, #16
 8002866:	f7ff ff99 	bl	800279c <ssd1306_WriteCommand>
    ssd1306_WriteCommand(0x40); //--set start line address - CHECK
 800286a:	2040      	movs	r0, #64	; 0x40
 800286c:	f7ff ff96 	bl	800279c <ssd1306_WriteCommand>
    ssd1306_WriteCommand(0x81); //--set contrast control register - CHECK
 8002870:	2081      	movs	r0, #129	; 0x81
 8002872:	f7ff ff93 	bl	800279c <ssd1306_WriteCommand>
    ssd1306_WriteCommand(0xFF);
 8002876:	20ff      	movs	r0, #255	; 0xff
 8002878:	f7ff ff90 	bl	800279c <ssd1306_WriteCommand>
    ssd1306_WriteCommand(0xA1); //--set segment re-map 0 to 127 - CHECK
 800287c:	20a1      	movs	r0, #161	; 0xa1
 800287e:	f7ff ff8d 	bl	800279c <ssd1306_WriteCommand>
    ssd1306_WriteCommand(0xA6); //--set normal color
 8002882:	20a6      	movs	r0, #166	; 0xa6
 8002884:	f7ff ff8a 	bl	800279c <ssd1306_WriteCommand>
    ssd1306_WriteCommand(0xA8); //--set multiplex ratio(1 to 64) - CHECK
 8002888:	20a8      	movs	r0, #168	; 0xa8
 800288a:	f7ff ff87 	bl	800279c <ssd1306_WriteCommand>
    ssd1306_WriteCommand(0x3F); //
 800288e:	203f      	movs	r0, #63	; 0x3f
 8002890:	f7ff ff84 	bl	800279c <ssd1306_WriteCommand>
    ssd1306_WriteCommand(0xA4); //0xa4,Output follows RAM content;0xa5,Output ignores RAM content
 8002894:	20a4      	movs	r0, #164	; 0xa4
 8002896:	f7ff ff81 	bl	800279c <ssd1306_WriteCommand>
    ssd1306_WriteCommand(0xD3); //-set display offset - CHECK
 800289a:	20d3      	movs	r0, #211	; 0xd3
 800289c:	f7ff ff7e 	bl	800279c <ssd1306_WriteCommand>
    ssd1306_WriteCommand(0x00); //-not offset
 80028a0:	2000      	movs	r0, #0
 80028a2:	f7ff ff7b 	bl	800279c <ssd1306_WriteCommand>
    ssd1306_WriteCommand(0xD5); //--set display clock divide ratio/oscillator frequency
 80028a6:	20d5      	movs	r0, #213	; 0xd5
 80028a8:	f7ff ff78 	bl	800279c <ssd1306_WriteCommand>
    ssd1306_WriteCommand(0xF0); //--set divide ratio
 80028ac:	20f0      	movs	r0, #240	; 0xf0
 80028ae:	f7ff ff75 	bl	800279c <ssd1306_WriteCommand>
    ssd1306_WriteCommand(0xD9); //--set pre-charge period
 80028b2:	20d9      	movs	r0, #217	; 0xd9
 80028b4:	f7ff ff72 	bl	800279c <ssd1306_WriteCommand>
    ssd1306_WriteCommand(0x22); //
 80028b8:	2022      	movs	r0, #34	; 0x22
 80028ba:	f7ff ff6f 	bl	800279c <ssd1306_WriteCommand>
    ssd1306_WriteCommand(0xDA); //--set com pins hardware configuration - CHECK
 80028be:	20da      	movs	r0, #218	; 0xda
 80028c0:	f7ff ff6c 	bl	800279c <ssd1306_WriteCommand>
    ssd1306_WriteCommand(0x12);
 80028c4:	2012      	movs	r0, #18
 80028c6:	f7ff ff69 	bl	800279c <ssd1306_WriteCommand>
    ssd1306_WriteCommand(0xDB); //--set vcomh
 80028ca:	20db      	movs	r0, #219	; 0xdb
 80028cc:	f7ff ff66 	bl	800279c <ssd1306_WriteCommand>
    ssd1306_WriteCommand(0x20); //0x20,0.77xVcc
 80028d0:	2020      	movs	r0, #32
 80028d2:	f7ff ff63 	bl	800279c <ssd1306_WriteCommand>
    ssd1306_WriteCommand(0x8D); //--set DC-DC enable
 80028d6:	208d      	movs	r0, #141	; 0x8d
 80028d8:	f7ff ff60 	bl	800279c <ssd1306_WriteCommand>
    ssd1306_WriteCommand(0x14); //
 80028dc:	2014      	movs	r0, #20
 80028de:	f7ff ff5d 	bl	800279c <ssd1306_WriteCommand>
    ssd1306_WriteCommand(0xAF); //--turn on SSD1306 panel
 80028e2:	20af      	movs	r0, #175	; 0xaf
 80028e4:	f7ff ff5a 	bl	800279c <ssd1306_WriteCommand>
    ssd1306_Fill(Black);
 80028e8:	2000      	movs	r0, #0
 80028ea:	f7ff ff7d 	bl	80027e8 <ssd1306_Fill>
    ssd1306_UpdateScreen();
 80028ee:	f7ff ff89 	bl	8002804 <ssd1306_UpdateScreen>
    SSD1306.CurrentX = 0;
 80028f2:	2200      	movs	r2, #0
 80028f4:	4b02      	ldr	r3, [pc, #8]	; (8002900 <ssd1306_Init+0xc8>)
 80028f6:	801a      	strh	r2, [r3, #0]
    SSD1306.CurrentY = 0;
 80028f8:	805a      	strh	r2, [r3, #2]
    SSD1306.Initialized = 1;
 80028fa:	3201      	adds	r2, #1
 80028fc:	715a      	strb	r2, [r3, #5]
}
 80028fe:	bd10      	pop	{r4, pc}
 8002900:	20000204 	.word	0x20000204

08002904 <ssd1306_DrawPixel>:
//    Draw one pixel in the screenbuffer
//    X => X Coordinate
//    Y => Y Coordinate
//    color => Pixel color
void ssd1306_DrawPixel(uint8_t x, uint8_t y, SSD1306_COLOR color) {
    if(x >= SSD1306_WIDTH || y >= SSD1306_HEIGHT) {
 8002904:	b243      	sxtb	r3, r0
void ssd1306_DrawPixel(uint8_t x, uint8_t y, SSD1306_COLOR color) {
 8002906:	b570      	push	{r4, r5, r6, lr}
    if(x >= SSD1306_WIDTH || y >= SSD1306_HEIGHT) {
 8002908:	2b00      	cmp	r3, #0
 800290a:	db16      	blt.n	800293a <ssd1306_DrawPixel+0x36>
 800290c:	293f      	cmp	r1, #63	; 0x3f
 800290e:	d814      	bhi.n	800293a <ssd1306_DrawPixel+0x36>
        // Don't write outside the buffer
        return;
    }
    
    // Check if pixel should be inverted
    if(SSD1306.Inverted) {
 8002910:	4b0c      	ldr	r3, [pc, #48]	; (8002944 <ssd1306_DrawPixel+0x40>)
 8002912:	791b      	ldrb	r3, [r3, #4]
 8002914:	2b00      	cmp	r3, #0
 8002916:	d002      	beq.n	800291e <ssd1306_DrawPixel+0x1a>
        color = (SSD1306_COLOR)!color;
 8002918:	4253      	negs	r3, r2
 800291a:	415a      	adcs	r2, r3
 800291c:	b2d2      	uxtb	r2, r2
 800291e:	2407      	movs	r4, #7
 8002920:	08cb      	lsrs	r3, r1, #3
 8002922:	400c      	ands	r4, r1
 8002924:	2101      	movs	r1, #1
 8002926:	40a1      	lsls	r1, r4
 8002928:	01db      	lsls	r3, r3, #7
 800292a:	4d07      	ldr	r5, [pc, #28]	; (8002948 <ssd1306_DrawPixel+0x44>)
 800292c:	1818      	adds	r0, r3, r0
 800292e:	562e      	ldrsb	r6, [r5, r0]
 8002930:	b24b      	sxtb	r3, r1
    }
    
    // Draw in the right color
    if(color == White) {
 8002932:	2a01      	cmp	r2, #1
 8002934:	d102      	bne.n	800293c <ssd1306_DrawPixel+0x38>
        SSD1306_Buffer[x + (y / 8) * SSD1306_WIDTH] |= 1 << (y % 8);
 8002936:	4333      	orrs	r3, r6
 8002938:	542b      	strb	r3, [r5, r0]
    } else { 
        SSD1306_Buffer[x + (y / 8) * SSD1306_WIDTH] &= ~(1 << (y % 8));
    }
}
 800293a:	bd70      	pop	{r4, r5, r6, pc}
        SSD1306_Buffer[x + (y / 8) * SSD1306_WIDTH] &= ~(1 << (y % 8));
 800293c:	439e      	bics	r6, r3
 800293e:	542e      	strb	r6, [r5, r0]
 8002940:	e7fb      	b.n	800293a <ssd1306_DrawPixel+0x36>
 8002942:	46c0      	nop			; (mov r8, r8)
 8002944:	20000204 	.word	0x20000204
 8002948:	2000020a 	.word	0x2000020a

0800294c <ssd1306_WriteChar>:

// Draw 1 char to the screen buffer
// ch       => char om weg te schrijven
// Font     => Font waarmee we gaan schrijven
// color    => Black or White
char ssd1306_WriteChar(char ch, FontDef Font, SSD1306_COLOR color) {
 800294c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800294e:	b089      	sub	sp, #36	; 0x24
 8002950:	9303      	str	r3, [sp, #12]
    uint32_t i, b, j;
    
    // Check if character is valid
    if (ch < 32 || ch > 126)
 8002952:	0003      	movs	r3, r0
 8002954:	3b20      	subs	r3, #32
char ssd1306_WriteChar(char ch, FontDef Font, SSD1306_COLOR color) {
 8002956:	9207      	str	r2, [sp, #28]
    if (ch < 32 || ch > 126)
 8002958:	b2da      	uxtb	r2, r3
char ssd1306_WriteChar(char ch, FontDef Font, SSD1306_COLOR color) {
 800295a:	0005      	movs	r5, r0
 800295c:	9106      	str	r1, [sp, #24]
    if (ch < 32 || ch > 126)
 800295e:	2a5e      	cmp	r2, #94	; 0x5e
 8002960:	d843      	bhi.n	80029ea <ssd1306_WriteChar+0x9e>
 8002962:	aa06      	add	r2, sp, #24
 8002964:	7812      	ldrb	r2, [r2, #0]
 8002966:	9201      	str	r2, [sp, #4]
        return 0;
    
    // Check remaining space on current line
    if (SSD1306_WIDTH < (SSD1306.CurrentX + Font.FontWidth) ||
 8002968:	4a21      	ldr	r2, [pc, #132]	; (80029f0 <ssd1306_WriteChar+0xa4>)
 800296a:	9801      	ldr	r0, [sp, #4]
 800296c:	8811      	ldrh	r1, [r2, #0]
 800296e:	9100      	str	r1, [sp, #0]
 8002970:	1809      	adds	r1, r1, r0
 8002972:	2980      	cmp	r1, #128	; 0x80
 8002974:	dc39      	bgt.n	80029ea <ssd1306_WriteChar+0x9e>
 8002976:	a906      	add	r1, sp, #24
 8002978:	7849      	ldrb	r1, [r1, #1]
 800297a:	9102      	str	r1, [sp, #8]
        SSD1306_HEIGHT < (SSD1306.CurrentY + Font.FontHeight))
 800297c:	8854      	ldrh	r4, [r2, #2]
 800297e:	1862      	adds	r2, r4, r1
    if (SSD1306_WIDTH < (SSD1306.CurrentX + Font.FontWidth) ||
 8002980:	2a40      	cmp	r2, #64	; 0x40
 8002982:	dc32      	bgt.n	80029ea <ssd1306_WriteChar+0x9e>
        return 0;
    }
    
    // Use the font to write
    for(i = 0; i < Font.FontHeight; i++) {
        b = Font.data[(ch - 32) * Font.FontHeight + i];
 8002984:	000a      	movs	r2, r1
    for(i = 0; i < Font.FontHeight; i++) {
 8002986:	2700      	movs	r7, #0
        b = Font.data[(ch - 32) * Font.FontHeight + i];
 8002988:	435a      	muls	r2, r3
 800298a:	b2e4      	uxtb	r4, r4
 800298c:	9204      	str	r2, [sp, #16]
    for(i = 0; i < Font.FontHeight; i++) {
 800298e:	9b02      	ldr	r3, [sp, #8]
 8002990:	42bb      	cmp	r3, r7
 8002992:	d808      	bhi.n	80029a6 <ssd1306_WriteChar+0x5a>
            }
        }
    }
    
    // The current space is now taken
    SSD1306.CurrentX += Font.FontWidth;
 8002994:	9a01      	ldr	r2, [sp, #4]
 8002996:	9b00      	ldr	r3, [sp, #0]
 8002998:	4694      	mov	ip, r2
 800299a:	4a15      	ldr	r2, [pc, #84]	; (80029f0 <ssd1306_WriteChar+0xa4>)
 800299c:	4463      	add	r3, ip
 800299e:	8013      	strh	r3, [r2, #0]
    
    // Return written char for validation
    return ch;
}
 80029a0:	0028      	movs	r0, r5
 80029a2:	b009      	add	sp, #36	; 0x24
 80029a4:	bdf0      	pop	{r4, r5, r6, r7, pc}
        for(j = 0; j < Font.FontWidth; j++) {
 80029a6:	2600      	movs	r6, #0
        b = Font.data[(ch - 32) * Font.FontHeight + i];
 80029a8:	9b04      	ldr	r3, [sp, #16]
 80029aa:	9a07      	ldr	r2, [sp, #28]
 80029ac:	19db      	adds	r3, r3, r7
 80029ae:	005b      	lsls	r3, r3, #1
 80029b0:	5a9b      	ldrh	r3, [r3, r2]
 80029b2:	9305      	str	r3, [sp, #20]
        for(j = 0; j < Font.FontWidth; j++) {
 80029b4:	9b01      	ldr	r3, [sp, #4]
 80029b6:	42b3      	cmp	r3, r6
 80029b8:	d803      	bhi.n	80029c2 <ssd1306_WriteChar+0x76>
 80029ba:	3401      	adds	r4, #1
    for(i = 0; i < Font.FontHeight; i++) {
 80029bc:	3701      	adds	r7, #1
 80029be:	b2e4      	uxtb	r4, r4
 80029c0:	e7e5      	b.n	800298e <ssd1306_WriteChar+0x42>
 80029c2:	9b00      	ldr	r3, [sp, #0]
            if((b << j) & 0x8000)  {
 80029c4:	2280      	movs	r2, #128	; 0x80
 80029c6:	18f0      	adds	r0, r6, r3
 80029c8:	9b05      	ldr	r3, [sp, #20]
 80029ca:	0212      	lsls	r2, r2, #8
 80029cc:	40b3      	lsls	r3, r6
 80029ce:	b2c0      	uxtb	r0, r0
 80029d0:	4213      	tst	r3, r2
 80029d2:	d005      	beq.n	80029e0 <ssd1306_WriteChar+0x94>
                ssd1306_DrawPixel(SSD1306.CurrentX + j, (SSD1306.CurrentY + i), (SSD1306_COLOR) color);
 80029d4:	9a03      	ldr	r2, [sp, #12]
                ssd1306_DrawPixel(SSD1306.CurrentX + j, (SSD1306.CurrentY + i), (SSD1306_COLOR)!color);
 80029d6:	0021      	movs	r1, r4
 80029d8:	f7ff ff94 	bl	8002904 <ssd1306_DrawPixel>
        for(j = 0; j < Font.FontWidth; j++) {
 80029dc:	3601      	adds	r6, #1
 80029de:	e7e9      	b.n	80029b4 <ssd1306_WriteChar+0x68>
                ssd1306_DrawPixel(SSD1306.CurrentX + j, (SSD1306.CurrentY + i), (SSD1306_COLOR)!color);
 80029e0:	9a03      	ldr	r2, [sp, #12]
 80029e2:	4253      	negs	r3, r2
 80029e4:	415a      	adcs	r2, r3
 80029e6:	b2d2      	uxtb	r2, r2
 80029e8:	e7f5      	b.n	80029d6 <ssd1306_WriteChar+0x8a>
        return 0;
 80029ea:	2500      	movs	r5, #0
 80029ec:	e7d8      	b.n	80029a0 <ssd1306_WriteChar+0x54>
 80029ee:	46c0      	nop			; (mov r8, r8)
 80029f0:	20000204 	.word	0x20000204

080029f4 <ssd1306_WriteString>:

// Write full string to screenbuffer
char ssd1306_WriteString(char* str, FontDef Font, SSD1306_COLOR color) {
 80029f4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80029f6:	0004      	movs	r4, r0
 80029f8:	001d      	movs	r5, r3
 80029fa:	9100      	str	r1, [sp, #0]
 80029fc:	9201      	str	r2, [sp, #4]
    // Write until null-byte
    while (*str) {
 80029fe:	7820      	ldrb	r0, [r4, #0]
 8002a00:	2800      	cmp	r0, #0
 8002a02:	d100      	bne.n	8002a06 <ssd1306_WriteString+0x12>
        str++;
    }
    
    // Everything ok
    return *str;
}
 8002a04:	bd3e      	pop	{r1, r2, r3, r4, r5, pc}
        if (ssd1306_WriteChar(*str, Font, color) != *str) {
 8002a06:	002b      	movs	r3, r5
 8002a08:	9900      	ldr	r1, [sp, #0]
 8002a0a:	9a01      	ldr	r2, [sp, #4]
 8002a0c:	f7ff ff9e 	bl	800294c <ssd1306_WriteChar>
 8002a10:	0003      	movs	r3, r0
 8002a12:	7820      	ldrb	r0, [r4, #0]
 8002a14:	4283      	cmp	r3, r0
 8002a16:	d1f5      	bne.n	8002a04 <ssd1306_WriteString+0x10>
        str++;
 8002a18:	3401      	adds	r4, #1
 8002a1a:	e7f0      	b.n	80029fe <ssd1306_WriteString+0xa>

08002a1c <ssd1306_SetCursor>:

// Position the cursor
void ssd1306_SetCursor(uint8_t x, uint8_t y) {
    SSD1306.CurrentX = x;
 8002a1c:	4b01      	ldr	r3, [pc, #4]	; (8002a24 <ssd1306_SetCursor+0x8>)
 8002a1e:	8018      	strh	r0, [r3, #0]
    SSD1306.CurrentY = y;
 8002a20:	8059      	strh	r1, [r3, #2]
}
 8002a22:	4770      	bx	lr
 8002a24:	20000204 	.word	0x20000204

08002a28 <HAL_InitTick>:
  *       implementation  in user file.
  * @param TickPriority Tick interrupt priority.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 8002a28:	b570      	push	{r4, r5, r6, lr}
 8002a2a:	0005      	movs	r5, r0
  /*Configure the SysTick to have interrupt in 1ms time basis*/
  if (HAL_SYSTICK_Config(SystemCoreClock / (1000U / uwTickFreq)) > 0U)
 8002a2c:	20fa      	movs	r0, #250	; 0xfa
 8002a2e:	4b0d      	ldr	r3, [pc, #52]	; (8002a64 <HAL_InitTick+0x3c>)
 8002a30:	0080      	lsls	r0, r0, #2
 8002a32:	7819      	ldrb	r1, [r3, #0]
 8002a34:	f7fd fb7a 	bl	800012c <__udivsi3>
 8002a38:	4b0b      	ldr	r3, [pc, #44]	; (8002a68 <HAL_InitTick+0x40>)
 8002a3a:	0001      	movs	r1, r0
 8002a3c:	6818      	ldr	r0, [r3, #0]
 8002a3e:	f7fd fb75 	bl	800012c <__udivsi3>
 8002a42:	f000 fadb 	bl	8002ffc <HAL_SYSTICK_Config>
 8002a46:	0004      	movs	r4, r0
  {
    return HAL_ERROR;
 8002a48:	2001      	movs	r0, #1
  if (HAL_SYSTICK_Config(SystemCoreClock / (1000U / uwTickFreq)) > 0U)
 8002a4a:	2c00      	cmp	r4, #0
 8002a4c:	d109      	bne.n	8002a62 <HAL_InitTick+0x3a>
  }

  /* Configure the SysTick IRQ priority */
  if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 8002a4e:	2d03      	cmp	r5, #3
 8002a50:	d807      	bhi.n	8002a62 <HAL_InitTick+0x3a>
  {
    HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority, 0U);
 8002a52:	3802      	subs	r0, #2
 8002a54:	0022      	movs	r2, r4
 8002a56:	0029      	movs	r1, r5
 8002a58:	f000 fa9a 	bl	8002f90 <HAL_NVIC_SetPriority>
    uwTickPrio = TickPriority;
 8002a5c:	0020      	movs	r0, r4
 8002a5e:	4b03      	ldr	r3, [pc, #12]	; (8002a6c <HAL_InitTick+0x44>)
 8002a60:	601d      	str	r5, [r3, #0]
    return HAL_ERROR;
  }

   /* Return function status */
  return HAL_OK;
}
 8002a62:	bd70      	pop	{r4, r5, r6, pc}
 8002a64:	2000000c 	.word	0x2000000c
 8002a68:	20000000 	.word	0x20000000
 8002a6c:	20000010 	.word	0x20000010

08002a70 <HAL_Init>:
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 8002a70:	2310      	movs	r3, #16
 8002a72:	4a06      	ldr	r2, [pc, #24]	; (8002a8c <HAL_Init+0x1c>)
{
 8002a74:	b510      	push	{r4, lr}
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 8002a76:	6811      	ldr	r1, [r2, #0]
  HAL_InitTick(TICK_INT_PRIORITY);
 8002a78:	2000      	movs	r0, #0
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 8002a7a:	430b      	orrs	r3, r1
 8002a7c:	6013      	str	r3, [r2, #0]
  HAL_InitTick(TICK_INT_PRIORITY);
 8002a7e:	f7ff ffd3 	bl	8002a28 <HAL_InitTick>
  HAL_MspInit();
 8002a82:	f7ff fd85 	bl	8002590 <HAL_MspInit>
}
 8002a86:	2000      	movs	r0, #0
 8002a88:	bd10      	pop	{r4, pc}
 8002a8a:	46c0      	nop			; (mov r8, r8)
 8002a8c:	40022000 	.word	0x40022000

08002a90 <HAL_IncTick>:
  *       implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += uwTickFreq;
 8002a90:	4a03      	ldr	r2, [pc, #12]	; (8002aa0 <HAL_IncTick+0x10>)
 8002a92:	4b04      	ldr	r3, [pc, #16]	; (8002aa4 <HAL_IncTick+0x14>)
 8002a94:	6811      	ldr	r1, [r2, #0]
 8002a96:	781b      	ldrb	r3, [r3, #0]
 8002a98:	185b      	adds	r3, r3, r1
 8002a9a:	6013      	str	r3, [r2, #0]
}
 8002a9c:	4770      	bx	lr
 8002a9e:	46c0      	nop			; (mov r8, r8)
 8002aa0:	200008e8 	.word	0x200008e8
 8002aa4:	2000000c 	.word	0x2000000c

08002aa8 <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
 8002aa8:	4b01      	ldr	r3, [pc, #4]	; (8002ab0 <HAL_GetTick+0x8>)
 8002aaa:	6818      	ldr	r0, [r3, #0]
}
 8002aac:	4770      	bx	lr
 8002aae:	46c0      	nop			; (mov r8, r8)
 8002ab0:	200008e8 	.word	0x200008e8

08002ab4 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 8002ab4:	b570      	push	{r4, r5, r6, lr}
 8002ab6:	0004      	movs	r4, r0
  uint32_t tickstart = HAL_GetTick();
 8002ab8:	f7ff fff6 	bl	8002aa8 <HAL_GetTick>
 8002abc:	0005      	movs	r5, r0
  uint32_t wait = Delay;
  
  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 8002abe:	1c63      	adds	r3, r4, #1
 8002ac0:	d002      	beq.n	8002ac8 <HAL_Delay+0x14>
  {
    wait += (uint32_t)(uwTickFreq);
 8002ac2:	4b04      	ldr	r3, [pc, #16]	; (8002ad4 <HAL_Delay+0x20>)
 8002ac4:	781b      	ldrb	r3, [r3, #0]
 8002ac6:	18e4      	adds	r4, r4, r3
  }
  
  while((HAL_GetTick() - tickstart) < wait)
 8002ac8:	f7ff ffee 	bl	8002aa8 <HAL_GetTick>
 8002acc:	1b40      	subs	r0, r0, r5
 8002ace:	42a0      	cmp	r0, r4
 8002ad0:	d3fa      	bcc.n	8002ac8 <HAL_Delay+0x14>
  {
  }
}
 8002ad2:	bd70      	pop	{r4, r5, r6, pc}
 8002ad4:	2000000c 	.word	0x2000000c

08002ad8 <ADC_Enable>:
  * @retval HAL status.
  */
static HAL_StatusTypeDef ADC_Enable(ADC_HandleTypeDef* hadc)
{
  uint32_t tickstart = 0U;
  __IO uint32_t wait_loop_index = 0U;
 8002ad8:	2300      	movs	r3, #0
{
 8002ada:	b573      	push	{r0, r1, r4, r5, r6, lr}
  
  /* ADC enable and wait for ADC ready (in case of ADC is disabled or         */
  /* enabling phase not yet completed: flag ADC ready not yet set).           */
  /* Timeout implemented to not be stuck if ADC cannot be enabled (possible   */
  /* causes: ADC clock not running, ...).                                     */
  if (ADC_IS_ENABLE(hadc) == RESET)
 8002adc:	2103      	movs	r1, #3
  __IO uint32_t wait_loop_index = 0U;
 8002ade:	9301      	str	r3, [sp, #4]
  if (ADC_IS_ENABLE(hadc) == RESET)
 8002ae0:	6803      	ldr	r3, [r0, #0]
{
 8002ae2:	0004      	movs	r4, r0
  if (ADC_IS_ENABLE(hadc) == RESET)
 8002ae4:	689a      	ldr	r2, [r3, #8]
 8002ae6:	400a      	ands	r2, r1
 8002ae8:	2a01      	cmp	r2, #1
 8002aea:	d107      	bne.n	8002afc <ADC_Enable+0x24>
 8002aec:	6819      	ldr	r1, [r3, #0]
 8002aee:	4211      	tst	r1, r2
 8002af0:	d001      	beq.n	8002af6 <ADC_Enable+0x1e>
    }   
    
  }
   
  /* Return HAL status */
  return HAL_OK;
 8002af2:	2000      	movs	r0, #0
}
 8002af4:	bd76      	pop	{r1, r2, r4, r5, r6, pc}
  if (ADC_IS_ENABLE(hadc) == RESET)
 8002af6:	68da      	ldr	r2, [r3, #12]
 8002af8:	0412      	lsls	r2, r2, #16
 8002afa:	d4fa      	bmi.n	8002af2 <ADC_Enable+0x1a>
    if (ADC_ENABLING_CONDITIONS(hadc) == RESET)
 8002afc:	6899      	ldr	r1, [r3, #8]
 8002afe:	4a19      	ldr	r2, [pc, #100]	; (8002b64 <ADC_Enable+0x8c>)
 8002b00:	4211      	tst	r1, r2
 8002b02:	d008      	beq.n	8002b16 <ADC_Enable+0x3e>
      SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
 8002b04:	2310      	movs	r3, #16
      SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
 8002b06:	2001      	movs	r0, #1
      SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
 8002b08:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8002b0a:	4313      	orrs	r3, r2
 8002b0c:	63a3      	str	r3, [r4, #56]	; 0x38
      SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
 8002b0e:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8002b10:	4303      	orrs	r3, r0
 8002b12:	63e3      	str	r3, [r4, #60]	; 0x3c
      return HAL_ERROR;
 8002b14:	e7ee      	b.n	8002af4 <ADC_Enable+0x1c>
    __HAL_ADC_ENABLE(hadc);
 8002b16:	2201      	movs	r2, #1
 8002b18:	6899      	ldr	r1, [r3, #8]
 8002b1a:	430a      	orrs	r2, r1
 8002b1c:	609a      	str	r2, [r3, #8]
    wait_loop_index = (ADC_STAB_DELAY_US * (SystemCoreClock / 1000000U));
 8002b1e:	4b12      	ldr	r3, [pc, #72]	; (8002b68 <ADC_Enable+0x90>)
 8002b20:	4912      	ldr	r1, [pc, #72]	; (8002b6c <ADC_Enable+0x94>)
 8002b22:	6818      	ldr	r0, [r3, #0]
 8002b24:	f7fd fb02 	bl	800012c <__udivsi3>
 8002b28:	9001      	str	r0, [sp, #4]
    while(wait_loop_index != 0U)
 8002b2a:	9b01      	ldr	r3, [sp, #4]
 8002b2c:	2b00      	cmp	r3, #0
 8002b2e:	d115      	bne.n	8002b5c <ADC_Enable+0x84>
    tickstart = HAL_GetTick();
 8002b30:	f7ff ffba 	bl	8002aa8 <HAL_GetTick>
    while(__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_RDY) == RESET)
 8002b34:	2501      	movs	r5, #1
    tickstart = HAL_GetTick();
 8002b36:	0006      	movs	r6, r0
    while(__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_RDY) == RESET)
 8002b38:	6823      	ldr	r3, [r4, #0]
 8002b3a:	681b      	ldr	r3, [r3, #0]
 8002b3c:	422b      	tst	r3, r5
 8002b3e:	d1d8      	bne.n	8002af2 <ADC_Enable+0x1a>
      if((HAL_GetTick() - tickstart) > ADC_ENABLE_TIMEOUT)
 8002b40:	f7ff ffb2 	bl	8002aa8 <HAL_GetTick>
 8002b44:	1b80      	subs	r0, r0, r6
 8002b46:	2802      	cmp	r0, #2
 8002b48:	d9f6      	bls.n	8002b38 <ADC_Enable+0x60>
        SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
 8002b4a:	2310      	movs	r3, #16
 8002b4c:	6ba2      	ldr	r2, [r4, #56]	; 0x38
        return HAL_ERROR;
 8002b4e:	2001      	movs	r0, #1
        SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
 8002b50:	4313      	orrs	r3, r2
 8002b52:	63a3      	str	r3, [r4, #56]	; 0x38
        SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
 8002b54:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8002b56:	432b      	orrs	r3, r5
 8002b58:	63e3      	str	r3, [r4, #60]	; 0x3c
        return HAL_ERROR;
 8002b5a:	e7cb      	b.n	8002af4 <ADC_Enable+0x1c>
      wait_loop_index--;
 8002b5c:	9b01      	ldr	r3, [sp, #4]
 8002b5e:	3b01      	subs	r3, #1
 8002b60:	9301      	str	r3, [sp, #4]
 8002b62:	e7e2      	b.n	8002b2a <ADC_Enable+0x52>
 8002b64:	80000017 	.word	0x80000017
 8002b68:	20000000 	.word	0x20000000
 8002b6c:	000f4240 	.word	0x000f4240

08002b70 <HAL_ADC_Init>:
{
 8002b70:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002b72:	0004      	movs	r4, r0
    return HAL_ERROR;
 8002b74:	2001      	movs	r0, #1
  if(hadc == NULL)
 8002b76:	2c00      	cmp	r4, #0
 8002b78:	d07e      	beq.n	8002c78 <HAL_ADC_Init+0x108>
  if (hadc->State == HAL_ADC_STATE_RESET)
 8002b7a:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8002b7c:	2b00      	cmp	r3, #0
 8002b7e:	d106      	bne.n	8002b8e <HAL_ADC_Init+0x1e>
    hadc->Lock = HAL_UNLOCKED;
 8002b80:	0022      	movs	r2, r4
 8002b82:	3234      	adds	r2, #52	; 0x34
    ADC_CLEAR_ERRORCODE(hadc);
 8002b84:	63e3      	str	r3, [r4, #60]	; 0x3c
    HAL_ADC_MspInit(hadc);
 8002b86:	0020      	movs	r0, r4
    hadc->Lock = HAL_UNLOCKED;
 8002b88:	7013      	strb	r3, [r2, #0]
    HAL_ADC_MspInit(hadc);
 8002b8a:	f7ff fd19 	bl	80025c0 <HAL_ADC_MspInit>
  if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL) &&
 8002b8e:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8002b90:	06db      	lsls	r3, r3, #27
 8002b92:	d500      	bpl.n	8002b96 <HAL_ADC_Init+0x26>
 8002b94:	e085      	b.n	8002ca2 <HAL_ADC_Init+0x132>
      (ADC_IS_CONVERSION_ONGOING_REGULAR(hadc) == RESET)          )
 8002b96:	2204      	movs	r2, #4
 8002b98:	6823      	ldr	r3, [r4, #0]
 8002b9a:	6898      	ldr	r0, [r3, #8]
 8002b9c:	4010      	ands	r0, r2
      (tmp_hal_status == HAL_OK)                                &&
 8002b9e:	d000      	beq.n	8002ba2 <HAL_ADC_Init+0x32>
 8002ba0:	e07f      	b.n	8002ca2 <HAL_ADC_Init+0x132>
    ADC_STATE_CLR_SET(hadc->State,
 8002ba2:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8002ba4:	4942      	ldr	r1, [pc, #264]	; (8002cb0 <HAL_ADC_Init+0x140>)
 8002ba6:	4011      	ands	r1, r2
 8002ba8:	2202      	movs	r2, #2
 8002baa:	430a      	orrs	r2, r1
    if (ADC_IS_ENABLE(hadc) == RESET)
 8002bac:	2103      	movs	r1, #3
    ADC_STATE_CLR_SET(hadc->State,
 8002bae:	63a2      	str	r2, [r4, #56]	; 0x38
    if (ADC_IS_ENABLE(hadc) == RESET)
 8002bb0:	689a      	ldr	r2, [r3, #8]
 8002bb2:	400a      	ands	r2, r1
 8002bb4:	2a01      	cmp	r2, #1
 8002bb6:	d105      	bne.n	8002bc4 <HAL_ADC_Init+0x54>
 8002bb8:	6819      	ldr	r1, [r3, #0]
 8002bba:	4211      	tst	r1, r2
 8002bbc:	d10e      	bne.n	8002bdc <HAL_ADC_Init+0x6c>
 8002bbe:	68da      	ldr	r2, [r3, #12]
 8002bc0:	0412      	lsls	r2, r2, #16
 8002bc2:	d40b      	bmi.n	8002bdc <HAL_ADC_Init+0x6c>
      MODIFY_REG(hadc->Instance->CFGR1,
 8002bc4:	2118      	movs	r1, #24
 8002bc6:	68da      	ldr	r2, [r3, #12]
 8002bc8:	438a      	bics	r2, r1
 8002bca:	68a1      	ldr	r1, [r4, #8]
 8002bcc:	430a      	orrs	r2, r1
 8002bce:	60da      	str	r2, [r3, #12]
      MODIFY_REG(hadc->Instance->CFGR2    ,
 8002bd0:	6919      	ldr	r1, [r3, #16]
 8002bd2:	6862      	ldr	r2, [r4, #4]
 8002bd4:	0089      	lsls	r1, r1, #2
 8002bd6:	0889      	lsrs	r1, r1, #2
 8002bd8:	4311      	orrs	r1, r2
 8002bda:	6119      	str	r1, [r3, #16]
    hadc->Instance->CFGR1 &= ~( ADC_CFGR1_DISCEN  |
 8002bdc:	68da      	ldr	r2, [r3, #12]
 8002bde:	4935      	ldr	r1, [pc, #212]	; (8002cb4 <HAL_ADC_Init+0x144>)
 8002be0:	400a      	ands	r2, r1
 8002be2:	60da      	str	r2, [r3, #12]
    tmpCFGR1 |= (ADC_CFGR1_AUTOWAIT((uint32_t)hadc->Init.LowPowerAutoWait)        |
 8002be4:	7e25      	ldrb	r5, [r4, #24]
                 ADC_CFGR1_AUTOOFF((uint32_t)hadc->Init.LowPowerAutoPowerOff)     |
 8002be6:	7e62      	ldrb	r2, [r4, #25]
    tmpCFGR1 |= (ADC_CFGR1_AUTOWAIT((uint32_t)hadc->Init.LowPowerAutoWait)        |
 8002be8:	03ad      	lsls	r5, r5, #14
                 ADC_CFGR1_AUTOOFF((uint32_t)hadc->Init.LowPowerAutoPowerOff)     |
 8002bea:	03d2      	lsls	r2, r2, #15
    tmpCFGR1 |= (ADC_CFGR1_AUTOWAIT((uint32_t)hadc->Init.LowPowerAutoWait)        |
 8002bec:	4315      	orrs	r5, r2
                 ADC_CFGR1_OVERRUN(hadc->Init.Overrun)                            |
 8002bee:	6aa2      	ldr	r2, [r4, #40]	; 0x28
                 ADC_CFGR1_CONTINUOUS((uint32_t)hadc->Init.ContinuousConvMode)    |
 8002bf0:	7ea1      	ldrb	r1, [r4, #26]
                 ADC_CFGR1_OVERRUN(hadc->Init.Overrun)                            |
 8002bf2:	3a01      	subs	r2, #1
 8002bf4:	1e56      	subs	r6, r2, #1
 8002bf6:	41b2      	sbcs	r2, r6
 8002bf8:	0316      	lsls	r6, r2, #12
 8002bfa:	68e2      	ldr	r2, [r4, #12]
                 ADC_CFGR1_CONTINUOUS((uint32_t)hadc->Init.ContinuousConvMode)    |
 8002bfc:	034f      	lsls	r7, r1, #13
 8002bfe:	4315      	orrs	r5, r2
                 ADC_SCANDIR(hadc->Init.ScanConvMode)                             |
 8002c00:	6922      	ldr	r2, [r4, #16]
 8002c02:	432f      	orrs	r7, r5
 8002c04:	2a02      	cmp	r2, #2
 8002c06:	d100      	bne.n	8002c0a <HAL_ADC_Init+0x9a>
 8002c08:	2004      	movs	r0, #4
                 ADC_CFGR1_DMACONTREQ((uint32_t)hadc->Init.DMAContinuousRequests)  );
 8002c0a:	1d62      	adds	r2, r4, #5
 8002c0c:	7fd2      	ldrb	r2, [r2, #31]
 8002c0e:	0052      	lsls	r2, r2, #1
                 ADC_SCANDIR(hadc->Init.ScanConvMode)                             |
 8002c10:	433a      	orrs	r2, r7
 8002c12:	4332      	orrs	r2, r6
 8002c14:	4302      	orrs	r2, r0
    if (hadc->Init.DiscontinuousConvMode == ENABLE)
 8002c16:	7ee0      	ldrb	r0, [r4, #27]
 8002c18:	2801      	cmp	r0, #1
 8002c1a:	d104      	bne.n	8002c26 <HAL_ADC_Init+0xb6>
      if (hadc->Init.ContinuousConvMode == DISABLE)
 8002c1c:	2900      	cmp	r1, #0
 8002c1e:	d12c      	bne.n	8002c7a <HAL_ADC_Init+0x10a>
        tmpCFGR1 |= ADC_CFGR1_DISCEN;
 8002c20:	2180      	movs	r1, #128	; 0x80
 8002c22:	0249      	lsls	r1, r1, #9
 8002c24:	430a      	orrs	r2, r1
    if (hadc->Init.ExternalTrigConv != ADC_SOFTWARE_START)
 8002c26:	20c2      	movs	r0, #194	; 0xc2
 8002c28:	69e1      	ldr	r1, [r4, #28]
 8002c2a:	30ff      	adds	r0, #255	; 0xff
 8002c2c:	4281      	cmp	r1, r0
 8002c2e:	d002      	beq.n	8002c36 <HAL_ADC_Init+0xc6>
      tmpCFGR1 |= ( hadc->Init.ExternalTrigConv    |
 8002c30:	6a20      	ldr	r0, [r4, #32]
 8002c32:	4301      	orrs	r1, r0
 8002c34:	430a      	orrs	r2, r1
    if (IS_ADC_SAMPLE_TIME(hadc->Init.SamplingTimeCommon))
 8002c36:	2080      	movs	r0, #128	; 0x80
    hadc->Instance->CFGR1 |= tmpCFGR1;
 8002c38:	68d9      	ldr	r1, [r3, #12]
    if (IS_ADC_SAMPLE_TIME(hadc->Init.SamplingTimeCommon))
 8002c3a:	0540      	lsls	r0, r0, #21
    hadc->Instance->CFGR1 |= tmpCFGR1;
 8002c3c:	4311      	orrs	r1, r2
 8002c3e:	60d9      	str	r1, [r3, #12]
    if (IS_ADC_SAMPLE_TIME(hadc->Init.SamplingTimeCommon))
 8002c40:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 8002c42:	4281      	cmp	r1, r0
 8002c44:	d002      	beq.n	8002c4c <HAL_ADC_Init+0xdc>
 8002c46:	1e48      	subs	r0, r1, #1
 8002c48:	2806      	cmp	r0, #6
 8002c4a:	d807      	bhi.n	8002c5c <HAL_ADC_Init+0xec>
      hadc->Instance->SMPR &= ~(ADC_SMPR_SMP);
 8002c4c:	2507      	movs	r5, #7
 8002c4e:	6958      	ldr	r0, [r3, #20]
      hadc->Instance->SMPR |= ADC_SMPR_SET(hadc->Init.SamplingTimeCommon);
 8002c50:	4029      	ands	r1, r5
      hadc->Instance->SMPR &= ~(ADC_SMPR_SMP);
 8002c52:	43a8      	bics	r0, r5
 8002c54:	6158      	str	r0, [r3, #20]
      hadc->Instance->SMPR |= ADC_SMPR_SET(hadc->Init.SamplingTimeCommon);
 8002c56:	6958      	ldr	r0, [r3, #20]
 8002c58:	4301      	orrs	r1, r0
 8002c5a:	6159      	str	r1, [r3, #20]
    if ((hadc->Instance->CFGR1 & ~(ADC_CFGR1_AWDCH | ADC_CFGR1_AWDEN | ADC_CFGR1_AWDSGL | ADC_CFGR1_RES))
 8002c5c:	68db      	ldr	r3, [r3, #12]
 8002c5e:	4916      	ldr	r1, [pc, #88]	; (8002cb8 <HAL_ADC_Init+0x148>)
 8002c60:	400b      	ands	r3, r1
 8002c62:	4293      	cmp	r3, r2
 8002c64:	d111      	bne.n	8002c8a <HAL_ADC_Init+0x11a>
      ADC_CLEAR_ERRORCODE(hadc);
 8002c66:	2000      	movs	r0, #0
      ADC_STATE_CLR_SET(hadc->State,
 8002c68:	2203      	movs	r2, #3
      ADC_CLEAR_ERRORCODE(hadc);
 8002c6a:	63e0      	str	r0, [r4, #60]	; 0x3c
      ADC_STATE_CLR_SET(hadc->State,
 8002c6c:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8002c6e:	4393      	bics	r3, r2
 8002c70:	001a      	movs	r2, r3
 8002c72:	2301      	movs	r3, #1
 8002c74:	4313      	orrs	r3, r2
 8002c76:	63a3      	str	r3, [r4, #56]	; 0x38
}
 8002c78:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 8002c7a:	2120      	movs	r1, #32
 8002c7c:	6ba5      	ldr	r5, [r4, #56]	; 0x38
 8002c7e:	4329      	orrs	r1, r5
 8002c80:	63a1      	str	r1, [r4, #56]	; 0x38
        SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
 8002c82:	6be1      	ldr	r1, [r4, #60]	; 0x3c
 8002c84:	4308      	orrs	r0, r1
 8002c86:	63e0      	str	r0, [r4, #60]	; 0x3c
 8002c88:	e7cd      	b.n	8002c26 <HAL_ADC_Init+0xb6>
      ADC_STATE_CLR_SET(hadc->State,
 8002c8a:	2212      	movs	r2, #18
 8002c8c:	6ba3      	ldr	r3, [r4, #56]	; 0x38
      SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
 8002c8e:	2001      	movs	r0, #1
      ADC_STATE_CLR_SET(hadc->State,
 8002c90:	4393      	bics	r3, r2
 8002c92:	001a      	movs	r2, r3
 8002c94:	2310      	movs	r3, #16
 8002c96:	4313      	orrs	r3, r2
 8002c98:	63a3      	str	r3, [r4, #56]	; 0x38
      SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
 8002c9a:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8002c9c:	4303      	orrs	r3, r0
 8002c9e:	63e3      	str	r3, [r4, #60]	; 0x3c
 8002ca0:	e7ea      	b.n	8002c78 <HAL_ADC_Init+0x108>
    SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
 8002ca2:	2310      	movs	r3, #16
 8002ca4:	6ba2      	ldr	r2, [r4, #56]	; 0x38
    tmp_hal_status = HAL_ERROR;
 8002ca6:	2001      	movs	r0, #1
    SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
 8002ca8:	4313      	orrs	r3, r2
 8002caa:	63a3      	str	r3, [r4, #56]	; 0x38
 8002cac:	e7e4      	b.n	8002c78 <HAL_ADC_Init+0x108>
 8002cae:	46c0      	nop			; (mov r8, r8)
 8002cb0:	fffffefd 	.word	0xfffffefd
 8002cb4:	fffe0219 	.word	0xfffe0219
 8002cb8:	833fffe7 	.word	0x833fffe7

08002cbc <HAL_ADC_Start_DMA>:
{
 8002cbc:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
  if (ADC_IS_CONVERSION_ONGOING_REGULAR(hadc) == RESET)
 8002cbe:	6803      	ldr	r3, [r0, #0]
{
 8002cc0:	0004      	movs	r4, r0
  if (ADC_IS_CONVERSION_ONGOING_REGULAR(hadc) == RESET)
 8002cc2:	689b      	ldr	r3, [r3, #8]
{
 8002cc4:	000f      	movs	r7, r1
 8002cc6:	9201      	str	r2, [sp, #4]
    tmp_hal_status = HAL_BUSY;
 8002cc8:	2002      	movs	r0, #2
  if (ADC_IS_CONVERSION_ONGOING_REGULAR(hadc) == RESET)
 8002cca:	075b      	lsls	r3, r3, #29
 8002ccc:	d430      	bmi.n	8002d30 <HAL_ADC_Start_DMA+0x74>
    __HAL_LOCK(hadc);
 8002cce:	0026      	movs	r6, r4
 8002cd0:	3634      	adds	r6, #52	; 0x34
 8002cd2:	7833      	ldrb	r3, [r6, #0]
 8002cd4:	2b01      	cmp	r3, #1
 8002cd6:	d02b      	beq.n	8002d30 <HAL_ADC_Start_DMA+0x74>
 8002cd8:	2301      	movs	r3, #1
 8002cda:	7033      	strb	r3, [r6, #0]
    if (hadc->Init.LowPowerAutoPowerOff != ENABLE)
 8002cdc:	7e63      	ldrb	r3, [r4, #25]
 8002cde:	2b01      	cmp	r3, #1
 8002ce0:	d127      	bne.n	8002d32 <HAL_ADC_Start_DMA+0x76>
      ADC_STATE_CLR_SET(hadc->State,
 8002ce2:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8002ce4:	4a16      	ldr	r2, [pc, #88]	; (8002d40 <HAL_ADC_Start_DMA+0x84>)
      ADC_CLEAR_ERRORCODE(hadc);
 8002ce6:	2500      	movs	r5, #0
      ADC_STATE_CLR_SET(hadc->State,
 8002ce8:	401a      	ands	r2, r3
 8002cea:	2380      	movs	r3, #128	; 0x80
 8002cec:	005b      	lsls	r3, r3, #1
 8002cee:	4313      	orrs	r3, r2
 8002cf0:	63a3      	str	r3, [r4, #56]	; 0x38
      hadc->DMA_Handle->XferCpltCallback = ADC_DMAConvCplt;
 8002cf2:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8002cf4:	4b13      	ldr	r3, [pc, #76]	; (8002d44 <HAL_ADC_Start_DMA+0x88>)
      ADC_CLEAR_ERRORCODE(hadc);
 8002cf6:	63e5      	str	r5, [r4, #60]	; 0x3c
      __HAL_UNLOCK(hadc);
 8002cf8:	7035      	strb	r5, [r6, #0]
      hadc->DMA_Handle->XferCpltCallback = ADC_DMAConvCplt;
 8002cfa:	6283      	str	r3, [r0, #40]	; 0x28
      hadc->DMA_Handle->XferHalfCpltCallback = ADC_DMAHalfConvCplt;
 8002cfc:	4b12      	ldr	r3, [pc, #72]	; (8002d48 <HAL_ADC_Start_DMA+0x8c>)
      __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_EOC | ADC_FLAG_EOS | ADC_FLAG_OVR));
 8002cfe:	6821      	ldr	r1, [r4, #0]
      hadc->DMA_Handle->XferHalfCpltCallback = ADC_DMAHalfConvCplt;
 8002d00:	62c3      	str	r3, [r0, #44]	; 0x2c
      hadc->DMA_Handle->XferErrorCallback = ADC_DMAError;
 8002d02:	4b12      	ldr	r3, [pc, #72]	; (8002d4c <HAL_ADC_Start_DMA+0x90>)
 8002d04:	6303      	str	r3, [r0, #48]	; 0x30
      __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_EOC | ADC_FLAG_EOS | ADC_FLAG_OVR));
 8002d06:	231c      	movs	r3, #28
 8002d08:	600b      	str	r3, [r1, #0]
      __HAL_ADC_ENABLE_IT(hadc, ADC_IT_OVR);
 8002d0a:	684a      	ldr	r2, [r1, #4]
 8002d0c:	3b0c      	subs	r3, #12
 8002d0e:	4313      	orrs	r3, r2
 8002d10:	604b      	str	r3, [r1, #4]
      hadc->Instance->CFGR1 |= ADC_CFGR1_DMAEN;
 8002d12:	2301      	movs	r3, #1
 8002d14:	68ca      	ldr	r2, [r1, #12]
 8002d16:	4313      	orrs	r3, r2
 8002d18:	60cb      	str	r3, [r1, #12]
      HAL_DMA_Start_IT(hadc->DMA_Handle, (uint32_t)&hadc->Instance->DR, (uint32_t)pData, Length);
 8002d1a:	003a      	movs	r2, r7
 8002d1c:	3140      	adds	r1, #64	; 0x40
 8002d1e:	9b01      	ldr	r3, [sp, #4]
 8002d20:	f000 f9b8 	bl	8003094 <HAL_DMA_Start_IT>
      hadc->Instance->CR |= ADC_CR_ADSTART;
 8002d24:	2304      	movs	r3, #4
 8002d26:	0028      	movs	r0, r5
 8002d28:	6822      	ldr	r2, [r4, #0]
 8002d2a:	6891      	ldr	r1, [r2, #8]
 8002d2c:	430b      	orrs	r3, r1
 8002d2e:	6093      	str	r3, [r2, #8]
}
 8002d30:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
      tmp_hal_status = ADC_Enable(hadc);
 8002d32:	0020      	movs	r0, r4
 8002d34:	f7ff fed0 	bl	8002ad8 <ADC_Enable>
    if (tmp_hal_status == HAL_OK)
 8002d38:	2800      	cmp	r0, #0
 8002d3a:	d0d2      	beq.n	8002ce2 <HAL_ADC_Start_DMA+0x26>
 8002d3c:	e7f8      	b.n	8002d30 <HAL_ADC_Start_DMA+0x74>
 8002d3e:	46c0      	nop			; (mov r8, r8)
 8002d40:	fffff0fe 	.word	0xfffff0fe
 8002d44:	08002d51 	.word	0x08002d51
 8002d48:	08002dc3 	.word	0x08002dc3
 8002d4c:	08002dcf 	.word	0x08002dcf

08002d50 <ADC_DMAConvCplt>:
{
  /* Retrieve ADC handle corresponding to current DMA handle */
  ADC_HandleTypeDef* hadc = ( ADC_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
  
  /* Update state machine on conversion status if not in error state */
  if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL | HAL_ADC_STATE_ERROR_DMA))
 8002d50:	2250      	movs	r2, #80	; 0x50
  ADC_HandleTypeDef* hadc = ( ADC_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 8002d52:	6a43      	ldr	r3, [r0, #36]	; 0x24
{
 8002d54:	b510      	push	{r4, lr}
  if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL | HAL_ADC_STATE_ERROR_DMA))
 8002d56:	6b99      	ldr	r1, [r3, #56]	; 0x38
 8002d58:	4211      	tst	r1, r2
 8002d5a:	d12a      	bne.n	8002db2 <ADC_DMAConvCplt+0x62>
  {
    /* Set ADC state */
    SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOC); 
 8002d5c:	6b99      	ldr	r1, [r3, #56]	; 0x38
 8002d5e:	32b1      	adds	r2, #177	; 0xb1
 8002d60:	32ff      	adds	r2, #255	; 0xff
 8002d62:	430a      	orrs	r2, r1
    
    /* Determine whether any further conversion upcoming on group regular     */
    /* by external trigger, continuous mode or scan sequence on going.        */
    if(ADC_IS_SOFTWARE_START_REGULAR(hadc)        && 
 8002d64:	21c0      	movs	r1, #192	; 0xc0
    SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOC); 
 8002d66:	639a      	str	r2, [r3, #56]	; 0x38
    if(ADC_IS_SOFTWARE_START_REGULAR(hadc)        && 
 8002d68:	681a      	ldr	r2, [r3, #0]
 8002d6a:	0109      	lsls	r1, r1, #4
 8002d6c:	68d0      	ldr	r0, [r2, #12]
 8002d6e:	4208      	tst	r0, r1
 8002d70:	d112      	bne.n	8002d98 <ADC_DMAConvCplt+0x48>
 8002d72:	7e99      	ldrb	r1, [r3, #26]
 8002d74:	2900      	cmp	r1, #0
 8002d76:	d10f      	bne.n	8002d98 <ADC_DMAConvCplt+0x48>
       (hadc->Init.ContinuousConvMode == DISABLE)   )
    {
      /* If End of Sequence is reached, disable interrupts */
      if( __HAL_ADC_GET_FLAG(hadc, ADC_FLAG_EOS) )
 8002d78:	6811      	ldr	r1, [r2, #0]
 8002d7a:	0709      	lsls	r1, r1, #28
 8002d7c:	d50c      	bpl.n	8002d98 <ADC_DMAConvCplt+0x48>
      {
        /* Allowed to modify bits ADC_IT_EOC/ADC_IT_EOS only if bit           */
        /* ADSTART==0 (no conversion on going)                                */
        if (ADC_IS_CONVERSION_ONGOING_REGULAR(hadc) == RESET)
 8002d7e:	6891      	ldr	r1, [r2, #8]
 8002d80:	0749      	lsls	r1, r1, #29
 8002d82:	d40d      	bmi.n	8002da0 <ADC_DMAConvCplt+0x50>
        {
          /* Disable ADC end of single conversion interrupt on group regular */
          /* Note: Overrun interrupt was enabled with EOC interrupt in        */
          /* HAL_Start_IT(), but is not disabled here because can be used     */
          /* by overrun IRQ process below.                                    */
          __HAL_ADC_DISABLE_IT(hadc, ADC_IT_EOC | ADC_IT_EOS);
 8002d84:	200c      	movs	r0, #12
 8002d86:	6851      	ldr	r1, [r2, #4]
 8002d88:	4381      	bics	r1, r0
 8002d8a:	6051      	str	r1, [r2, #4]
          
          /* Set ADC state */
          ADC_STATE_CLR_SET(hadc->State,
 8002d8c:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8002d8e:	490b      	ldr	r1, [pc, #44]	; (8002dbc <ADC_DMAConvCplt+0x6c>)
 8002d90:	4011      	ands	r1, r2
 8002d92:	2201      	movs	r2, #1
 8002d94:	430a      	orrs	r2, r1
 8002d96:	639a      	str	r2, [r3, #56]	; 0x38

    /* Conversion complete callback */
#if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
    hadc->ConvCpltCallback(hadc);
#else
    HAL_ADC_ConvCpltCallback(hadc);
 8002d98:	0018      	movs	r0, r3
 8002d9a:	f7ff fbcb 	bl	8002534 <HAL_ADC_ConvCpltCallback>
  {
    /* Call DMA error callback */
    hadc->DMA_Handle->XferErrorCallback(hdma);
  }

}
 8002d9e:	bd10      	pop	{r4, pc}
          SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 8002da0:	2220      	movs	r2, #32
 8002da2:	6b99      	ldr	r1, [r3, #56]	; 0x38
 8002da4:	430a      	orrs	r2, r1
 8002da6:	639a      	str	r2, [r3, #56]	; 0x38
          SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
 8002da8:	2201      	movs	r2, #1
 8002daa:	6bd9      	ldr	r1, [r3, #60]	; 0x3c
 8002dac:	430a      	orrs	r2, r1
 8002dae:	63da      	str	r2, [r3, #60]	; 0x3c
 8002db0:	e7f2      	b.n	8002d98 <ADC_DMAConvCplt+0x48>
    hadc->DMA_Handle->XferErrorCallback(hdma);
 8002db2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002db4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002db6:	4798      	blx	r3
}
 8002db8:	e7f1      	b.n	8002d9e <ADC_DMAConvCplt+0x4e>
 8002dba:	46c0      	nop			; (mov r8, r8)
 8002dbc:	fffffefe 	.word	0xfffffefe

08002dc0 <HAL_ADC_ConvHalfCpltCallback>:
 8002dc0:	4770      	bx	lr

08002dc2 <ADC_DMAHalfConvCplt>:
  * @brief  DMA half transfer complete callback. 
  * @param  hdma pointer to DMA handle.
  * @retval None
  */
static void ADC_DMAHalfConvCplt(DMA_HandleTypeDef *hdma)   
{
 8002dc2:	b510      	push	{r4, lr}
  
  /* Half conversion callback */
#if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
    hadc->ConvHalfCpltCallback(hadc);
#else
  HAL_ADC_ConvHalfCpltCallback(hadc); 
 8002dc4:	6a40      	ldr	r0, [r0, #36]	; 0x24
 8002dc6:	f7ff fffb 	bl	8002dc0 <HAL_ADC_ConvHalfCpltCallback>
#endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
}
 8002dca:	bd10      	pop	{r4, pc}

08002dcc <HAL_ADC_ErrorCallback>:
 8002dcc:	4770      	bx	lr

08002dce <ADC_DMAError>:
{
  /* Retrieve ADC handle corresponding to current DMA handle */
  ADC_HandleTypeDef* hadc = ( ADC_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
  
  /* Set ADC state */
  SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_DMA);
 8002dce:	2340      	movs	r3, #64	; 0x40
  ADC_HandleTypeDef* hadc = ( ADC_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 8002dd0:	6a40      	ldr	r0, [r0, #36]	; 0x24
{
 8002dd2:	b510      	push	{r4, lr}
  SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_DMA);
 8002dd4:	6b82      	ldr	r2, [r0, #56]	; 0x38
 8002dd6:	4313      	orrs	r3, r2
 8002dd8:	6383      	str	r3, [r0, #56]	; 0x38
  
  /* Set ADC error code to DMA error */
  SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_DMA);
 8002dda:	2304      	movs	r3, #4
 8002ddc:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
 8002dde:	4313      	orrs	r3, r2
 8002de0:	63c3      	str	r3, [r0, #60]	; 0x3c
  
  /* Error callback */
#if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
  hadc->ErrorCallback(hadc);
#else
  HAL_ADC_ErrorCallback(hadc); 
 8002de2:	f7ff fff3 	bl	8002dcc <HAL_ADC_ErrorCallback>
#endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
}
 8002de6:	bd10      	pop	{r4, pc}

08002de8 <HAL_ADC_ConfigChannel>:
{
 8002de8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
  __IO uint32_t wait_loop_index = 0U;
 8002dea:	2200      	movs	r2, #0
  __HAL_LOCK(hadc);
 8002dec:	0004      	movs	r4, r0
  __IO uint32_t wait_loop_index = 0U;
 8002dee:	9201      	str	r2, [sp, #4]
  __HAL_LOCK(hadc);
 8002df0:	3434      	adds	r4, #52	; 0x34
 8002df2:	7822      	ldrb	r2, [r4, #0]
{
 8002df4:	0003      	movs	r3, r0
  __HAL_LOCK(hadc);
 8002df6:	2002      	movs	r0, #2
 8002df8:	2a01      	cmp	r2, #1
 8002dfa:	d02b      	beq.n	8002e54 <HAL_ADC_ConfigChannel+0x6c>
 8002dfc:	2201      	movs	r2, #1
  if (ADC_IS_CONVERSION_ONGOING_REGULAR(hadc) == RESET)
 8002dfe:	681d      	ldr	r5, [r3, #0]
  if (! IS_ADC_SAMPLE_TIME(hadc->Init.SamplingTimeCommon))
 8002e00:	6ade      	ldr	r6, [r3, #44]	; 0x2c
  if (ADC_IS_CONVERSION_ONGOING_REGULAR(hadc) == RESET)
 8002e02:	68a8      	ldr	r0, [r5, #8]
  __HAL_LOCK(hadc);
 8002e04:	7022      	strb	r2, [r4, #0]
  if (ADC_IS_CONVERSION_ONGOING_REGULAR(hadc) == RESET)
 8002e06:	0740      	lsls	r0, r0, #29
 8002e08:	d45a      	bmi.n	8002ec0 <HAL_ADC_ConfigChannel+0xd8>
 8002e0a:	680b      	ldr	r3, [r1, #0]
    if (sConfig->Rank != ADC_RANK_NONE)
 8002e0c:	482f      	ldr	r0, [pc, #188]	; (8002ecc <HAL_ADC_ConfigChannel+0xe4>)
 8002e0e:	001f      	movs	r7, r3
 8002e10:	4684      	mov	ip, r0
 8002e12:	6848      	ldr	r0, [r1, #4]
 8002e14:	409a      	lsls	r2, r3
 8002e16:	3f10      	subs	r7, #16
 8002e18:	4560      	cmp	r0, ip
 8002e1a:	d03b      	beq.n	8002e94 <HAL_ADC_ConfigChannel+0xac>
      hadc->Instance->CHSELR |= ADC_CHSELR_CHANNEL(sConfig->Channel);
 8002e1c:	6aa8      	ldr	r0, [r5, #40]	; 0x28
 8002e1e:	4310      	orrs	r0, r2
      if (! IS_ADC_SAMPLE_TIME(hadc->Init.SamplingTimeCommon))
 8002e20:	2280      	movs	r2, #128	; 0x80
      hadc->Instance->CHSELR |= ADC_CHSELR_CHANNEL(sConfig->Channel);
 8002e22:	62a8      	str	r0, [r5, #40]	; 0x28
      if (! IS_ADC_SAMPLE_TIME(hadc->Init.SamplingTimeCommon))
 8002e24:	0552      	lsls	r2, r2, #21
 8002e26:	4296      	cmp	r6, r2
 8002e28:	d00f      	beq.n	8002e4a <HAL_ADC_ConfigChannel+0x62>
 8002e2a:	3e01      	subs	r6, #1
 8002e2c:	2e06      	cmp	r6, #6
 8002e2e:	d90c      	bls.n	8002e4a <HAL_ADC_ConfigChannel+0x62>
        if (sConfig->SamplingTime != ADC_GET_SAMPLINGTIME(hadc))
 8002e30:	688a      	ldr	r2, [r1, #8]
 8002e32:	2107      	movs	r1, #7
 8002e34:	6968      	ldr	r0, [r5, #20]
 8002e36:	4008      	ands	r0, r1
 8002e38:	4282      	cmp	r2, r0
 8002e3a:	d006      	beq.n	8002e4a <HAL_ADC_ConfigChannel+0x62>
          hadc->Instance->SMPR &= ~(ADC_SMPR_SMP);
 8002e3c:	6968      	ldr	r0, [r5, #20]
          hadc->Instance->SMPR |= ADC_SMPR_SET(sConfig->SamplingTime);
 8002e3e:	400a      	ands	r2, r1
          hadc->Instance->SMPR &= ~(ADC_SMPR_SMP);
 8002e40:	4388      	bics	r0, r1
 8002e42:	6168      	str	r0, [r5, #20]
          hadc->Instance->SMPR |= ADC_SMPR_SET(sConfig->SamplingTime);
 8002e44:	6968      	ldr	r0, [r5, #20]
 8002e46:	4302      	orrs	r2, r0
 8002e48:	616a      	str	r2, [r5, #20]
      if(ADC_IS_CHANNEL_INTERNAL(sConfig->Channel))
 8002e4a:	2f02      	cmp	r7, #2
 8002e4c:	d903      	bls.n	8002e56 <HAL_ADC_ConfigChannel+0x6e>
  HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 8002e4e:	2000      	movs	r0, #0
  __HAL_UNLOCK(hadc);
 8002e50:	2300      	movs	r3, #0
 8002e52:	7023      	strb	r3, [r4, #0]
}
 8002e54:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
        ADC->CCR |= ADC_CHANNEL_INTERNAL_PATH(sConfig->Channel);
 8002e56:	4a1e      	ldr	r2, [pc, #120]	; (8002ed0 <HAL_ADC_ConfigChannel+0xe8>)
 8002e58:	2080      	movs	r0, #128	; 0x80
 8002e5a:	6811      	ldr	r1, [r2, #0]
 8002e5c:	2b10      	cmp	r3, #16
 8002e5e:	d015      	beq.n	8002e8c <HAL_ADC_ConfigChannel+0xa4>
 8002e60:	2b11      	cmp	r3, #17
 8002e62:	d115      	bne.n	8002e90 <HAL_ADC_ConfigChannel+0xa8>
 8002e64:	03c0      	lsls	r0, r0, #15
 8002e66:	4301      	orrs	r1, r0
 8002e68:	6011      	str	r1, [r2, #0]
        if (sConfig->Channel == ADC_CHANNEL_TEMPSENSOR)
 8002e6a:	2b10      	cmp	r3, #16
 8002e6c:	d1ef      	bne.n	8002e4e <HAL_ADC_ConfigChannel+0x66>
          wait_loop_index = (ADC_TEMPSENSOR_DELAY_US * (SystemCoreClock / 1000000U));
 8002e6e:	4b19      	ldr	r3, [pc, #100]	; (8002ed4 <HAL_ADC_ConfigChannel+0xec>)
 8002e70:	4919      	ldr	r1, [pc, #100]	; (8002ed8 <HAL_ADC_ConfigChannel+0xf0>)
 8002e72:	6818      	ldr	r0, [r3, #0]
 8002e74:	f7fd f95a 	bl	800012c <__udivsi3>
 8002e78:	230a      	movs	r3, #10
 8002e7a:	4358      	muls	r0, r3
 8002e7c:	9001      	str	r0, [sp, #4]
          while(wait_loop_index != 0U)
 8002e7e:	9b01      	ldr	r3, [sp, #4]
 8002e80:	2b00      	cmp	r3, #0
 8002e82:	d0e4      	beq.n	8002e4e <HAL_ADC_ConfigChannel+0x66>
            wait_loop_index--;
 8002e84:	9b01      	ldr	r3, [sp, #4]
 8002e86:	3b01      	subs	r3, #1
 8002e88:	9301      	str	r3, [sp, #4]
 8002e8a:	e7f8      	b.n	8002e7e <HAL_ADC_ConfigChannel+0x96>
        ADC->CCR |= ADC_CHANNEL_INTERNAL_PATH(sConfig->Channel);
 8002e8c:	0400      	lsls	r0, r0, #16
 8002e8e:	e7ea      	b.n	8002e66 <HAL_ADC_ConfigChannel+0x7e>
 8002e90:	0440      	lsls	r0, r0, #17
 8002e92:	e7e8      	b.n	8002e66 <HAL_ADC_ConfigChannel+0x7e>
      hadc->Instance->CHSELR &= ~ADC_CHSELR_CHANNEL(sConfig->Channel);
 8002e94:	6aa9      	ldr	r1, [r5, #40]	; 0x28
 8002e96:	4391      	bics	r1, r2
 8002e98:	62a9      	str	r1, [r5, #40]	; 0x28
      if(ADC_IS_CHANNEL_INTERNAL(sConfig->Channel))
 8002e9a:	2f02      	cmp	r7, #2
 8002e9c:	d8d7      	bhi.n	8002e4e <HAL_ADC_ConfigChannel+0x66>
        ADC->CCR &= ~ADC_CHANNEL_INTERNAL_PATH(sConfig->Channel);
 8002e9e:	4a0c      	ldr	r2, [pc, #48]	; (8002ed0 <HAL_ADC_ConfigChannel+0xe8>)
 8002ea0:	6811      	ldr	r1, [r2, #0]
 8002ea2:	2b10      	cmp	r3, #16
 8002ea4:	d00a      	beq.n	8002ebc <HAL_ADC_ConfigChannel+0xd4>
 8002ea6:	3b11      	subs	r3, #17
 8002ea8:	1e58      	subs	r0, r3, #1
 8002eaa:	4183      	sbcs	r3, r0
 8002eac:	480b      	ldr	r0, [pc, #44]	; (8002edc <HAL_ADC_ConfigChannel+0xf4>)
 8002eae:	425b      	negs	r3, r3
 8002eb0:	4003      	ands	r3, r0
 8002eb2:	480b      	ldr	r0, [pc, #44]	; (8002ee0 <HAL_ADC_ConfigChannel+0xf8>)
 8002eb4:	181b      	adds	r3, r3, r0
 8002eb6:	400b      	ands	r3, r1
 8002eb8:	6013      	str	r3, [r2, #0]
 8002eba:	e7c8      	b.n	8002e4e <HAL_ADC_ConfigChannel+0x66>
 8002ebc:	4b09      	ldr	r3, [pc, #36]	; (8002ee4 <HAL_ADC_ConfigChannel+0xfc>)
 8002ebe:	e7fa      	b.n	8002eb6 <HAL_ADC_ConfigChannel+0xce>
    SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 8002ec0:	2120      	movs	r1, #32
 8002ec2:	6b98      	ldr	r0, [r3, #56]	; 0x38
 8002ec4:	4301      	orrs	r1, r0
 8002ec6:	6399      	str	r1, [r3, #56]	; 0x38
    tmp_hal_status = HAL_ERROR;
 8002ec8:	0010      	movs	r0, r2
 8002eca:	e7c1      	b.n	8002e50 <HAL_ADC_ConfigChannel+0x68>
 8002ecc:	00001001 	.word	0x00001001
 8002ed0:	40012708 	.word	0x40012708
 8002ed4:	20000000 	.word	0x20000000
 8002ed8:	000f4240 	.word	0x000f4240
 8002edc:	ff400000 	.word	0xff400000
 8002ee0:	ffbfffff 	.word	0xffbfffff
 8002ee4:	ff7fffff 	.word	0xff7fffff

08002ee8 <HAL_ADCEx_Calibration_Start>:
  *         HAL_ADC_GetValue() (value on 7 bits: from DR[6;0]).
  * @param  hadc ADC handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_ADCEx_Calibration_Start(ADC_HandleTypeDef* hadc)
{
 8002ee8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  
  /* Check the parameters */
  assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));

  /* Process locked */
  __HAL_LOCK(hadc);
 8002eea:	0006      	movs	r6, r0
 8002eec:	3634      	adds	r6, #52	; 0x34
 8002eee:	7833      	ldrb	r3, [r6, #0]
{
 8002ef0:	0004      	movs	r4, r0
  __HAL_LOCK(hadc);
 8002ef2:	2002      	movs	r0, #2
 8002ef4:	2b01      	cmp	r3, #1
 8002ef6:	d042      	beq.n	8002f7e <HAL_ADCEx_Calibration_Start+0x96>
 8002ef8:	2301      	movs	r3, #1
  
  /* Calibration prerequisite: ADC must be disabled. */
  if (ADC_IS_ENABLE(hadc) == RESET)
 8002efa:	2103      	movs	r1, #3
  __HAL_LOCK(hadc);
 8002efc:	7033      	strb	r3, [r6, #0]
  if (ADC_IS_ENABLE(hadc) == RESET)
 8002efe:	6823      	ldr	r3, [r4, #0]
 8002f00:	689a      	ldr	r2, [r3, #8]
 8002f02:	400a      	ands	r2, r1
 8002f04:	2a01      	cmp	r2, #1
 8002f06:	d105      	bne.n	8002f14 <HAL_ADCEx_Calibration_Start+0x2c>
 8002f08:	6819      	ldr	r1, [r3, #0]
 8002f0a:	4211      	tst	r1, r2
 8002f0c:	d138      	bne.n	8002f80 <HAL_ADCEx_Calibration_Start+0x98>
 8002f0e:	68da      	ldr	r2, [r3, #12]
 8002f10:	0412      	lsls	r2, r2, #16
 8002f12:	d435      	bmi.n	8002f80 <HAL_ADCEx_Calibration_Start+0x98>
  {
    /* Set ADC state */
    ADC_STATE_CLR_SET(hadc->State, 
 8002f14:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8002f16:	491d      	ldr	r1, [pc, #116]	; (8002f8c <HAL_ADCEx_Calibration_Start+0xa4>)
 8002f18:	4011      	ands	r1, r2
 8002f1a:	2202      	movs	r2, #2
 8002f1c:	430a      	orrs	r2, r1
    /*       available in data register and also transfered by DMA.           */
    /*       To not insert ADC calibration factor among ADC conversion data   */
    /*       in array variable, DMA transfer must be disabled during          */
    /*       calibration.                                                     */
    backup_setting_adc_dma_transfer = READ_BIT(hadc->Instance->CFGR1, ADC_CFGR1_DMAEN | ADC_CFGR1_DMACFG);
    CLEAR_BIT(hadc->Instance->CFGR1, ADC_CFGR1_DMAEN | ADC_CFGR1_DMACFG);
 8002f1e:	2103      	movs	r1, #3
    ADC_STATE_CLR_SET(hadc->State, 
 8002f20:	63a2      	str	r2, [r4, #56]	; 0x38
    backup_setting_adc_dma_transfer = READ_BIT(hadc->Instance->CFGR1, ADC_CFGR1_DMAEN | ADC_CFGR1_DMACFG);
 8002f22:	68dd      	ldr	r5, [r3, #12]
    CLEAR_BIT(hadc->Instance->CFGR1, ADC_CFGR1_DMAEN | ADC_CFGR1_DMACFG);
 8002f24:	68da      	ldr	r2, [r3, #12]
 8002f26:	438a      	bics	r2, r1
 8002f28:	60da      	str	r2, [r3, #12]

    /* Start ADC calibration */
    hadc->Instance->CR |= ADC_CR_ADCAL;
 8002f2a:	2280      	movs	r2, #128	; 0x80
 8002f2c:	6899      	ldr	r1, [r3, #8]
 8002f2e:	0612      	lsls	r2, r2, #24
 8002f30:	430a      	orrs	r2, r1
 8002f32:	609a      	str	r2, [r3, #8]

    tickstart = HAL_GetTick();  
 8002f34:	f7ff fdb8 	bl	8002aa8 <HAL_GetTick>
 8002f38:	0007      	movs	r7, r0

    /* Wait for calibration completion */
    while(HAL_IS_BIT_SET(hadc->Instance->CR, ADC_CR_ADCAL))
 8002f3a:	6823      	ldr	r3, [r4, #0]
 8002f3c:	689a      	ldr	r2, [r3, #8]
 8002f3e:	2a00      	cmp	r2, #0
 8002f40:	db0e      	blt.n	8002f60 <HAL_ADCEx_Calibration_Start+0x78>
    backup_setting_adc_dma_transfer = READ_BIT(hadc->Instance->CFGR1, ADC_CFGR1_DMAEN | ADC_CFGR1_DMACFG);
 8002f42:	2203      	movs	r2, #3
        return HAL_ERROR;
      }
    }
    
    /* Restore ADC DMA transfer request after calibration */
    SET_BIT(hadc->Instance->CFGR1, backup_setting_adc_dma_transfer);
 8002f44:	68d9      	ldr	r1, [r3, #12]
    backup_setting_adc_dma_transfer = READ_BIT(hadc->Instance->CFGR1, ADC_CFGR1_DMAEN | ADC_CFGR1_DMACFG);
 8002f46:	4015      	ands	r5, r2
    SET_BIT(hadc->Instance->CFGR1, backup_setting_adc_dma_transfer);
 8002f48:	430d      	orrs	r5, r1
 8002f4a:	60dd      	str	r5, [r3, #12]

    /* Set ADC state */
    ADC_STATE_CLR_SET(hadc->State,
 8002f4c:	6ba3      	ldr	r3, [r4, #56]	; 0x38
  HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 8002f4e:	2000      	movs	r0, #0
    ADC_STATE_CLR_SET(hadc->State,
 8002f50:	4393      	bics	r3, r2
 8002f52:	001a      	movs	r2, r3
 8002f54:	2301      	movs	r3, #1
 8002f56:	4313      	orrs	r3, r2
 8002f58:	63a3      	str	r3, [r4, #56]	; 0x38
    
    tmp_hal_status = HAL_ERROR;
  }
  
  /* Process unlocked */
  __HAL_UNLOCK(hadc);
 8002f5a:	2300      	movs	r3, #0
 8002f5c:	7033      	strb	r3, [r6, #0]
  
  /* Return function status */
  return tmp_hal_status;
 8002f5e:	e00e      	b.n	8002f7e <HAL_ADCEx_Calibration_Start+0x96>
      if((HAL_GetTick() - tickstart) > ADC_CALIBRATION_TIMEOUT)
 8002f60:	f7ff fda2 	bl	8002aa8 <HAL_GetTick>
 8002f64:	1bc0      	subs	r0, r0, r7
 8002f66:	2802      	cmp	r0, #2
 8002f68:	d9e7      	bls.n	8002f3a <HAL_ADCEx_Calibration_Start+0x52>
        ADC_STATE_CLR_SET(hadc->State,
 8002f6a:	2212      	movs	r2, #18
 8002f6c:	6ba3      	ldr	r3, [r4, #56]	; 0x38
        return HAL_ERROR;
 8002f6e:	2001      	movs	r0, #1
        ADC_STATE_CLR_SET(hadc->State,
 8002f70:	4393      	bics	r3, r2
 8002f72:	001a      	movs	r2, r3
 8002f74:	2310      	movs	r3, #16
 8002f76:	4313      	orrs	r3, r2
 8002f78:	63a3      	str	r3, [r4, #56]	; 0x38
        __HAL_UNLOCK(hadc);
 8002f7a:	2300      	movs	r3, #0
 8002f7c:	7033      	strb	r3, [r6, #0]
}
 8002f7e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 8002f80:	2320      	movs	r3, #32
 8002f82:	6ba2      	ldr	r2, [r4, #56]	; 0x38
    tmp_hal_status = HAL_ERROR;
 8002f84:	2001      	movs	r0, #1
    SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 8002f86:	4313      	orrs	r3, r2
 8002f88:	63a3      	str	r3, [r4, #56]	; 0x38
 8002f8a:	e7e6      	b.n	8002f5a <HAL_ADCEx_Calibration_Start+0x72>
 8002f8c:	fffffefd 	.word	0xfffffefd

08002f90 <HAL_NVIC_SetPriority>:
  *         with stm32f0xx devices, this parameter is a dummy value and it is ignored, because 
  *         no subpriority supported in Cortex M0 based products.   
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 8002f90:	b530      	push	{r4, r5, lr}
 8002f92:	25ff      	movs	r5, #255	; 0xff
 8002f94:	2403      	movs	r4, #3
 8002f96:	002a      	movs	r2, r5
 8002f98:	b2c3      	uxtb	r3, r0
 8002f9a:	401c      	ands	r4, r3
 8002f9c:	00e4      	lsls	r4, r4, #3
 8002f9e:	40a2      	lsls	r2, r4
 8002fa0:	0189      	lsls	r1, r1, #6
 8002fa2:	4029      	ands	r1, r5
 8002fa4:	43d2      	mvns	r2, r2
 8002fa6:	40a1      	lsls	r1, r4
  \param [in]  priority  Priority to set.
  \note    The priority cannot be set for every processor exception.
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if ((int32_t)(IRQn) >= 0)
 8002fa8:	2800      	cmp	r0, #0
 8002faa:	db0a      	blt.n	8002fc2 <HAL_NVIC_SetPriority+0x32>
  {
    NVIC->IP[_IP_IDX(IRQn)]  = ((uint32_t)(NVIC->IP[_IP_IDX(IRQn)]  & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 8002fac:	24c0      	movs	r4, #192	; 0xc0
 8002fae:	4b0b      	ldr	r3, [pc, #44]	; (8002fdc <HAL_NVIC_SetPriority+0x4c>)
 8002fb0:	0880      	lsrs	r0, r0, #2
 8002fb2:	0080      	lsls	r0, r0, #2
 8002fb4:	18c0      	adds	r0, r0, r3
 8002fb6:	00a4      	lsls	r4, r4, #2
 8002fb8:	5903      	ldr	r3, [r0, r4]
 8002fba:	401a      	ands	r2, r3
 8002fbc:	4311      	orrs	r1, r2
 8002fbe:	5101      	str	r1, [r0, r4]
  /* Check the parameters */
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  NVIC_SetPriority(IRQn,PreemptPriority);
}
 8002fc0:	bd30      	pop	{r4, r5, pc}
       (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
  }
  else
  {
    SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 8002fc2:	200f      	movs	r0, #15
 8002fc4:	4003      	ands	r3, r0
 8002fc6:	3b08      	subs	r3, #8
 8002fc8:	4805      	ldr	r0, [pc, #20]	; (8002fe0 <HAL_NVIC_SetPriority+0x50>)
 8002fca:	089b      	lsrs	r3, r3, #2
 8002fcc:	009b      	lsls	r3, r3, #2
 8002fce:	181b      	adds	r3, r3, r0
 8002fd0:	69d8      	ldr	r0, [r3, #28]
 8002fd2:	4002      	ands	r2, r0
 8002fd4:	4311      	orrs	r1, r2
 8002fd6:	61d9      	str	r1, [r3, #28]
 8002fd8:	e7f2      	b.n	8002fc0 <HAL_NVIC_SetPriority+0x30>
 8002fda:	46c0      	nop			; (mov r8, r8)
 8002fdc:	e000e100 	.word	0xe000e100
 8002fe0:	e000ed00 	.word	0xe000ed00

08002fe4 <HAL_NVIC_EnableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 8002fe4:	2800      	cmp	r0, #0
 8002fe6:	db05      	blt.n	8002ff4 <HAL_NVIC_EnableIRQ+0x10>
    NVIC->ISER[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8002fe8:	231f      	movs	r3, #31
 8002fea:	4018      	ands	r0, r3
 8002fec:	3b1e      	subs	r3, #30
 8002fee:	4083      	lsls	r3, r0
 8002ff0:	4a01      	ldr	r2, [pc, #4]	; (8002ff8 <HAL_NVIC_EnableIRQ+0x14>)
 8002ff2:	6013      	str	r3, [r2, #0]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
 8002ff4:	4770      	bx	lr
 8002ff6:	46c0      	nop			; (mov r8, r8)
 8002ff8:	e000e100 	.word	0xe000e100

08002ffc <HAL_SYSTICK_Config>:
           function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.h</b>
           must contain a vendor-specific implementation of this function.
 */
__STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
{
  if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 8002ffc:	4a09      	ldr	r2, [pc, #36]	; (8003024 <HAL_SYSTICK_Config+0x28>)
 8002ffe:	1e43      	subs	r3, r0, #1
  {
    return (1UL);                                                   /* Reload value impossible */
 8003000:	2001      	movs	r0, #1
  if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 8003002:	4293      	cmp	r3, r2
 8003004:	d80d      	bhi.n	8003022 <HAL_SYSTICK_Config+0x26>
    SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 8003006:	21c0      	movs	r1, #192	; 0xc0
  }

  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 8003008:	4a07      	ldr	r2, [pc, #28]	; (8003028 <HAL_SYSTICK_Config+0x2c>)
    SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 800300a:	4808      	ldr	r0, [pc, #32]	; (800302c <HAL_SYSTICK_Config+0x30>)
  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 800300c:	6053      	str	r3, [r2, #4]
    SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 800300e:	6a03      	ldr	r3, [r0, #32]
 8003010:	0609      	lsls	r1, r1, #24
 8003012:	021b      	lsls	r3, r3, #8
 8003014:	0a1b      	lsrs	r3, r3, #8
 8003016:	430b      	orrs	r3, r1
 8003018:	6203      	str	r3, [r0, #32]
  NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Interrupt */
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
 800301a:	2000      	movs	r0, #0
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 800301c:	2307      	movs	r3, #7
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
 800301e:	6090      	str	r0, [r2, #8]
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 8003020:	6013      	str	r3, [r2, #0]
  *                  - 1  Function failed.
  */
uint32_t HAL_SYSTICK_Config(uint32_t TicksNumb)
{
   return SysTick_Config(TicksNumb);
}
 8003022:	4770      	bx	lr
 8003024:	00ffffff 	.word	0x00ffffff
 8003028:	e000e010 	.word	0xe000e010
 800302c:	e000ed00 	.word	0xe000ed00

08003030 <HAL_DMA_Init>:
  * @param  hdma Pointer to a DMA_HandleTypeDef structure that contains
  *               the configuration information for the specified DMA Channel.  
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA_Init(DMA_HandleTypeDef *hdma)
{ 
 8003030:	b570      	push	{r4, r5, r6, lr}
 8003032:	0004      	movs	r4, r0
  uint32_t tmp = 0U;
  
  /* Check the DMA handle allocation */
  if(NULL == hdma)
  {
    return HAL_ERROR;
 8003034:	2501      	movs	r5, #1
  if(NULL == hdma)
 8003036:	2800      	cmp	r0, #0
 8003038:	d024      	beq.n	8003084 <HAL_DMA_Init+0x54>
  assert_param(IS_DMA_MEMORY_DATA_SIZE(hdma->Init.MemDataAlignment));
  assert_param(IS_DMA_MODE(hdma->Init.Mode));
  assert_param(IS_DMA_PRIORITY(hdma->Init.Priority));
  
  /* Change DMA peripheral state */
  hdma->State = HAL_DMA_STATE_BUSY;
 800303a:	2302      	movs	r3, #2
 800303c:	1c86      	adds	r6, r0, #2

  /* Get the CR register value */
  tmp = hdma->Instance->CCR;
 800303e:	6800      	ldr	r0, [r0, #0]
  hdma->State = HAL_DMA_STATE_BUSY;
 8003040:	77f3      	strb	r3, [r6, #31]
  tmp = hdma->Instance->CCR;
 8003042:	6802      	ldr	r2, [r0, #0]
  
  /* Clear PL, MSIZE, PSIZE, MINC, PINC, CIRC, DIR bits */
  tmp &= ((uint32_t)~(DMA_CCR_PL    | DMA_CCR_MSIZE  | DMA_CCR_PSIZE  | \
 8003044:	4b10      	ldr	r3, [pc, #64]	; (8003088 <HAL_DMA_Init+0x58>)
                      DMA_CCR_MINC  | DMA_CCR_PINC   | DMA_CCR_CIRC   | \
                      DMA_CCR_DIR));
  
  /* Prepare the DMA Channel configuration */
  tmp |=  hdma->Init.Direction        |
 8003046:	68a1      	ldr	r1, [r4, #8]
  tmp &= ((uint32_t)~(DMA_CCR_PL    | DMA_CCR_MSIZE  | DMA_CCR_PSIZE  | \
 8003048:	401a      	ands	r2, r3
  tmp |=  hdma->Init.Direction        |
 800304a:	6863      	ldr	r3, [r4, #4]
 800304c:	430b      	orrs	r3, r1
          hdma->Init.PeriphInc           | hdma->Init.MemInc           |
 800304e:	68e1      	ldr	r1, [r4, #12]
 8003050:	430b      	orrs	r3, r1
 8003052:	6921      	ldr	r1, [r4, #16]
 8003054:	430b      	orrs	r3, r1
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 8003056:	6961      	ldr	r1, [r4, #20]
 8003058:	430b      	orrs	r3, r1
 800305a:	69a1      	ldr	r1, [r4, #24]
 800305c:	430b      	orrs	r3, r1
          hdma->Init.Mode                | hdma->Init.Priority;
 800305e:	69e1      	ldr	r1, [r4, #28]
 8003060:	430b      	orrs	r3, r1
  tmp |=  hdma->Init.Direction        |
 8003062:	4313      	orrs	r3, r2

  /* Write to DMA Channel CR register */
  hdma->Instance->CCR = tmp;  
 8003064:	6003      	str	r3, [r0, #0]
    hdma->DmaBaseAddress = DMA2;
  }
#else
  /* calculation of the channel index */
  /* DMA1 */
  hdma->ChannelIndex = (((uint32_t)hdma->Instance - (uint32_t)DMA1_Channel1) / ((uint32_t)DMA1_Channel2 - (uint32_t)DMA1_Channel1)) << 2U;
 8003066:	4b09      	ldr	r3, [pc, #36]	; (800308c <HAL_DMA_Init+0x5c>)
 8003068:	2114      	movs	r1, #20
 800306a:	18c0      	adds	r0, r0, r3
 800306c:	f7fd f85e 	bl	800012c <__udivsi3>
  hdma->DmaBaseAddress = DMA1;
 8003070:	4b07      	ldr	r3, [pc, #28]	; (8003090 <HAL_DMA_Init+0x60>)
  hdma->ChannelIndex = (((uint32_t)hdma->Instance - (uint32_t)DMA1_Channel1) / ((uint32_t)DMA1_Channel2 - (uint32_t)DMA1_Channel1)) << 2U;
 8003072:	0080      	lsls	r0, r0, #2
  hdma->DmaBaseAddress = DMA1;
 8003074:	63e3      	str	r3, [r4, #60]	; 0x3c
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 8003076:	2300      	movs	r3, #0
  hdma->ChannelIndex = (((uint32_t)hdma->Instance - (uint32_t)DMA1_Channel1) / ((uint32_t)DMA1_Channel2 - (uint32_t)DMA1_Channel1)) << 2U;
 8003078:	6420      	str	r0, [r4, #64]	; 0x40
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 800307a:	63a3      	str	r3, [r4, #56]	; 0x38
  hdma->State = HAL_DMA_STATE_READY;
 800307c:	77f5      	strb	r5, [r6, #31]
  hdma->Lock = HAL_UNLOCKED;
 800307e:	1964      	adds	r4, r4, r5
  return HAL_OK;
 8003080:	001d      	movs	r5, r3
  hdma->Lock = HAL_UNLOCKED;
 8003082:	77e3      	strb	r3, [r4, #31]
}  
 8003084:	0028      	movs	r0, r5
 8003086:	bd70      	pop	{r4, r5, r6, pc}
 8003088:	ffffc00f 	.word	0xffffc00f
 800308c:	bffdfff8 	.word	0xbffdfff8
 8003090:	40020000 	.word	0x40020000

08003094 <HAL_DMA_Start_IT>:
{
 8003094:	b5f0      	push	{r4, r5, r6, r7, lr}
  __HAL_LOCK(hdma);
 8003096:	1c44      	adds	r4, r0, #1
 8003098:	7fe6      	ldrb	r6, [r4, #31]
{
 800309a:	0005      	movs	r5, r0
  __HAL_LOCK(hdma);
 800309c:	2002      	movs	r0, #2
 800309e:	2e01      	cmp	r6, #1
 80030a0:	d027      	beq.n	80030f2 <HAL_DMA_Start_IT+0x5e>
 80030a2:	3801      	subs	r0, #1
 80030a4:	77e0      	strb	r0, [r4, #31]
  if(HAL_DMA_STATE_READY == hdma->State)
 80030a6:	1ca8      	adds	r0, r5, #2
 80030a8:	7fc6      	ldrb	r6, [r0, #31]
 80030aa:	4684      	mov	ip, r0
 80030ac:	b2f6      	uxtb	r6, r6
 80030ae:	2002      	movs	r0, #2
 80030b0:	2700      	movs	r7, #0
 80030b2:	2e01      	cmp	r6, #1
 80030b4:	d128      	bne.n	8003108 <HAL_DMA_Start_IT+0x74>
  	hdma->State = HAL_DMA_STATE_BUSY;
 80030b6:	4664      	mov	r4, ip
 80030b8:	77e0      	strb	r0, [r4, #31]
  	hdma->Instance->CCR &= ~DMA_CCR_EN;
 80030ba:	682c      	ldr	r4, [r5, #0]
  	hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 80030bc:	63af      	str	r7, [r5, #56]	; 0x38
  	hdma->Instance->CCR &= ~DMA_CCR_EN;
 80030be:	6820      	ldr	r0, [r4, #0]
  hdma->DmaBaseAddress->IFCR  = (DMA_FLAG_GL1 << hdma->ChannelIndex);
 80030c0:	6c2f      	ldr	r7, [r5, #64]	; 0x40
  	hdma->Instance->CCR &= ~DMA_CCR_EN;
 80030c2:	43b0      	bics	r0, r6
  hdma->DmaBaseAddress->IFCR  = (DMA_FLAG_GL1 << hdma->ChannelIndex);
 80030c4:	40be      	lsls	r6, r7
  	hdma->Instance->CCR &= ~DMA_CCR_EN;
 80030c6:	6020      	str	r0, [r4, #0]
  hdma->DmaBaseAddress->IFCR  = (DMA_FLAG_GL1 << hdma->ChannelIndex);
 80030c8:	6be8      	ldr	r0, [r5, #60]	; 0x3c
 80030ca:	6046      	str	r6, [r0, #4]
  hdma->Instance->CNDTR = DataLength;
 80030cc:	6063      	str	r3, [r4, #4]
  if((hdma->Init.Direction) == DMA_MEMORY_TO_PERIPH)
 80030ce:	686b      	ldr	r3, [r5, #4]
 80030d0:	6828      	ldr	r0, [r5, #0]
 80030d2:	2b10      	cmp	r3, #16
 80030d4:	d10e      	bne.n	80030f4 <HAL_DMA_Start_IT+0x60>
    hdma->Instance->CPAR = DstAddress;
 80030d6:	60a2      	str	r2, [r4, #8]
    hdma->Instance->CMAR = SrcAddress;
 80030d8:	60e1      	str	r1, [r4, #12]
    if(NULL != hdma->XferHalfCpltCallback )
 80030da:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
      hdma->Instance->CCR |= (DMA_IT_TC | DMA_IT_HT | DMA_IT_TE);
 80030dc:	6822      	ldr	r2, [r4, #0]
    if(NULL != hdma->XferHalfCpltCallback )
 80030de:	2b00      	cmp	r3, #0
 80030e0:	d00b      	beq.n	80030fa <HAL_DMA_Start_IT+0x66>
      hdma->Instance->CCR |= (DMA_IT_TC | DMA_IT_HT | DMA_IT_TE);
 80030e2:	230e      	movs	r3, #14
 80030e4:	4313      	orrs	r3, r2
  		hdma->Instance->CCR &= ~DMA_IT_HT;
 80030e6:	6023      	str	r3, [r4, #0]
  	hdma->Instance->CCR |= DMA_CCR_EN;
 80030e8:	2301      	movs	r3, #1
 80030ea:	6802      	ldr	r2, [r0, #0]
 80030ec:	4313      	orrs	r3, r2
 80030ee:	6003      	str	r3, [r0, #0]
	HAL_StatusTypeDef status = HAL_OK;
 80030f0:	2000      	movs	r0, #0
} 
 80030f2:	bdf0      	pop	{r4, r5, r6, r7, pc}
    hdma->Instance->CPAR = SrcAddress;
 80030f4:	60a1      	str	r1, [r4, #8]
    hdma->Instance->CMAR = DstAddress;
 80030f6:	60e2      	str	r2, [r4, #12]
 80030f8:	e7ef      	b.n	80030da <HAL_DMA_Start_IT+0x46>
  		hdma->Instance->CCR |= (DMA_IT_TC | DMA_IT_TE);
 80030fa:	230a      	movs	r3, #10
 80030fc:	4313      	orrs	r3, r2
  		hdma->Instance->CCR &= ~DMA_IT_HT;
 80030fe:	2204      	movs	r2, #4
  		hdma->Instance->CCR |= (DMA_IT_TC | DMA_IT_TE);
 8003100:	6023      	str	r3, [r4, #0]
  		hdma->Instance->CCR &= ~DMA_IT_HT;
 8003102:	6823      	ldr	r3, [r4, #0]
 8003104:	4393      	bics	r3, r2
 8003106:	e7ee      	b.n	80030e6 <HAL_DMA_Start_IT+0x52>
    __HAL_UNLOCK(hdma); 
 8003108:	77e7      	strb	r7, [r4, #31]
 800310a:	e7f2      	b.n	80030f2 <HAL_DMA_Start_IT+0x5e>

0800310c <HAL_DMA_IRQHandler>:
{
 800310c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  if ((RESET != (flag_it & (DMA_FLAG_HT1 << hdma->ChannelIndex))) && (RESET != (source_it & DMA_IT_HT)))
 800310e:	2704      	movs	r7, #4
 8003110:	003e      	movs	r6, r7
 8003112:	6c01      	ldr	r1, [r0, #64]	; 0x40
	uint32_t flag_it = hdma->DmaBaseAddress->ISR;
 8003114:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
  if ((RESET != (flag_it & (DMA_FLAG_HT1 << hdma->ChannelIndex))) && (RESET != (source_it & DMA_IT_HT)))
 8003116:	408e      	lsls	r6, r1
	uint32_t flag_it = hdma->DmaBaseAddress->ISR;
 8003118:	6815      	ldr	r5, [r2, #0]
  uint32_t source_it = hdma->Instance->CCR;
 800311a:	6803      	ldr	r3, [r0, #0]
 800311c:	681c      	ldr	r4, [r3, #0]
  if ((RESET != (flag_it & (DMA_FLAG_HT1 << hdma->ChannelIndex))) && (RESET != (source_it & DMA_IT_HT)))
 800311e:	4235      	tst	r5, r6
 8003120:	d00d      	beq.n	800313e <HAL_DMA_IRQHandler+0x32>
 8003122:	423c      	tst	r4, r7
 8003124:	d00b      	beq.n	800313e <HAL_DMA_IRQHandler+0x32>
  	if((hdma->Instance->CCR & DMA_CCR_CIRC) == 0U)
 8003126:	6819      	ldr	r1, [r3, #0]
 8003128:	0689      	lsls	r1, r1, #26
 800312a:	d402      	bmi.n	8003132 <HAL_DMA_IRQHandler+0x26>
  		hdma->Instance->CCR &= ~DMA_IT_HT;
 800312c:	6819      	ldr	r1, [r3, #0]
 800312e:	43b9      	bics	r1, r7
 8003130:	6019      	str	r1, [r3, #0]
  	if(hdma->XferHalfCpltCallback != NULL)
 8003132:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
  	hdma->DmaBaseAddress->IFCR = DMA_FLAG_HT1 << hdma->ChannelIndex;
 8003134:	6056      	str	r6, [r2, #4]
  	if(hdma->XferHalfCpltCallback != NULL)
 8003136:	2b00      	cmp	r3, #0
 8003138:	d019      	beq.n	800316e <HAL_DMA_IRQHandler+0x62>
    	hdma->XferErrorCallback(hdma);
 800313a:	4798      	blx	r3
}  
 800313c:	e017      	b.n	800316e <HAL_DMA_IRQHandler+0x62>
  else if ((RESET != (flag_it & (DMA_FLAG_TC1 << hdma->ChannelIndex))) && (RESET != (source_it & DMA_IT_TC)))
 800313e:	2702      	movs	r7, #2
 8003140:	003e      	movs	r6, r7
 8003142:	408e      	lsls	r6, r1
 8003144:	4235      	tst	r5, r6
 8003146:	d013      	beq.n	8003170 <HAL_DMA_IRQHandler+0x64>
 8003148:	423c      	tst	r4, r7
 800314a:	d011      	beq.n	8003170 <HAL_DMA_IRQHandler+0x64>
  	if((hdma->Instance->CCR & DMA_CCR_CIRC) == 0U)
 800314c:	6819      	ldr	r1, [r3, #0]
 800314e:	0689      	lsls	r1, r1, #26
 8003150:	d406      	bmi.n	8003160 <HAL_DMA_IRQHandler+0x54>
  		hdma->Instance->CCR &= ~(DMA_IT_TC | DMA_IT_TE);
 8003152:	240a      	movs	r4, #10
 8003154:	6819      	ldr	r1, [r3, #0]
 8003156:	43a1      	bics	r1, r4
 8003158:	6019      	str	r1, [r3, #0]
  		hdma->State = HAL_DMA_STATE_READY;
 800315a:	2101      	movs	r1, #1
 800315c:	19c3      	adds	r3, r0, r7
 800315e:	77d9      	strb	r1, [r3, #31]
  	hdma->DmaBaseAddress->IFCR = DMA_FLAG_TC1 << hdma->ChannelIndex;
 8003160:	6056      	str	r6, [r2, #4]
  	__HAL_UNLOCK(hdma);
 8003162:	2200      	movs	r2, #0
 8003164:	1c43      	adds	r3, r0, #1
 8003166:	77da      	strb	r2, [r3, #31]
  	if(hdma->XferCpltCallback != NULL)
 8003168:	6a83      	ldr	r3, [r0, #40]	; 0x28
    if(hdma->XferErrorCallback != NULL)
 800316a:	4293      	cmp	r3, r2
 800316c:	d1e5      	bne.n	800313a <HAL_DMA_IRQHandler+0x2e>
}  
 800316e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  else if (( RESET != (flag_it & (DMA_FLAG_TE1 << hdma->ChannelIndex))) && (RESET != (source_it & DMA_IT_TE)))
 8003170:	2608      	movs	r6, #8
 8003172:	0037      	movs	r7, r6
 8003174:	408f      	lsls	r7, r1
 8003176:	423d      	tst	r5, r7
 8003178:	d0f9      	beq.n	800316e <HAL_DMA_IRQHandler+0x62>
 800317a:	4234      	tst	r4, r6
 800317c:	d0f7      	beq.n	800316e <HAL_DMA_IRQHandler+0x62>
    hdma->Instance->CCR &= ~(DMA_IT_TC | DMA_IT_HT | DMA_IT_TE);
 800317e:	250e      	movs	r5, #14
 8003180:	681c      	ldr	r4, [r3, #0]
 8003182:	43ac      	bics	r4, r5
 8003184:	601c      	str	r4, [r3, #0]
    hdma->DmaBaseAddress->IFCR = DMA_FLAG_GL1 << hdma->ChannelIndex;
 8003186:	2301      	movs	r3, #1
 8003188:	001c      	movs	r4, r3
 800318a:	408c      	lsls	r4, r1
 800318c:	6054      	str	r4, [r2, #4]
    hdma->State = HAL_DMA_STATE_READY;    
 800318e:	1c82      	adds	r2, r0, #2
    hdma->ErrorCode = HAL_DMA_ERROR_TE;
 8003190:	6383      	str	r3, [r0, #56]	; 0x38
    hdma->State = HAL_DMA_STATE_READY;    
 8003192:	77d3      	strb	r3, [r2, #31]
    __HAL_UNLOCK(hdma); 
 8003194:	2200      	movs	r2, #0
 8003196:	18c3      	adds	r3, r0, r3
 8003198:	77da      	strb	r2, [r3, #31]
    if(hdma->XferErrorCallback != NULL)
 800319a:	6b03      	ldr	r3, [r0, #48]	; 0x30
 800319c:	e7e5      	b.n	800316a <HAL_DMA_IRQHandler+0x5e>
	...

080031a0 <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{ 
 80031a0:	b5f0      	push	{r4, r5, r6, r7, lr}
  assert_param(IS_GPIO_PIN(GPIO_Init->Pin));
  assert_param(IS_GPIO_MODE(GPIO_Init->Mode));
  assert_param(IS_GPIO_PULL(GPIO_Init->Pull));

  /* Configure the port pins */
  while (((GPIO_Init->Pin) >> position) != 0x00u)
 80031a2:	680b      	ldr	r3, [r1, #0]
{ 
 80031a4:	b087      	sub	sp, #28
  while (((GPIO_Init->Pin) >> position) != 0x00u)
 80031a6:	9303      	str	r3, [sp, #12]
  uint32_t position = 0x00u;
 80031a8:	2300      	movs	r3, #0
{ 
 80031aa:	9101      	str	r1, [sp, #4]
  while (((GPIO_Init->Pin) >> position) != 0x00u)
 80031ac:	9a03      	ldr	r2, [sp, #12]
 80031ae:	40da      	lsrs	r2, r3
 80031b0:	d101      	bne.n	80031b6 <HAL_GPIO_Init+0x16>
      }
    }

    position++;
  } 
}
 80031b2:	b007      	add	sp, #28
 80031b4:	bdf0      	pop	{r4, r5, r6, r7, pc}
    iocurrent = (GPIO_Init->Pin) & (1uL << position);
 80031b6:	2201      	movs	r2, #1
 80031b8:	409a      	lsls	r2, r3
 80031ba:	9202      	str	r2, [sp, #8]
 80031bc:	9902      	ldr	r1, [sp, #8]
 80031be:	9a03      	ldr	r2, [sp, #12]
 80031c0:	400a      	ands	r2, r1
 80031c2:	9200      	str	r2, [sp, #0]
    if (iocurrent != 0x00u)
 80031c4:	d100      	bne.n	80031c8 <HAL_GPIO_Init+0x28>
 80031c6:	e088      	b.n	80032da <HAL_GPIO_Init+0x13a>
      if((GPIO_Init->Mode == GPIO_MODE_AF_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 80031c8:	9a01      	ldr	r2, [sp, #4]
 80031ca:	2110      	movs	r1, #16
 80031cc:	6852      	ldr	r2, [r2, #4]
 80031ce:	0016      	movs	r6, r2
 80031d0:	438e      	bics	r6, r1
 80031d2:	2e02      	cmp	r6, #2
 80031d4:	d10e      	bne.n	80031f4 <HAL_GPIO_Init+0x54>
        temp &= ~(0xFu << ((position & 0x07u) * 4u));
 80031d6:	2507      	movs	r5, #7
 80031d8:	401d      	ands	r5, r3
 80031da:	00ad      	lsls	r5, r5, #2
 80031dc:	3901      	subs	r1, #1
 80031de:	40a9      	lsls	r1, r5
        temp = GPIOx->AFR[position >> 3u];
 80031e0:	08dc      	lsrs	r4, r3, #3
 80031e2:	00a4      	lsls	r4, r4, #2
 80031e4:	1904      	adds	r4, r0, r4
 80031e6:	6a27      	ldr	r7, [r4, #32]
        temp &= ~(0xFu << ((position & 0x07u) * 4u));
 80031e8:	438f      	bics	r7, r1
        temp |= ((GPIO_Init->Alternate) << ((position & 0x07u) * 4u));
 80031ea:	9901      	ldr	r1, [sp, #4]
 80031ec:	6909      	ldr	r1, [r1, #16]
 80031ee:	40a9      	lsls	r1, r5
 80031f0:	430f      	orrs	r7, r1
        GPIOx->AFR[position >> 3u] = temp;
 80031f2:	6227      	str	r7, [r4, #32]
      temp &= ~(GPIO_MODER_MODER0 << (position * 2u));
 80031f4:	2403      	movs	r4, #3
 80031f6:	005f      	lsls	r7, r3, #1
 80031f8:	40bc      	lsls	r4, r7
 80031fa:	43e4      	mvns	r4, r4
      temp = GPIOx->MODER;
 80031fc:	6805      	ldr	r5, [r0, #0]
      if((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 80031fe:	3e01      	subs	r6, #1
      temp &= ~(GPIO_MODER_MODER0 << (position * 2u));
 8003200:	4025      	ands	r5, r4
 8003202:	46ac      	mov	ip, r5
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2u));
 8003204:	2503      	movs	r5, #3
 8003206:	4015      	ands	r5, r2
 8003208:	40bd      	lsls	r5, r7
 800320a:	4661      	mov	r1, ip
 800320c:	430d      	orrs	r5, r1
      GPIOx->MODER = temp;
 800320e:	6005      	str	r5, [r0, #0]
      if((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 8003210:	2e01      	cmp	r6, #1
 8003212:	d80f      	bhi.n	8003234 <HAL_GPIO_Init+0x94>
        temp |= (GPIO_Init->Speed << (position * 2u));
 8003214:	9901      	ldr	r1, [sp, #4]
        temp = GPIOx->OSPEEDR;
 8003216:	6886      	ldr	r6, [r0, #8]
        temp |= (GPIO_Init->Speed << (position * 2u));
 8003218:	68cd      	ldr	r5, [r1, #12]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2u));
 800321a:	4026      	ands	r6, r4
        temp |= (GPIO_Init->Speed << (position * 2u));
 800321c:	40bd      	lsls	r5, r7
 800321e:	4335      	orrs	r5, r6
        GPIOx->OSPEEDR = temp;
 8003220:	6085      	str	r5, [r0, #8]
        temp = GPIOx->OTYPER;
 8003222:	6846      	ldr	r6, [r0, #4]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 8003224:	9902      	ldr	r1, [sp, #8]
        temp |= (((GPIO_Init->Mode & GPIO_OUTPUT_TYPE) >> 4u) << position);
 8003226:	0915      	lsrs	r5, r2, #4
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 8003228:	438e      	bics	r6, r1
        temp |= (((GPIO_Init->Mode & GPIO_OUTPUT_TYPE) >> 4u) << position);
 800322a:	2101      	movs	r1, #1
 800322c:	400d      	ands	r5, r1
 800322e:	409d      	lsls	r5, r3
 8003230:	4335      	orrs	r5, r6
        GPIOx->OTYPER = temp;
 8003232:	6045      	str	r5, [r0, #4]
      temp = GPIOx->PUPDR;
 8003234:	68c5      	ldr	r5, [r0, #12]
      temp |= ((GPIO_Init->Pull) << (position * 2u));
 8003236:	9901      	ldr	r1, [sp, #4]
      temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2u));
 8003238:	402c      	ands	r4, r5
      temp |= ((GPIO_Init->Pull) << (position * 2u));
 800323a:	688d      	ldr	r5, [r1, #8]
      if((GPIO_Init->Mode & EXTI_MODE) == EXTI_MODE)
 800323c:	2180      	movs	r1, #128	; 0x80
      temp |= ((GPIO_Init->Pull) << (position * 2u));
 800323e:	40bd      	lsls	r5, r7
      if((GPIO_Init->Mode & EXTI_MODE) == EXTI_MODE)
 8003240:	0549      	lsls	r1, r1, #21
      temp |= ((GPIO_Init->Pull) << (position * 2u));
 8003242:	432c      	orrs	r4, r5
      GPIOx->PUPDR = temp;
 8003244:	60c4      	str	r4, [r0, #12]
      if((GPIO_Init->Mode & EXTI_MODE) == EXTI_MODE)
 8003246:	420a      	tst	r2, r1
 8003248:	d047      	beq.n	80032da <HAL_GPIO_Init+0x13a>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 800324a:	2101      	movs	r1, #1
 800324c:	4c24      	ldr	r4, [pc, #144]	; (80032e0 <HAL_GPIO_Init+0x140>)
        temp &= ~(0x0FuL << (4u * (position & 0x03u)));
 800324e:	2603      	movs	r6, #3
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8003250:	69a5      	ldr	r5, [r4, #24]
        temp &= ~(0x0FuL << (4u * (position & 0x03u)));
 8003252:	401e      	ands	r6, r3
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8003254:	430d      	orrs	r5, r1
 8003256:	61a5      	str	r5, [r4, #24]
 8003258:	69a4      	ldr	r4, [r4, #24]
        temp = SYSCFG->EXTICR[position >> 2u];
 800325a:	089d      	lsrs	r5, r3, #2
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 800325c:	400c      	ands	r4, r1
 800325e:	9405      	str	r4, [sp, #20]
 8003260:	9c05      	ldr	r4, [sp, #20]
        temp &= ~(0x0FuL << (4u * (position & 0x03u)));
 8003262:	240f      	movs	r4, #15
 8003264:	491f      	ldr	r1, [pc, #124]	; (80032e4 <HAL_GPIO_Init+0x144>)
 8003266:	00ad      	lsls	r5, r5, #2
 8003268:	00b6      	lsls	r6, r6, #2
 800326a:	186d      	adds	r5, r5, r1
 800326c:	40b4      	lsls	r4, r6
        temp |= (GPIO_GET_INDEX(GPIOx) << (4u * (position & 0x03u)));
 800326e:	2190      	movs	r1, #144	; 0x90
        temp = SYSCFG->EXTICR[position >> 2u];
 8003270:	68af      	ldr	r7, [r5, #8]
        temp |= (GPIO_GET_INDEX(GPIOx) << (4u * (position & 0x03u)));
 8003272:	05c9      	lsls	r1, r1, #23
        temp &= ~(0x0FuL << (4u * (position & 0x03u)));
 8003274:	43a7      	bics	r7, r4
        temp |= (GPIO_GET_INDEX(GPIOx) << (4u * (position & 0x03u)));
 8003276:	2400      	movs	r4, #0
 8003278:	4288      	cmp	r0, r1
 800327a:	d008      	beq.n	800328e <HAL_GPIO_Init+0xee>
 800327c:	491a      	ldr	r1, [pc, #104]	; (80032e8 <HAL_GPIO_Init+0x148>)
 800327e:	3401      	adds	r4, #1
 8003280:	4288      	cmp	r0, r1
 8003282:	d004      	beq.n	800328e <HAL_GPIO_Init+0xee>
 8003284:	4919      	ldr	r1, [pc, #100]	; (80032ec <HAL_GPIO_Init+0x14c>)
 8003286:	3404      	adds	r4, #4
 8003288:	4288      	cmp	r0, r1
 800328a:	d100      	bne.n	800328e <HAL_GPIO_Init+0xee>
 800328c:	3c03      	subs	r4, #3
 800328e:	40b4      	lsls	r4, r6
        temp &= ~(iocurrent);
 8003290:	9900      	ldr	r1, [sp, #0]
        temp |= (GPIO_GET_INDEX(GPIOx) << (4u * (position & 0x03u)));
 8003292:	433c      	orrs	r4, r7
          temp |= iocurrent;
 8003294:	000e      	movs	r6, r1
        SYSCFG->EXTICR[position >> 2u] = temp;
 8003296:	60ac      	str	r4, [r5, #8]
        temp = EXTI->IMR;
 8003298:	4c15      	ldr	r4, [pc, #84]	; (80032f0 <HAL_GPIO_Init+0x150>)
        temp &= ~(iocurrent);
 800329a:	43cd      	mvns	r5, r1
        temp = EXTI->IMR;
 800329c:	6827      	ldr	r7, [r4, #0]
          temp |= iocurrent;
 800329e:	433e      	orrs	r6, r7
        if((GPIO_Init->Mode & GPIO_MODE_IT) == GPIO_MODE_IT)
 80032a0:	03d1      	lsls	r1, r2, #15
 80032a2:	d401      	bmi.n	80032a8 <HAL_GPIO_Init+0x108>
        temp &= ~(iocurrent);
 80032a4:	003e      	movs	r6, r7
 80032a6:	402e      	ands	r6, r5
        EXTI->IMR = temp;
 80032a8:	6026      	str	r6, [r4, #0]
        temp = EXTI->EMR;
 80032aa:	6867      	ldr	r7, [r4, #4]
          temp |= iocurrent;
 80032ac:	9e00      	ldr	r6, [sp, #0]
 80032ae:	433e      	orrs	r6, r7
        if((GPIO_Init->Mode & GPIO_MODE_EVT) == GPIO_MODE_EVT)
 80032b0:	0391      	lsls	r1, r2, #14
 80032b2:	d401      	bmi.n	80032b8 <HAL_GPIO_Init+0x118>
        temp &= ~(iocurrent);
 80032b4:	003e      	movs	r6, r7
 80032b6:	402e      	ands	r6, r5
        EXTI->EMR = temp;
 80032b8:	6066      	str	r6, [r4, #4]
        temp = EXTI->RTSR;
 80032ba:	68a7      	ldr	r7, [r4, #8]
          temp |= iocurrent;
 80032bc:	9e00      	ldr	r6, [sp, #0]
 80032be:	433e      	orrs	r6, r7
        if((GPIO_Init->Mode & RISING_EDGE) == RISING_EDGE)
 80032c0:	02d1      	lsls	r1, r2, #11
 80032c2:	d401      	bmi.n	80032c8 <HAL_GPIO_Init+0x128>
        temp &= ~(iocurrent);
 80032c4:	003e      	movs	r6, r7
 80032c6:	402e      	ands	r6, r5
        EXTI->RTSR = temp;
 80032c8:	60a6      	str	r6, [r4, #8]
        temp = EXTI->FTSR;
 80032ca:	68e6      	ldr	r6, [r4, #12]
          temp |= iocurrent;
 80032cc:	9f00      	ldr	r7, [sp, #0]
 80032ce:	4337      	orrs	r7, r6
        if((GPIO_Init->Mode & FALLING_EDGE) == FALLING_EDGE)
 80032d0:	0292      	lsls	r2, r2, #10
 80032d2:	d401      	bmi.n	80032d8 <HAL_GPIO_Init+0x138>
        temp &= ~(iocurrent);
 80032d4:	402e      	ands	r6, r5
 80032d6:	0037      	movs	r7, r6
        EXTI->FTSR = temp;
 80032d8:	60e7      	str	r7, [r4, #12]
    position++;
 80032da:	3301      	adds	r3, #1
 80032dc:	e766      	b.n	80031ac <HAL_GPIO_Init+0xc>
 80032de:	46c0      	nop			; (mov r8, r8)
 80032e0:	40021000 	.word	0x40021000
 80032e4:	40010000 	.word	0x40010000
 80032e8:	48000400 	.word	0x48000400
 80032ec:	48000800 	.word	0x48000800
 80032f0:	40010400 	.word	0x40010400

080032f4 <HAL_GPIO_ReadPin>:
  GPIO_PinState bitstatus;

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  if ((GPIOx->IDR & GPIO_Pin) != (uint32_t)GPIO_PIN_RESET)
 80032f4:	6900      	ldr	r0, [r0, #16]
 80032f6:	4008      	ands	r0, r1
 80032f8:	1e41      	subs	r1, r0, #1
 80032fa:	4188      	sbcs	r0, r1
  }
  else
  {
    bitstatus = GPIO_PIN_RESET;
  }
  return bitstatus;
 80032fc:	b2c0      	uxtb	r0, r0
  }
 80032fe:	4770      	bx	lr

08003300 <I2C_Flush_TXDR>:
  */
static void I2C_Flush_TXDR(I2C_HandleTypeDef *hi2c)
{
  /* If a pending TXIS flag is set */
  /* Write a dummy data in TXDR to clear it */
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) != RESET)
 8003300:	6803      	ldr	r3, [r0, #0]
 8003302:	699a      	ldr	r2, [r3, #24]
 8003304:	0792      	lsls	r2, r2, #30
 8003306:	d501      	bpl.n	800330c <I2C_Flush_TXDR+0xc>
  {
    hi2c->Instance->TXDR = 0x00U;
 8003308:	2200      	movs	r2, #0
 800330a:	629a      	str	r2, [r3, #40]	; 0x28
  }

  /* Flush TX register if not empty */
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800330c:	2201      	movs	r2, #1
 800330e:	6999      	ldr	r1, [r3, #24]
 8003310:	4211      	tst	r1, r2
 8003312:	d102      	bne.n	800331a <I2C_Flush_TXDR+0x1a>
  {
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_TXE);
 8003314:	6999      	ldr	r1, [r3, #24]
 8003316:	430a      	orrs	r2, r1
 8003318:	619a      	str	r2, [r3, #24]
  }
}
 800331a:	4770      	bx	lr

0800331c <I2C_TransferConfig>:
  *     @arg @ref I2C_GENERATE_START_READ Generate Restart for read request.
  *     @arg @ref I2C_GENERATE_START_WRITE Generate Restart for write request.
  * @retval None
  */
static void I2C_TransferConfig(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint8_t Size, uint32_t Mode, uint32_t Request)
{
 800331c:	b530      	push	{r4, r5, lr}
 800331e:	9c03      	ldr	r4, [sp, #12]
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_TRANSFER_MODE(Mode));
  assert_param(IS_TRANSFER_REQUEST(Request));

  /* update CR2 register */
  MODIFY_REG(hi2c->Instance->CR2, ((I2C_CR2_SADD | I2C_CR2_NBYTES | I2C_CR2_RELOAD | I2C_CR2_AUTOEND | (I2C_CR2_RD_WRN & (uint32_t)(Request >> (31U - I2C_CR2_RD_WRN_Pos))) | I2C_CR2_START | I2C_CR2_STOP)), \
 8003320:	0412      	lsls	r2, r2, #16
 8003322:	6800      	ldr	r0, [r0, #0]
 8003324:	4322      	orrs	r2, r4
 8003326:	4313      	orrs	r3, r2
 8003328:	4a05      	ldr	r2, [pc, #20]	; (8003340 <I2C_TransferConfig+0x24>)
 800332a:	6845      	ldr	r5, [r0, #4]
 800332c:	0589      	lsls	r1, r1, #22
 800332e:	0d64      	lsrs	r4, r4, #21
 8003330:	0d89      	lsrs	r1, r1, #22
 8003332:	4314      	orrs	r4, r2
 8003334:	43a5      	bics	r5, r4
 8003336:	430b      	orrs	r3, r1
 8003338:	432b      	orrs	r3, r5
 800333a:	6043      	str	r3, [r0, #4]
             (uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | (uint32_t)Mode | (uint32_t)Request));
}
 800333c:	bd30      	pop	{r4, r5, pc}
 800333e:	46c0      	nop			; (mov r8, r8)
 8003340:	03ff63ff 	.word	0x03ff63ff

08003344 <I2C_IsAcknowledgeFailed>:
{
 8003344:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8003346:	6803      	ldr	r3, [r0, #0]
{
 8003348:	0004      	movs	r4, r0
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800334a:	6998      	ldr	r0, [r3, #24]
 800334c:	2310      	movs	r3, #16
{
 800334e:	000e      	movs	r6, r1
 8003350:	0017      	movs	r7, r2
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8003352:	4018      	ands	r0, r3
    while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
 8003354:	2520      	movs	r5, #32
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8003356:	2800      	cmp	r0, #0
 8003358:	d118      	bne.n	800338c <I2C_IsAcknowledgeFailed+0x48>
}
 800335a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
      if (Timeout != HAL_MAX_DELAY)
 800335c:	1c72      	adds	r2, r6, #1
 800335e:	d016      	beq.n	800338e <I2C_IsAcknowledgeFailed+0x4a>
        if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8003360:	f7ff fba2 	bl	8002aa8 <HAL_GetTick>
 8003364:	1bc0      	subs	r0, r0, r7
 8003366:	42b0      	cmp	r0, r6
 8003368:	d801      	bhi.n	800336e <I2C_IsAcknowledgeFailed+0x2a>
 800336a:	2e00      	cmp	r6, #0
 800336c:	d10e      	bne.n	800338c <I2C_IsAcknowledgeFailed+0x48>
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 800336e:	2220      	movs	r2, #32
 8003370:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8003372:	4313      	orrs	r3, r2
 8003374:	6463      	str	r3, [r4, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
 8003376:	0023      	movs	r3, r4
 8003378:	3341      	adds	r3, #65	; 0x41
 800337a:	701a      	strb	r2, [r3, #0]
    hi2c->Mode = HAL_I2C_MODE_NONE;
 800337c:	0022      	movs	r2, r4
 800337e:	2300      	movs	r3, #0
 8003380:	3242      	adds	r2, #66	; 0x42
    __HAL_UNLOCK(hi2c);
 8003382:	3440      	adds	r4, #64	; 0x40
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8003384:	7013      	strb	r3, [r2, #0]
    return HAL_ERROR;
 8003386:	2001      	movs	r0, #1
    __HAL_UNLOCK(hi2c);
 8003388:	7023      	strb	r3, [r4, #0]
    return HAL_ERROR;
 800338a:	e7e6      	b.n	800335a <I2C_IsAcknowledgeFailed+0x16>
    while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
 800338c:	6823      	ldr	r3, [r4, #0]
 800338e:	699a      	ldr	r2, [r3, #24]
 8003390:	422a      	tst	r2, r5
 8003392:	d0e3      	beq.n	800335c <I2C_IsAcknowledgeFailed+0x18>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8003394:	2210      	movs	r2, #16
    I2C_Flush_TXDR(hi2c);
 8003396:	0020      	movs	r0, r4
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8003398:	61da      	str	r2, [r3, #28]
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 800339a:	61dd      	str	r5, [r3, #28]
    I2C_Flush_TXDR(hi2c);
 800339c:	f7ff ffb0 	bl	8003300 <I2C_Flush_TXDR>
    I2C_RESET_CR2(hi2c);
 80033a0:	6822      	ldr	r2, [r4, #0]
 80033a2:	4906      	ldr	r1, [pc, #24]	; (80033bc <I2C_IsAcknowledgeFailed+0x78>)
 80033a4:	6853      	ldr	r3, [r2, #4]
 80033a6:	400b      	ands	r3, r1
 80033a8:	6053      	str	r3, [r2, #4]
    hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
 80033aa:	2304      	movs	r3, #4
 80033ac:	6c62      	ldr	r2, [r4, #68]	; 0x44
 80033ae:	4313      	orrs	r3, r2
 80033b0:	6463      	str	r3, [r4, #68]	; 0x44
    hi2c->State = HAL_I2C_STATE_READY;
 80033b2:	0023      	movs	r3, r4
 80033b4:	3341      	adds	r3, #65	; 0x41
 80033b6:	701d      	strb	r5, [r3, #0]
 80033b8:	e7e0      	b.n	800337c <I2C_IsAcknowledgeFailed+0x38>
 80033ba:	46c0      	nop			; (mov r8, r8)
 80033bc:	fe00e800 	.word	0xfe00e800

080033c0 <I2C_WaitOnSTOPFlagUntilTimeout>:
{
 80033c0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80033c2:	0004      	movs	r4, r0
 80033c4:	000d      	movs	r5, r1
 80033c6:	0016      	movs	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
 80033c8:	2720      	movs	r7, #32
 80033ca:	6823      	ldr	r3, [r4, #0]
 80033cc:	699b      	ldr	r3, [r3, #24]
 80033ce:	423b      	tst	r3, r7
 80033d0:	d001      	beq.n	80033d6 <I2C_WaitOnSTOPFlagUntilTimeout+0x16>
  return HAL_OK;
 80033d2:	2000      	movs	r0, #0
}
 80033d4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    if (I2C_IsAcknowledgeFailed(hi2c, Timeout, Tickstart) != HAL_OK)
 80033d6:	0032      	movs	r2, r6
 80033d8:	0029      	movs	r1, r5
 80033da:	0020      	movs	r0, r4
 80033dc:	f7ff ffb2 	bl	8003344 <I2C_IsAcknowledgeFailed>
 80033e0:	2800      	cmp	r0, #0
 80033e2:	d113      	bne.n	800340c <I2C_WaitOnSTOPFlagUntilTimeout+0x4c>
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80033e4:	f7ff fb60 	bl	8002aa8 <HAL_GetTick>
 80033e8:	1b80      	subs	r0, r0, r6
 80033ea:	42a8      	cmp	r0, r5
 80033ec:	d801      	bhi.n	80033f2 <I2C_WaitOnSTOPFlagUntilTimeout+0x32>
 80033ee:	2d00      	cmp	r5, #0
 80033f0:	d1eb      	bne.n	80033ca <I2C_WaitOnSTOPFlagUntilTimeout+0xa>
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 80033f2:	2220      	movs	r2, #32
 80033f4:	6c63      	ldr	r3, [r4, #68]	; 0x44
 80033f6:	4313      	orrs	r3, r2
 80033f8:	6463      	str	r3, [r4, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
 80033fa:	0023      	movs	r3, r4
 80033fc:	3341      	adds	r3, #65	; 0x41
 80033fe:	701a      	strb	r2, [r3, #0]
          hi2c->Mode = HAL_I2C_MODE_NONE;
 8003400:	0022      	movs	r2, r4
 8003402:	2300      	movs	r3, #0
 8003404:	3242      	adds	r2, #66	; 0x42
          __HAL_UNLOCK(hi2c);
 8003406:	3440      	adds	r4, #64	; 0x40
          hi2c->Mode = HAL_I2C_MODE_NONE;
 8003408:	7013      	strb	r3, [r2, #0]
          __HAL_UNLOCK(hi2c);
 800340a:	7023      	strb	r3, [r4, #0]
      return HAL_ERROR;
 800340c:	2001      	movs	r0, #1
 800340e:	e7e1      	b.n	80033d4 <I2C_WaitOnSTOPFlagUntilTimeout+0x14>

08003410 <I2C_WaitOnFlagUntilTimeout>:
{
 8003410:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003412:	0004      	movs	r4, r0
 8003414:	000e      	movs	r6, r1
 8003416:	0017      	movs	r7, r2
 8003418:	001d      	movs	r5, r3
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800341a:	6822      	ldr	r2, [r4, #0]
 800341c:	6993      	ldr	r3, [r2, #24]
 800341e:	4033      	ands	r3, r6
 8003420:	1b9b      	subs	r3, r3, r6
 8003422:	4259      	negs	r1, r3
 8003424:	414b      	adcs	r3, r1
 8003426:	42bb      	cmp	r3, r7
 8003428:	d001      	beq.n	800342e <I2C_WaitOnFlagUntilTimeout+0x1e>
  return HAL_OK;
 800342a:	2000      	movs	r0, #0
 800342c:	e017      	b.n	800345e <I2C_WaitOnFlagUntilTimeout+0x4e>
    if (Timeout != HAL_MAX_DELAY)
 800342e:	1c6b      	adds	r3, r5, #1
 8003430:	d0f4      	beq.n	800341c <I2C_WaitOnFlagUntilTimeout+0xc>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8003432:	f7ff fb39 	bl	8002aa8 <HAL_GetTick>
 8003436:	9b06      	ldr	r3, [sp, #24]
 8003438:	1ac0      	subs	r0, r0, r3
 800343a:	42a8      	cmp	r0, r5
 800343c:	d801      	bhi.n	8003442 <I2C_WaitOnFlagUntilTimeout+0x32>
 800343e:	2d00      	cmp	r5, #0
 8003440:	d1eb      	bne.n	800341a <I2C_WaitOnFlagUntilTimeout+0xa>
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 8003442:	2220      	movs	r2, #32
 8003444:	6c63      	ldr	r3, [r4, #68]	; 0x44
          __HAL_UNLOCK(hi2c);
 8003446:	2001      	movs	r0, #1
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 8003448:	4313      	orrs	r3, r2
 800344a:	6463      	str	r3, [r4, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
 800344c:	0023      	movs	r3, r4
 800344e:	3341      	adds	r3, #65	; 0x41
 8003450:	701a      	strb	r2, [r3, #0]
          hi2c->Mode = HAL_I2C_MODE_NONE;
 8003452:	0022      	movs	r2, r4
 8003454:	2300      	movs	r3, #0
 8003456:	3242      	adds	r2, #66	; 0x42
          __HAL_UNLOCK(hi2c);
 8003458:	3440      	adds	r4, #64	; 0x40
          hi2c->Mode = HAL_I2C_MODE_NONE;
 800345a:	7013      	strb	r3, [r2, #0]
          __HAL_UNLOCK(hi2c);
 800345c:	7023      	strb	r3, [r4, #0]
}
 800345e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08003460 <I2C_WaitOnTXISFlagUntilTimeout>:
{
 8003460:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003462:	0004      	movs	r4, r0
 8003464:	000d      	movs	r5, r1
 8003466:	0016      	movs	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET)
 8003468:	2702      	movs	r7, #2
 800346a:	6823      	ldr	r3, [r4, #0]
 800346c:	699b      	ldr	r3, [r3, #24]
 800346e:	423b      	tst	r3, r7
 8003470:	d001      	beq.n	8003476 <I2C_WaitOnTXISFlagUntilTimeout+0x16>
  return HAL_OK;
 8003472:	2000      	movs	r0, #0
}
 8003474:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    if (I2C_IsAcknowledgeFailed(hi2c, Timeout, Tickstart) != HAL_OK)
 8003476:	0032      	movs	r2, r6
 8003478:	0029      	movs	r1, r5
 800347a:	0020      	movs	r0, r4
 800347c:	f7ff ff62 	bl	8003344 <I2C_IsAcknowledgeFailed>
 8003480:	2800      	cmp	r0, #0
 8003482:	d115      	bne.n	80034b0 <I2C_WaitOnTXISFlagUntilTimeout+0x50>
    if (Timeout != HAL_MAX_DELAY)
 8003484:	1c6b      	adds	r3, r5, #1
 8003486:	d0f0      	beq.n	800346a <I2C_WaitOnTXISFlagUntilTimeout+0xa>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8003488:	f7ff fb0e 	bl	8002aa8 <HAL_GetTick>
 800348c:	1b80      	subs	r0, r0, r6
 800348e:	42a8      	cmp	r0, r5
 8003490:	d801      	bhi.n	8003496 <I2C_WaitOnTXISFlagUntilTimeout+0x36>
 8003492:	2d00      	cmp	r5, #0
 8003494:	d1e9      	bne.n	800346a <I2C_WaitOnTXISFlagUntilTimeout+0xa>
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 8003496:	2220      	movs	r2, #32
 8003498:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800349a:	4313      	orrs	r3, r2
 800349c:	6463      	str	r3, [r4, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
 800349e:	0023      	movs	r3, r4
 80034a0:	3341      	adds	r3, #65	; 0x41
 80034a2:	701a      	strb	r2, [r3, #0]
          hi2c->Mode = HAL_I2C_MODE_NONE;
 80034a4:	0022      	movs	r2, r4
 80034a6:	2300      	movs	r3, #0
 80034a8:	3242      	adds	r2, #66	; 0x42
          __HAL_UNLOCK(hi2c);
 80034aa:	3440      	adds	r4, #64	; 0x40
          hi2c->Mode = HAL_I2C_MODE_NONE;
 80034ac:	7013      	strb	r3, [r2, #0]
          __HAL_UNLOCK(hi2c);
 80034ae:	7023      	strb	r3, [r4, #0]
      return HAL_ERROR;
 80034b0:	2001      	movs	r0, #1
 80034b2:	e7df      	b.n	8003474 <I2C_WaitOnTXISFlagUntilTimeout+0x14>

080034b4 <I2C_RequestMemoryWrite>:
{
 80034b4:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80034b6:	0014      	movs	r4, r2
 80034b8:	001e      	movs	r6, r3
  I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_RELOAD_MODE, I2C_GENERATE_START_WRITE);
 80034ba:	b2da      	uxtb	r2, r3
 80034bc:	4b15      	ldr	r3, [pc, #84]	; (8003514 <I2C_RequestMemoryWrite+0x60>)
{
 80034be:	0005      	movs	r5, r0
  I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_RELOAD_MODE, I2C_GENERATE_START_WRITE);
 80034c0:	9300      	str	r3, [sp, #0]
 80034c2:	2380      	movs	r3, #128	; 0x80
 80034c4:	045b      	lsls	r3, r3, #17
 80034c6:	f7ff ff29 	bl	800331c <I2C_TransferConfig>
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 80034ca:	9a07      	ldr	r2, [sp, #28]
 80034cc:	9906      	ldr	r1, [sp, #24]
 80034ce:	0028      	movs	r0, r5
 80034d0:	f7ff ffc6 	bl	8003460 <I2C_WaitOnTXISFlagUntilTimeout>
 80034d4:	2800      	cmp	r0, #0
 80034d6:	d001      	beq.n	80034dc <I2C_RequestMemoryWrite+0x28>
    return HAL_ERROR;
 80034d8:	2001      	movs	r0, #1
}
 80034da:	bd76      	pop	{r1, r2, r4, r5, r6, pc}
 80034dc:	682b      	ldr	r3, [r5, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 80034de:	2e01      	cmp	r6, #1
 80034e0:	d10d      	bne.n	80034fe <I2C_RequestMemoryWrite+0x4a>
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
 80034e2:	b2e4      	uxtb	r4, r4
 80034e4:	629c      	str	r4, [r3, #40]	; 0x28
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, Tickstart) != HAL_OK)
 80034e6:	9b07      	ldr	r3, [sp, #28]
 80034e8:	2200      	movs	r2, #0
 80034ea:	9300      	str	r3, [sp, #0]
 80034ec:	2180      	movs	r1, #128	; 0x80
 80034ee:	9b06      	ldr	r3, [sp, #24]
 80034f0:	0028      	movs	r0, r5
 80034f2:	f7ff ff8d 	bl	8003410 <I2C_WaitOnFlagUntilTimeout>
 80034f6:	1e43      	subs	r3, r0, #1
 80034f8:	4198      	sbcs	r0, r3
    return HAL_ERROR;
 80034fa:	b2c0      	uxtb	r0, r0
 80034fc:	e7ed      	b.n	80034da <I2C_RequestMemoryWrite+0x26>
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
 80034fe:	0a22      	lsrs	r2, r4, #8
 8003500:	629a      	str	r2, [r3, #40]	; 0x28
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8003502:	9906      	ldr	r1, [sp, #24]
 8003504:	9a07      	ldr	r2, [sp, #28]
 8003506:	0028      	movs	r0, r5
 8003508:	f7ff ffaa 	bl	8003460 <I2C_WaitOnTXISFlagUntilTimeout>
 800350c:	2800      	cmp	r0, #0
 800350e:	d1e3      	bne.n	80034d8 <I2C_RequestMemoryWrite+0x24>
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
 8003510:	682b      	ldr	r3, [r5, #0]
 8003512:	e7e6      	b.n	80034e2 <I2C_RequestMemoryWrite+0x2e>
 8003514:	80002000 	.word	0x80002000

08003518 <HAL_I2C_Init>:
{
 8003518:	b570      	push	{r4, r5, r6, lr}
 800351a:	0004      	movs	r4, r0
    return HAL_ERROR;
 800351c:	2001      	movs	r0, #1
  if (hi2c == NULL)
 800351e:	2c00      	cmp	r4, #0
 8003520:	d03f      	beq.n	80035a2 <HAL_I2C_Init+0x8a>
  if (hi2c->State == HAL_I2C_STATE_RESET)
 8003522:	0025      	movs	r5, r4
 8003524:	3541      	adds	r5, #65	; 0x41
 8003526:	782b      	ldrb	r3, [r5, #0]
 8003528:	b2db      	uxtb	r3, r3
 800352a:	2b00      	cmp	r3, #0
 800352c:	d105      	bne.n	800353a <HAL_I2C_Init+0x22>
    hi2c->Lock = HAL_UNLOCKED;
 800352e:	0022      	movs	r2, r4
 8003530:	3240      	adds	r2, #64	; 0x40
 8003532:	7013      	strb	r3, [r2, #0]
    HAL_I2C_MspInit(hi2c);
 8003534:	0020      	movs	r0, r4
 8003536:	f7ff f88f 	bl	8002658 <HAL_I2C_MspInit>
  hi2c->State = HAL_I2C_STATE_BUSY;
 800353a:	2324      	movs	r3, #36	; 0x24
  __HAL_I2C_DISABLE(hi2c);
 800353c:	2101      	movs	r1, #1
  hi2c->State = HAL_I2C_STATE_BUSY;
 800353e:	702b      	strb	r3, [r5, #0]
  __HAL_I2C_DISABLE(hi2c);
 8003540:	6823      	ldr	r3, [r4, #0]
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
 8003542:	68e0      	ldr	r0, [r4, #12]
  __HAL_I2C_DISABLE(hi2c);
 8003544:	681a      	ldr	r2, [r3, #0]
 8003546:	68a6      	ldr	r6, [r4, #8]
 8003548:	438a      	bics	r2, r1
 800354a:	601a      	str	r2, [r3, #0]
  hi2c->Instance->TIMINGR = hi2c->Init.Timing & TIMING_CLEAR_MASK;
 800354c:	6861      	ldr	r1, [r4, #4]
 800354e:	4a1a      	ldr	r2, [pc, #104]	; (80035b8 <HAL_I2C_Init+0xa0>)
 8003550:	400a      	ands	r2, r1
 8003552:	611a      	str	r2, [r3, #16]
  hi2c->Instance->OAR1 &= ~I2C_OAR1_OA1EN;
 8003554:	6899      	ldr	r1, [r3, #8]
 8003556:	4a19      	ldr	r2, [pc, #100]	; (80035bc <HAL_I2C_Init+0xa4>)
 8003558:	4011      	ands	r1, r2
 800355a:	6099      	str	r1, [r3, #8]
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
 800355c:	2801      	cmp	r0, #1
 800355e:	d121      	bne.n	80035a4 <HAL_I2C_Init+0x8c>
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | hi2c->Init.OwnAddress1);
 8003560:	2180      	movs	r1, #128	; 0x80
 8003562:	0209      	lsls	r1, r1, #8
 8003564:	4331      	orrs	r1, r6
 8003566:	6099      	str	r1, [r3, #8]
  hi2c->Instance->CR2 |= (I2C_CR2_AUTOEND | I2C_CR2_NACK);
 8003568:	6858      	ldr	r0, [r3, #4]
 800356a:	4915      	ldr	r1, [pc, #84]	; (80035c0 <HAL_I2C_Init+0xa8>)
 800356c:	4301      	orrs	r1, r0
 800356e:	6059      	str	r1, [r3, #4]
  hi2c->Instance->OAR2 &= ~I2C_DUALADDRESS_ENABLE;
 8003570:	68d9      	ldr	r1, [r3, #12]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8003572:	2000      	movs	r0, #0
  hi2c->Instance->OAR2 &= ~I2C_DUALADDRESS_ENABLE;
 8003574:	400a      	ands	r2, r1
 8003576:	60da      	str	r2, [r3, #12]
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | (hi2c->Init.OwnAddress2Masks << 8));
 8003578:	6961      	ldr	r1, [r4, #20]
 800357a:	6922      	ldr	r2, [r4, #16]
 800357c:	430a      	orrs	r2, r1
 800357e:	69a1      	ldr	r1, [r4, #24]
 8003580:	0209      	lsls	r1, r1, #8
 8003582:	430a      	orrs	r2, r1
 8003584:	60da      	str	r2, [r3, #12]
  hi2c->Instance->CR1 = (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode);
 8003586:	6a21      	ldr	r1, [r4, #32]
 8003588:	69e2      	ldr	r2, [r4, #28]
 800358a:	430a      	orrs	r2, r1
 800358c:	601a      	str	r2, [r3, #0]
  __HAL_I2C_ENABLE(hi2c);
 800358e:	2201      	movs	r2, #1
 8003590:	6819      	ldr	r1, [r3, #0]
 8003592:	430a      	orrs	r2, r1
 8003594:	601a      	str	r2, [r3, #0]
  hi2c->State = HAL_I2C_STATE_READY;
 8003596:	2320      	movs	r3, #32
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8003598:	6460      	str	r0, [r4, #68]	; 0x44
  hi2c->State = HAL_I2C_STATE_READY;
 800359a:	702b      	strb	r3, [r5, #0]
  hi2c->PreviousState = I2C_STATE_NONE;
 800359c:	6320      	str	r0, [r4, #48]	; 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 800359e:	3442      	adds	r4, #66	; 0x42
 80035a0:	7020      	strb	r0, [r4, #0]
}
 80035a2:	bd70      	pop	{r4, r5, r6, pc}
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | I2C_OAR1_OA1MODE | hi2c->Init.OwnAddress1);
 80035a4:	2184      	movs	r1, #132	; 0x84
 80035a6:	0209      	lsls	r1, r1, #8
 80035a8:	4331      	orrs	r1, r6
 80035aa:	6099      	str	r1, [r3, #8]
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT)
 80035ac:	2802      	cmp	r0, #2
 80035ae:	d1db      	bne.n	8003568 <HAL_I2C_Init+0x50>
    hi2c->Instance->CR2 = (I2C_CR2_ADD10);
 80035b0:	2180      	movs	r1, #128	; 0x80
 80035b2:	0109      	lsls	r1, r1, #4
 80035b4:	6059      	str	r1, [r3, #4]
 80035b6:	e7d7      	b.n	8003568 <HAL_I2C_Init+0x50>
 80035b8:	f0ffffff 	.word	0xf0ffffff
 80035bc:	ffff7fff 	.word	0xffff7fff
 80035c0:	02008000 	.word	0x02008000

080035c4 <HAL_I2C_Mem_Write>:
{
 80035c4:	b5f0      	push	{r4, r5, r6, r7, lr}
  if (hi2c->State == HAL_I2C_STATE_READY)
 80035c6:	0007      	movs	r7, r0
{
 80035c8:	b089      	sub	sp, #36	; 0x24
 80035ca:	9307      	str	r3, [sp, #28]
 80035cc:	ab0e      	add	r3, sp, #56	; 0x38
 80035ce:	9206      	str	r2, [sp, #24]
 80035d0:	cb04      	ldmia	r3!, {r2}
  if (hi2c->State == HAL_I2C_STATE_READY)
 80035d2:	3741      	adds	r7, #65	; 0x41
{
 80035d4:	881b      	ldrh	r3, [r3, #0]
 80035d6:	9204      	str	r2, [sp, #16]
 80035d8:	9305      	str	r3, [sp, #20]
  if (hi2c->State == HAL_I2C_STATE_READY)
 80035da:	783b      	ldrb	r3, [r7, #0]
{
 80035dc:	0004      	movs	r4, r0
 80035de:	000d      	movs	r5, r1
    return HAL_BUSY;
 80035e0:	2002      	movs	r0, #2
  if (hi2c->State == HAL_I2C_STATE_READY)
 80035e2:	2b20      	cmp	r3, #32
 80035e4:	d108      	bne.n	80035f8 <HAL_I2C_Mem_Write+0x34>
    if ((pData == NULL) || (Size == 0U))
 80035e6:	2a00      	cmp	r2, #0
 80035e8:	d002      	beq.n	80035f0 <HAL_I2C_Mem_Write+0x2c>
 80035ea:	9b05      	ldr	r3, [sp, #20]
 80035ec:	2b00      	cmp	r3, #0
 80035ee:	d105      	bne.n	80035fc <HAL_I2C_Mem_Write+0x38>
      hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
 80035f0:	2380      	movs	r3, #128	; 0x80
 80035f2:	009b      	lsls	r3, r3, #2
 80035f4:	6463      	str	r3, [r4, #68]	; 0x44
      return HAL_ERROR;
 80035f6:	2001      	movs	r0, #1
}
 80035f8:	b009      	add	sp, #36	; 0x24
 80035fa:	bdf0      	pop	{r4, r5, r6, r7, pc}
    __HAL_LOCK(hi2c);
 80035fc:	0023      	movs	r3, r4
 80035fe:	3340      	adds	r3, #64	; 0x40
 8003600:	9303      	str	r3, [sp, #12]
 8003602:	781b      	ldrb	r3, [r3, #0]
 8003604:	2b01      	cmp	r3, #1
 8003606:	d0f7      	beq.n	80035f8 <HAL_I2C_Mem_Write+0x34>
 8003608:	2201      	movs	r2, #1
 800360a:	9b03      	ldr	r3, [sp, #12]
 800360c:	701a      	strb	r2, [r3, #0]
    tickstart = HAL_GetTick();
 800360e:	f7ff fa4b 	bl	8002aa8 <HAL_GetTick>
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK)
 8003612:	2180      	movs	r1, #128	; 0x80
    tickstart = HAL_GetTick();
 8003614:	9002      	str	r0, [sp, #8]
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK)
 8003616:	9000      	str	r0, [sp, #0]
 8003618:	2319      	movs	r3, #25
 800361a:	2201      	movs	r2, #1
 800361c:	0209      	lsls	r1, r1, #8
 800361e:	0020      	movs	r0, r4
 8003620:	f7ff fef6 	bl	8003410 <I2C_WaitOnFlagUntilTimeout>
 8003624:	1e06      	subs	r6, r0, #0
 8003626:	d1e6      	bne.n	80035f6 <HAL_I2C_Mem_Write+0x32>
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 8003628:	2321      	movs	r3, #33	; 0x21
 800362a:	703b      	strb	r3, [r7, #0]
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 800362c:	0027      	movs	r7, r4
 800362e:	331f      	adds	r3, #31
 8003630:	3742      	adds	r7, #66	; 0x42
 8003632:	703b      	strb	r3, [r7, #0]
    hi2c->pBuffPtr  = pData;
 8003634:	9b04      	ldr	r3, [sp, #16]
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8003636:	6460      	str	r0, [r4, #68]	; 0x44
    hi2c->pBuffPtr  = pData;
 8003638:	6263      	str	r3, [r4, #36]	; 0x24
    hi2c->XferCount = Size;
 800363a:	9b05      	ldr	r3, [sp, #20]
    hi2c->XferISR   = NULL;
 800363c:	6360      	str	r0, [r4, #52]	; 0x34
    hi2c->XferCount = Size;
 800363e:	8563      	strh	r3, [r4, #42]	; 0x2a
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 8003640:	9b02      	ldr	r3, [sp, #8]
 8003642:	9a06      	ldr	r2, [sp, #24]
 8003644:	9301      	str	r3, [sp, #4]
 8003646:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8003648:	0029      	movs	r1, r5
 800364a:	9300      	str	r3, [sp, #0]
 800364c:	0020      	movs	r0, r4
 800364e:	9b07      	ldr	r3, [sp, #28]
 8003650:	f7ff ff30 	bl	80034b4 <I2C_RequestMemoryWrite>
 8003654:	2800      	cmp	r0, #0
 8003656:	d002      	beq.n	800365e <HAL_I2C_Mem_Write+0x9a>
      __HAL_UNLOCK(hi2c);
 8003658:	9b03      	ldr	r3, [sp, #12]
 800365a:	701e      	strb	r6, [r3, #0]
 800365c:	e7cb      	b.n	80035f6 <HAL_I2C_Mem_Write+0x32>
    if (hi2c->XferCount > MAX_NBYTE_SIZE)
 800365e:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8003660:	2bff      	cmp	r3, #255	; 0xff
 8003662:	d953      	bls.n	800370c <HAL_I2C_Mem_Write+0x148>
      hi2c->XferSize = MAX_NBYTE_SIZE;
 8003664:	22ff      	movs	r2, #255	; 0xff
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE, I2C_NO_STARTSTOP);
 8003666:	2380      	movs	r3, #128	; 0x80
      hi2c->XferSize = MAX_NBYTE_SIZE;
 8003668:	8522      	strh	r2, [r4, #40]	; 0x28
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE, I2C_NO_STARTSTOP);
 800366a:	045b      	lsls	r3, r3, #17
 800366c:	9000      	str	r0, [sp, #0]
 800366e:	0029      	movs	r1, r5
 8003670:	0020      	movs	r0, r4
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_STARTSTOP);
 8003672:	2680      	movs	r6, #128	; 0x80
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE, I2C_NO_STARTSTOP);
 8003674:	f7ff fe52 	bl	800331c <I2C_TransferConfig>
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_STARTSTOP);
 8003678:	04b6      	lsls	r6, r6, #18
      if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 800367a:	9a02      	ldr	r2, [sp, #8]
 800367c:	9910      	ldr	r1, [sp, #64]	; 0x40
 800367e:	0020      	movs	r0, r4
 8003680:	f7ff feee 	bl	8003460 <I2C_WaitOnTXISFlagUntilTimeout>
 8003684:	2800      	cmp	r0, #0
 8003686:	d1b6      	bne.n	80035f6 <HAL_I2C_Mem_Write+0x32>
      hi2c->Instance->TXDR = *hi2c->pBuffPtr;
 8003688:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800368a:	6822      	ldr	r2, [r4, #0]
 800368c:	7819      	ldrb	r1, [r3, #0]
      hi2c->pBuffPtr++;
 800368e:	3301      	adds	r3, #1
      hi2c->Instance->TXDR = *hi2c->pBuffPtr;
 8003690:	6291      	str	r1, [r2, #40]	; 0x28
      hi2c->pBuffPtr++;
 8003692:	6263      	str	r3, [r4, #36]	; 0x24
      hi2c->XferCount--;
 8003694:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
      hi2c->XferSize--;
 8003696:	8d22      	ldrh	r2, [r4, #40]	; 0x28
      hi2c->XferCount--;
 8003698:	3b01      	subs	r3, #1
 800369a:	b29b      	uxth	r3, r3
 800369c:	8563      	strh	r3, [r4, #42]	; 0x2a
      hi2c->XferSize--;
 800369e:	3a01      	subs	r2, #1
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
 80036a0:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
      hi2c->XferSize--;
 80036a2:	b292      	uxth	r2, r2
 80036a4:	8522      	strh	r2, [r4, #40]	; 0x28
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
 80036a6:	2b00      	cmp	r3, #0
 80036a8:	d017      	beq.n	80036da <HAL_I2C_Mem_Write+0x116>
 80036aa:	2a00      	cmp	r2, #0
 80036ac:	d115      	bne.n	80036da <HAL_I2C_Mem_Write+0x116>
        if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, tickstart) != HAL_OK)
 80036ae:	9b02      	ldr	r3, [sp, #8]
 80036b0:	2180      	movs	r1, #128	; 0x80
 80036b2:	9300      	str	r3, [sp, #0]
 80036b4:	0020      	movs	r0, r4
 80036b6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80036b8:	f7ff feaa 	bl	8003410 <I2C_WaitOnFlagUntilTimeout>
 80036bc:	2800      	cmp	r0, #0
 80036be:	d19a      	bne.n	80035f6 <HAL_I2C_Mem_Write+0x32>
        if (hi2c->XferCount > MAX_NBYTE_SIZE)
 80036c0:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 80036c2:	2bff      	cmp	r3, #255	; 0xff
 80036c4:	d92a      	bls.n	800371c <HAL_I2C_Mem_Write+0x158>
          hi2c->XferSize = MAX_NBYTE_SIZE;
 80036c6:	23ff      	movs	r3, #255	; 0xff
 80036c8:	8523      	strh	r3, [r4, #40]	; 0x28
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE, I2C_NO_STARTSTOP);
 80036ca:	2380      	movs	r3, #128	; 0x80
 80036cc:	22ff      	movs	r2, #255	; 0xff
 80036ce:	9000      	str	r0, [sp, #0]
 80036d0:	045b      	lsls	r3, r3, #17
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_STARTSTOP);
 80036d2:	0029      	movs	r1, r5
 80036d4:	0020      	movs	r0, r4
 80036d6:	f7ff fe21 	bl	800331c <I2C_TransferConfig>
    while (hi2c->XferCount > 0U);
 80036da:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 80036dc:	2b00      	cmp	r3, #0
 80036de:	d1cc      	bne.n	800367a <HAL_I2C_Mem_Write+0xb6>
    if (I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 80036e0:	9a02      	ldr	r2, [sp, #8]
 80036e2:	9910      	ldr	r1, [sp, #64]	; 0x40
 80036e4:	0020      	movs	r0, r4
 80036e6:	f7ff fe6b 	bl	80033c0 <I2C_WaitOnSTOPFlagUntilTimeout>
 80036ea:	2800      	cmp	r0, #0
 80036ec:	d000      	beq.n	80036f0 <HAL_I2C_Mem_Write+0x12c>
 80036ee:	e782      	b.n	80035f6 <HAL_I2C_Mem_Write+0x32>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 80036f0:	2120      	movs	r1, #32
 80036f2:	6823      	ldr	r3, [r4, #0]
    I2C_RESET_CR2(hi2c);
 80036f4:	4d0d      	ldr	r5, [pc, #52]	; (800372c <HAL_I2C_Mem_Write+0x168>)
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 80036f6:	61d9      	str	r1, [r3, #28]
    I2C_RESET_CR2(hi2c);
 80036f8:	685a      	ldr	r2, [r3, #4]
 80036fa:	402a      	ands	r2, r5
 80036fc:	605a      	str	r2, [r3, #4]
    hi2c->State = HAL_I2C_STATE_READY;
 80036fe:	0023      	movs	r3, r4
    __HAL_UNLOCK(hi2c);
 8003700:	3440      	adds	r4, #64	; 0x40
    hi2c->State = HAL_I2C_STATE_READY;
 8003702:	3341      	adds	r3, #65	; 0x41
 8003704:	7019      	strb	r1, [r3, #0]
    hi2c->Mode  = HAL_I2C_MODE_NONE;
 8003706:	7038      	strb	r0, [r7, #0]
    __HAL_UNLOCK(hi2c);
 8003708:	7020      	strb	r0, [r4, #0]
    return HAL_OK;
 800370a:	e775      	b.n	80035f8 <HAL_I2C_Mem_Write+0x34>
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_STARTSTOP);
 800370c:	2380      	movs	r3, #128	; 0x80
      hi2c->XferSize = hi2c->XferCount;
 800370e:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_STARTSTOP);
 8003710:	049b      	lsls	r3, r3, #18
      hi2c->XferSize = hi2c->XferCount;
 8003712:	b292      	uxth	r2, r2
 8003714:	8522      	strh	r2, [r4, #40]	; 0x28
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_STARTSTOP);
 8003716:	b2d2      	uxtb	r2, r2
 8003718:	9000      	str	r0, [sp, #0]
 800371a:	e7a8      	b.n	800366e <HAL_I2C_Mem_Write+0xaa>
          hi2c->XferSize = hi2c->XferCount;
 800371c:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_STARTSTOP);
 800371e:	0033      	movs	r3, r6
          hi2c->XferSize = hi2c->XferCount;
 8003720:	b292      	uxth	r2, r2
 8003722:	8522      	strh	r2, [r4, #40]	; 0x28
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_STARTSTOP);
 8003724:	b2d2      	uxtb	r2, r2
 8003726:	9000      	str	r0, [sp, #0]
 8003728:	e7d3      	b.n	80036d2 <HAL_I2C_Mem_Write+0x10e>
 800372a:	46c0      	nop			; (mov r8, r8)
 800372c:	fe00e800 	.word	0xfe00e800

08003730 <HAL_I2CEx_ConfigAnalogFilter>:
  *                the configuration information for the specified I2Cx peripheral.
  * @param  AnalogFilter New state of the Analog filter.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2CEx_ConfigAnalogFilter(I2C_HandleTypeDef *hi2c, uint32_t AnalogFilter)
{
 8003730:	b5f0      	push	{r4, r5, r6, r7, lr}
  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_ANALOG_FILTER(AnalogFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 8003732:	0004      	movs	r4, r0
 8003734:	3441      	adds	r4, #65	; 0x41
 8003736:	7822      	ldrb	r2, [r4, #0]
{
 8003738:	0003      	movs	r3, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 800373a:	b2d2      	uxtb	r2, r2

    return HAL_OK;
  }
  else
  {
    return HAL_BUSY;
 800373c:	2002      	movs	r0, #2
  if (hi2c->State == HAL_I2C_STATE_READY)
 800373e:	2a20      	cmp	r2, #32
 8003740:	d118      	bne.n	8003774 <HAL_I2CEx_ConfigAnalogFilter+0x44>
    __HAL_LOCK(hi2c);
 8003742:	001d      	movs	r5, r3
 8003744:	3540      	adds	r5, #64	; 0x40
 8003746:	782e      	ldrb	r6, [r5, #0]
 8003748:	2e01      	cmp	r6, #1
 800374a:	d013      	beq.n	8003774 <HAL_I2CEx_ConfigAnalogFilter+0x44>
    __HAL_I2C_DISABLE(hi2c);
 800374c:	681b      	ldr	r3, [r3, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
 800374e:	3022      	adds	r0, #34	; 0x22
 8003750:	7020      	strb	r0, [r4, #0]
    __HAL_I2C_DISABLE(hi2c);
 8003752:	681e      	ldr	r6, [r3, #0]
 8003754:	3823      	subs	r0, #35	; 0x23
 8003756:	4386      	bics	r6, r0
 8003758:	601e      	str	r6, [r3, #0]
    hi2c->Instance->CR1 &= ~(I2C_CR1_ANFOFF);
 800375a:	681e      	ldr	r6, [r3, #0]
 800375c:	4f06      	ldr	r7, [pc, #24]	; (8003778 <HAL_I2CEx_ConfigAnalogFilter+0x48>)
 800375e:	403e      	ands	r6, r7
 8003760:	601e      	str	r6, [r3, #0]
    hi2c->Instance->CR1 |= AnalogFilter;
 8003762:	681e      	ldr	r6, [r3, #0]
 8003764:	4331      	orrs	r1, r6
 8003766:	6019      	str	r1, [r3, #0]
    __HAL_I2C_ENABLE(hi2c);
 8003768:	6819      	ldr	r1, [r3, #0]
 800376a:	4308      	orrs	r0, r1
 800376c:	6018      	str	r0, [r3, #0]
    __HAL_UNLOCK(hi2c);
 800376e:	2000      	movs	r0, #0
    hi2c->State = HAL_I2C_STATE_READY;
 8003770:	7022      	strb	r2, [r4, #0]
    __HAL_UNLOCK(hi2c);
 8003772:	7028      	strb	r0, [r5, #0]
  }
}
 8003774:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8003776:	46c0      	nop			; (mov r8, r8)
 8003778:	ffffefff 	.word	0xffffefff

0800377c <HAL_I2CEx_ConfigDigitalFilter>:
  *                the configuration information for the specified I2Cx peripheral.
  * @param  DigitalFilter Coefficient of digital noise filter between Min_Data=0x00 and Max_Data=0x0F.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2CEx_ConfigDigitalFilter(I2C_HandleTypeDef *hi2c, uint32_t DigitalFilter)
{
 800377c:	b5f0      	push	{r4, r5, r6, r7, lr}

  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_DIGITAL_FILTER(DigitalFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 800377e:	0005      	movs	r5, r0
 8003780:	3541      	adds	r5, #65	; 0x41
 8003782:	782a      	ldrb	r2, [r5, #0]
{
 8003784:	0003      	movs	r3, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 8003786:	b2d2      	uxtb	r2, r2

    return HAL_OK;
  }
  else
  {
    return HAL_BUSY;
 8003788:	2002      	movs	r0, #2
  if (hi2c->State == HAL_I2C_STATE_READY)
 800378a:	2a20      	cmp	r2, #32
 800378c:	d117      	bne.n	80037be <HAL_I2CEx_ConfigDigitalFilter+0x42>
    __HAL_LOCK(hi2c);
 800378e:	001c      	movs	r4, r3
 8003790:	3440      	adds	r4, #64	; 0x40
 8003792:	7826      	ldrb	r6, [r4, #0]
 8003794:	2e01      	cmp	r6, #1
 8003796:	d012      	beq.n	80037be <HAL_I2CEx_ConfigDigitalFilter+0x42>
    __HAL_I2C_DISABLE(hi2c);
 8003798:	681b      	ldr	r3, [r3, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
 800379a:	3022      	adds	r0, #34	; 0x22
 800379c:	7028      	strb	r0, [r5, #0]
    __HAL_I2C_DISABLE(hi2c);
 800379e:	681e      	ldr	r6, [r3, #0]
 80037a0:	3823      	subs	r0, #35	; 0x23
 80037a2:	4386      	bics	r6, r0
 80037a4:	601e      	str	r6, [r3, #0]
    tmpreg = hi2c->Instance->CR1;
 80037a6:	681e      	ldr	r6, [r3, #0]
    tmpreg &= ~(I2C_CR1_DNF);
 80037a8:	4f05      	ldr	r7, [pc, #20]	; (80037c0 <HAL_I2CEx_ConfigDigitalFilter+0x44>)
    tmpreg |= DigitalFilter << 8U;
 80037aa:	0209      	lsls	r1, r1, #8
    tmpreg &= ~(I2C_CR1_DNF);
 80037ac:	403e      	ands	r6, r7
    tmpreg |= DigitalFilter << 8U;
 80037ae:	4331      	orrs	r1, r6
    hi2c->Instance->CR1 = tmpreg;
 80037b0:	6019      	str	r1, [r3, #0]
    __HAL_I2C_ENABLE(hi2c);
 80037b2:	6819      	ldr	r1, [r3, #0]
 80037b4:	4308      	orrs	r0, r1
 80037b6:	6018      	str	r0, [r3, #0]
    __HAL_UNLOCK(hi2c);
 80037b8:	2000      	movs	r0, #0
    hi2c->State = HAL_I2C_STATE_READY;
 80037ba:	702a      	strb	r2, [r5, #0]
    __HAL_UNLOCK(hi2c);
 80037bc:	7020      	strb	r0, [r4, #0]
  }
}
 80037be:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80037c0:	fffff0ff 	.word	0xfffff0ff

080037c4 <HAL_RCC_OscConfig>:
  *         supported by this macro. User should request a transition to HSE Off
  *         first and then HSE On or HSE Bypass.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 80037c4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80037c6:	0004      	movs	r4, r0
 80037c8:	b085      	sub	sp, #20
  uint32_t tickstart;
  uint32_t pll_config;
  uint32_t pll_config2;

  /* Check Null pointer */
  if(RCC_OscInitStruct == NULL)
 80037ca:	2800      	cmp	r0, #0
 80037cc:	d102      	bne.n	80037d4 <HAL_RCC_OscConfig+0x10>
  {
    return HAL_ERROR;
 80037ce:	2001      	movs	r0, #1
      }
    }
  }

  return HAL_OK;
}
 80037d0:	b005      	add	sp, #20
 80037d2:	bdf0      	pop	{r4, r5, r6, r7, pc}
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 80037d4:	6803      	ldr	r3, [r0, #0]
 80037d6:	07db      	lsls	r3, r3, #31
 80037d8:	d433      	bmi.n	8003842 <HAL_RCC_OscConfig+0x7e>
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 80037da:	6823      	ldr	r3, [r4, #0]
 80037dc:	079b      	lsls	r3, r3, #30
 80037de:	d500      	bpl.n	80037e2 <HAL_RCC_OscConfig+0x1e>
 80037e0:	e087      	b.n	80038f2 <HAL_RCC_OscConfig+0x12e>
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 80037e2:	6823      	ldr	r3, [r4, #0]
 80037e4:	071b      	lsls	r3, r3, #28
 80037e6:	d500      	bpl.n	80037ea <HAL_RCC_OscConfig+0x26>
 80037e8:	e0c8      	b.n	800397c <HAL_RCC_OscConfig+0x1b8>
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 80037ea:	6823      	ldr	r3, [r4, #0]
 80037ec:	075b      	lsls	r3, r3, #29
 80037ee:	d500      	bpl.n	80037f2 <HAL_RCC_OscConfig+0x2e>
 80037f0:	e0eb      	b.n	80039ca <HAL_RCC_OscConfig+0x206>
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI14) == RCC_OSCILLATORTYPE_HSI14)
 80037f2:	6823      	ldr	r3, [r4, #0]
 80037f4:	06db      	lsls	r3, r3, #27
 80037f6:	d51a      	bpl.n	800382e <HAL_RCC_OscConfig+0x6a>
    if(RCC_OscInitStruct->HSI14State == RCC_HSI14_ON)
 80037f8:	6962      	ldr	r2, [r4, #20]
 80037fa:	4dbc      	ldr	r5, [pc, #752]	; (8003aec <HAL_RCC_OscConfig+0x328>)
 80037fc:	2304      	movs	r3, #4
 80037fe:	2a01      	cmp	r2, #1
 8003800:	d000      	beq.n	8003804 <HAL_RCC_OscConfig+0x40>
 8003802:	e157      	b.n	8003ab4 <HAL_RCC_OscConfig+0x2f0>
      __HAL_RCC_HSI14ADC_DISABLE();
 8003804:	6b69      	ldr	r1, [r5, #52]	; 0x34
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI14RDY) == RESET)
 8003806:	2602      	movs	r6, #2
      __HAL_RCC_HSI14ADC_DISABLE();
 8003808:	430b      	orrs	r3, r1
 800380a:	636b      	str	r3, [r5, #52]	; 0x34
      __HAL_RCC_HSI14_ENABLE();
 800380c:	6b6b      	ldr	r3, [r5, #52]	; 0x34
 800380e:	431a      	orrs	r2, r3
 8003810:	636a      	str	r2, [r5, #52]	; 0x34
      tickstart = HAL_GetTick();
 8003812:	f7ff f949 	bl	8002aa8 <HAL_GetTick>
 8003816:	0007      	movs	r7, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI14RDY) == RESET)
 8003818:	6b6b      	ldr	r3, [r5, #52]	; 0x34
 800381a:	4233      	tst	r3, r6
 800381c:	d100      	bne.n	8003820 <HAL_RCC_OscConfig+0x5c>
 800381e:	e142      	b.n	8003aa6 <HAL_RCC_OscConfig+0x2e2>
      __HAL_RCC_HSI14_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSI14CalibrationValue);
 8003820:	21f8      	movs	r1, #248	; 0xf8
 8003822:	6b6a      	ldr	r2, [r5, #52]	; 0x34
 8003824:	69a3      	ldr	r3, [r4, #24]
 8003826:	438a      	bics	r2, r1
 8003828:	00db      	lsls	r3, r3, #3
 800382a:	4313      	orrs	r3, r2
 800382c:	636b      	str	r3, [r5, #52]	; 0x34
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI48) == RCC_OSCILLATORTYPE_HSI48)
 800382e:	6823      	ldr	r3, [r4, #0]
 8003830:	069b      	lsls	r3, r3, #26
 8003832:	d500      	bpl.n	8003836 <HAL_RCC_OscConfig+0x72>
 8003834:	e166      	b.n	8003b04 <HAL_RCC_OscConfig+0x340>
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 8003836:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8003838:	2a00      	cmp	r2, #0
 800383a:	d000      	beq.n	800383e <HAL_RCC_OscConfig+0x7a>
 800383c:	e1a3      	b.n	8003b86 <HAL_RCC_OscConfig+0x3c2>
  return HAL_OK;
 800383e:	2000      	movs	r0, #0
 8003840:	e7c6      	b.n	80037d0 <HAL_RCC_OscConfig+0xc>
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSE) 
 8003842:	210c      	movs	r1, #12
 8003844:	4da9      	ldr	r5, [pc, #676]	; (8003aec <HAL_RCC_OscConfig+0x328>)
 8003846:	686a      	ldr	r2, [r5, #4]
 8003848:	400a      	ands	r2, r1
 800384a:	2a04      	cmp	r2, #4
 800384c:	d00b      	beq.n	8003866 <HAL_RCC_OscConfig+0xa2>
       || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_HSE)))
 800384e:	686b      	ldr	r3, [r5, #4]
 8003850:	400b      	ands	r3, r1
 8003852:	2b08      	cmp	r3, #8
 8003854:	d10e      	bne.n	8003874 <HAL_RCC_OscConfig+0xb0>
 8003856:	22c0      	movs	r2, #192	; 0xc0
 8003858:	686b      	ldr	r3, [r5, #4]
 800385a:	0252      	lsls	r2, r2, #9
 800385c:	4013      	ands	r3, r2
 800385e:	2280      	movs	r2, #128	; 0x80
 8003860:	0252      	lsls	r2, r2, #9
 8003862:	4293      	cmp	r3, r2
 8003864:	d106      	bne.n	8003874 <HAL_RCC_OscConfig+0xb0>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 8003866:	682b      	ldr	r3, [r5, #0]
 8003868:	039b      	lsls	r3, r3, #14
 800386a:	d5b6      	bpl.n	80037da <HAL_RCC_OscConfig+0x16>
 800386c:	6863      	ldr	r3, [r4, #4]
 800386e:	2b00      	cmp	r3, #0
 8003870:	d1b3      	bne.n	80037da <HAL_RCC_OscConfig+0x16>
 8003872:	e7ac      	b.n	80037ce <HAL_RCC_OscConfig+0xa>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8003874:	6863      	ldr	r3, [r4, #4]
 8003876:	2b01      	cmp	r3, #1
 8003878:	d113      	bne.n	80038a2 <HAL_RCC_OscConfig+0xde>
 800387a:	2380      	movs	r3, #128	; 0x80
 800387c:	682a      	ldr	r2, [r5, #0]
 800387e:	025b      	lsls	r3, r3, #9
 8003880:	4313      	orrs	r3, r2
 8003882:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 8003884:	f7ff f910 	bl	8002aa8 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8003888:	2680      	movs	r6, #128	; 0x80
        tickstart = HAL_GetTick();
 800388a:	0007      	movs	r7, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800388c:	02b6      	lsls	r6, r6, #10
 800388e:	682b      	ldr	r3, [r5, #0]
 8003890:	4233      	tst	r3, r6
 8003892:	d1a2      	bne.n	80037da <HAL_RCC_OscConfig+0x16>
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 8003894:	f7ff f908 	bl	8002aa8 <HAL_GetTick>
 8003898:	1bc0      	subs	r0, r0, r7
 800389a:	2864      	cmp	r0, #100	; 0x64
 800389c:	d9f7      	bls.n	800388e <HAL_RCC_OscConfig+0xca>
            return HAL_TIMEOUT;
 800389e:	2003      	movs	r0, #3
 80038a0:	e796      	b.n	80037d0 <HAL_RCC_OscConfig+0xc>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 80038a2:	2b00      	cmp	r3, #0
 80038a4:	d115      	bne.n	80038d2 <HAL_RCC_OscConfig+0x10e>
 80038a6:	682b      	ldr	r3, [r5, #0]
 80038a8:	4a91      	ldr	r2, [pc, #580]	; (8003af0 <HAL_RCC_OscConfig+0x32c>)
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 80038aa:	2680      	movs	r6, #128	; 0x80
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 80038ac:	4013      	ands	r3, r2
 80038ae:	602b      	str	r3, [r5, #0]
 80038b0:	682b      	ldr	r3, [r5, #0]
 80038b2:	4a90      	ldr	r2, [pc, #576]	; (8003af4 <HAL_RCC_OscConfig+0x330>)
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 80038b4:	02b6      	lsls	r6, r6, #10
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 80038b6:	4013      	ands	r3, r2
 80038b8:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 80038ba:	f7ff f8f5 	bl	8002aa8 <HAL_GetTick>
 80038be:	0007      	movs	r7, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 80038c0:	682b      	ldr	r3, [r5, #0]
 80038c2:	4233      	tst	r3, r6
 80038c4:	d089      	beq.n	80037da <HAL_RCC_OscConfig+0x16>
           if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 80038c6:	f7ff f8ef 	bl	8002aa8 <HAL_GetTick>
 80038ca:	1bc0      	subs	r0, r0, r7
 80038cc:	2864      	cmp	r0, #100	; 0x64
 80038ce:	d9f7      	bls.n	80038c0 <HAL_RCC_OscConfig+0xfc>
 80038d0:	e7e5      	b.n	800389e <HAL_RCC_OscConfig+0xda>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 80038d2:	2b05      	cmp	r3, #5
 80038d4:	d105      	bne.n	80038e2 <HAL_RCC_OscConfig+0x11e>
 80038d6:	2380      	movs	r3, #128	; 0x80
 80038d8:	682a      	ldr	r2, [r5, #0]
 80038da:	02db      	lsls	r3, r3, #11
 80038dc:	4313      	orrs	r3, r2
 80038de:	602b      	str	r3, [r5, #0]
 80038e0:	e7cb      	b.n	800387a <HAL_RCC_OscConfig+0xb6>
 80038e2:	682b      	ldr	r3, [r5, #0]
 80038e4:	4a82      	ldr	r2, [pc, #520]	; (8003af0 <HAL_RCC_OscConfig+0x32c>)
 80038e6:	4013      	ands	r3, r2
 80038e8:	602b      	str	r3, [r5, #0]
 80038ea:	682b      	ldr	r3, [r5, #0]
 80038ec:	4a81      	ldr	r2, [pc, #516]	; (8003af4 <HAL_RCC_OscConfig+0x330>)
 80038ee:	4013      	ands	r3, r2
 80038f0:	e7c7      	b.n	8003882 <HAL_RCC_OscConfig+0xbe>
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSI) 
 80038f2:	220c      	movs	r2, #12
 80038f4:	4d7d      	ldr	r5, [pc, #500]	; (8003aec <HAL_RCC_OscConfig+0x328>)
 80038f6:	686b      	ldr	r3, [r5, #4]
 80038f8:	4213      	tst	r3, r2
 80038fa:	d00b      	beq.n	8003914 <HAL_RCC_OscConfig+0x150>
       || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_HSI)))
 80038fc:	686b      	ldr	r3, [r5, #4]
 80038fe:	4013      	ands	r3, r2
 8003900:	2b08      	cmp	r3, #8
 8003902:	d116      	bne.n	8003932 <HAL_RCC_OscConfig+0x16e>
 8003904:	22c0      	movs	r2, #192	; 0xc0
 8003906:	686b      	ldr	r3, [r5, #4]
 8003908:	0252      	lsls	r2, r2, #9
 800390a:	4013      	ands	r3, r2
 800390c:	2280      	movs	r2, #128	; 0x80
 800390e:	0212      	lsls	r2, r2, #8
 8003910:	4293      	cmp	r3, r2
 8003912:	d10e      	bne.n	8003932 <HAL_RCC_OscConfig+0x16e>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 8003914:	682b      	ldr	r3, [r5, #0]
 8003916:	079b      	lsls	r3, r3, #30
 8003918:	d503      	bpl.n	8003922 <HAL_RCC_OscConfig+0x15e>
 800391a:	68e3      	ldr	r3, [r4, #12]
 800391c:	2b01      	cmp	r3, #1
 800391e:	d000      	beq.n	8003922 <HAL_RCC_OscConfig+0x15e>
 8003920:	e755      	b.n	80037ce <HAL_RCC_OscConfig+0xa>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8003922:	21f8      	movs	r1, #248	; 0xf8
 8003924:	682a      	ldr	r2, [r5, #0]
 8003926:	6923      	ldr	r3, [r4, #16]
 8003928:	438a      	bics	r2, r1
 800392a:	00db      	lsls	r3, r3, #3
 800392c:	4313      	orrs	r3, r2
 800392e:	602b      	str	r3, [r5, #0]
 8003930:	e757      	b.n	80037e2 <HAL_RCC_OscConfig+0x1e>
      if(RCC_OscInitStruct->HSIState != RCC_HSI_OFF)
 8003932:	68e2      	ldr	r2, [r4, #12]
 8003934:	2301      	movs	r3, #1
 8003936:	2a00      	cmp	r2, #0
 8003938:	d00f      	beq.n	800395a <HAL_RCC_OscConfig+0x196>
        __HAL_RCC_HSI_ENABLE();
 800393a:	682a      	ldr	r2, [r5, #0]
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800393c:	2602      	movs	r6, #2
        __HAL_RCC_HSI_ENABLE();
 800393e:	4313      	orrs	r3, r2
 8003940:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 8003942:	f7ff f8b1 	bl	8002aa8 <HAL_GetTick>
 8003946:	0007      	movs	r7, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8003948:	682b      	ldr	r3, [r5, #0]
 800394a:	4233      	tst	r3, r6
 800394c:	d1e9      	bne.n	8003922 <HAL_RCC_OscConfig+0x15e>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 800394e:	f7ff f8ab 	bl	8002aa8 <HAL_GetTick>
 8003952:	1bc0      	subs	r0, r0, r7
 8003954:	2802      	cmp	r0, #2
 8003956:	d9f7      	bls.n	8003948 <HAL_RCC_OscConfig+0x184>
 8003958:	e7a1      	b.n	800389e <HAL_RCC_OscConfig+0xda>
        __HAL_RCC_HSI_DISABLE();
 800395a:	682a      	ldr	r2, [r5, #0]
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800395c:	2602      	movs	r6, #2
        __HAL_RCC_HSI_DISABLE();
 800395e:	439a      	bics	r2, r3
 8003960:	602a      	str	r2, [r5, #0]
        tickstart = HAL_GetTick();
 8003962:	f7ff f8a1 	bl	8002aa8 <HAL_GetTick>
 8003966:	0007      	movs	r7, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8003968:	682b      	ldr	r3, [r5, #0]
 800396a:	4233      	tst	r3, r6
 800396c:	d100      	bne.n	8003970 <HAL_RCC_OscConfig+0x1ac>
 800396e:	e738      	b.n	80037e2 <HAL_RCC_OscConfig+0x1e>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 8003970:	f7ff f89a 	bl	8002aa8 <HAL_GetTick>
 8003974:	1bc0      	subs	r0, r0, r7
 8003976:	2802      	cmp	r0, #2
 8003978:	d9f6      	bls.n	8003968 <HAL_RCC_OscConfig+0x1a4>
 800397a:	e790      	b.n	800389e <HAL_RCC_OscConfig+0xda>
    if(RCC_OscInitStruct->LSIState != RCC_LSI_OFF)
 800397c:	69e2      	ldr	r2, [r4, #28]
 800397e:	2301      	movs	r3, #1
 8003980:	4d5a      	ldr	r5, [pc, #360]	; (8003aec <HAL_RCC_OscConfig+0x328>)
 8003982:	2a00      	cmp	r2, #0
 8003984:	d010      	beq.n	80039a8 <HAL_RCC_OscConfig+0x1e4>
      __HAL_RCC_LSI_ENABLE();
 8003986:	6a6a      	ldr	r2, [r5, #36]	; 0x24
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 8003988:	2602      	movs	r6, #2
      __HAL_RCC_LSI_ENABLE();
 800398a:	4313      	orrs	r3, r2
 800398c:	626b      	str	r3, [r5, #36]	; 0x24
      tickstart = HAL_GetTick();
 800398e:	f7ff f88b 	bl	8002aa8 <HAL_GetTick>
 8003992:	0007      	movs	r7, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 8003994:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 8003996:	4233      	tst	r3, r6
 8003998:	d000      	beq.n	800399c <HAL_RCC_OscConfig+0x1d8>
 800399a:	e726      	b.n	80037ea <HAL_RCC_OscConfig+0x26>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 800399c:	f7ff f884 	bl	8002aa8 <HAL_GetTick>
 80039a0:	1bc0      	subs	r0, r0, r7
 80039a2:	2802      	cmp	r0, #2
 80039a4:	d9f6      	bls.n	8003994 <HAL_RCC_OscConfig+0x1d0>
 80039a6:	e77a      	b.n	800389e <HAL_RCC_OscConfig+0xda>
      __HAL_RCC_LSI_DISABLE();
 80039a8:	6a6a      	ldr	r2, [r5, #36]	; 0x24
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 80039aa:	2602      	movs	r6, #2
      __HAL_RCC_LSI_DISABLE();
 80039ac:	439a      	bics	r2, r3
 80039ae:	626a      	str	r2, [r5, #36]	; 0x24
      tickstart = HAL_GetTick();
 80039b0:	f7ff f87a 	bl	8002aa8 <HAL_GetTick>
 80039b4:	0007      	movs	r7, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 80039b6:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 80039b8:	4233      	tst	r3, r6
 80039ba:	d100      	bne.n	80039be <HAL_RCC_OscConfig+0x1fa>
 80039bc:	e715      	b.n	80037ea <HAL_RCC_OscConfig+0x26>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 80039be:	f7ff f873 	bl	8002aa8 <HAL_GetTick>
 80039c2:	1bc0      	subs	r0, r0, r7
 80039c4:	2802      	cmp	r0, #2
 80039c6:	d9f6      	bls.n	80039b6 <HAL_RCC_OscConfig+0x1f2>
 80039c8:	e769      	b.n	800389e <HAL_RCC_OscConfig+0xda>
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 80039ca:	2280      	movs	r2, #128	; 0x80
    FlagStatus       pwrclkchanged = RESET;
 80039cc:	2100      	movs	r1, #0
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 80039ce:	4d47      	ldr	r5, [pc, #284]	; (8003aec <HAL_RCC_OscConfig+0x328>)
 80039d0:	0552      	lsls	r2, r2, #21
 80039d2:	69eb      	ldr	r3, [r5, #28]
    FlagStatus       pwrclkchanged = RESET;
 80039d4:	9100      	str	r1, [sp, #0]
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 80039d6:	4213      	tst	r3, r2
 80039d8:	d108      	bne.n	80039ec <HAL_RCC_OscConfig+0x228>
      __HAL_RCC_PWR_CLK_ENABLE();
 80039da:	69eb      	ldr	r3, [r5, #28]
 80039dc:	4313      	orrs	r3, r2
 80039de:	61eb      	str	r3, [r5, #28]
 80039e0:	69eb      	ldr	r3, [r5, #28]
 80039e2:	4013      	ands	r3, r2
 80039e4:	9303      	str	r3, [sp, #12]
 80039e6:	9b03      	ldr	r3, [sp, #12]
      pwrclkchanged = SET;
 80039e8:	2301      	movs	r3, #1
 80039ea:	9300      	str	r3, [sp, #0]
    if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 80039ec:	2780      	movs	r7, #128	; 0x80
 80039ee:	4e42      	ldr	r6, [pc, #264]	; (8003af8 <HAL_RCC_OscConfig+0x334>)
 80039f0:	007f      	lsls	r7, r7, #1
 80039f2:	6833      	ldr	r3, [r6, #0]
 80039f4:	423b      	tst	r3, r7
 80039f6:	d006      	beq.n	8003a06 <HAL_RCC_OscConfig+0x242>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 80039f8:	68a3      	ldr	r3, [r4, #8]
 80039fa:	2b01      	cmp	r3, #1
 80039fc:	d113      	bne.n	8003a26 <HAL_RCC_OscConfig+0x262>
 80039fe:	6a2a      	ldr	r2, [r5, #32]
 8003a00:	4313      	orrs	r3, r2
 8003a02:	622b      	str	r3, [r5, #32]
 8003a04:	e030      	b.n	8003a68 <HAL_RCC_OscConfig+0x2a4>
      SET_BIT(PWR->CR, PWR_CR_DBP);
 8003a06:	6833      	ldr	r3, [r6, #0]
 8003a08:	433b      	orrs	r3, r7
 8003a0a:	6033      	str	r3, [r6, #0]
      tickstart = HAL_GetTick();
 8003a0c:	f7ff f84c 	bl	8002aa8 <HAL_GetTick>
 8003a10:	9001      	str	r0, [sp, #4]
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8003a12:	6833      	ldr	r3, [r6, #0]
 8003a14:	423b      	tst	r3, r7
 8003a16:	d1ef      	bne.n	80039f8 <HAL_RCC_OscConfig+0x234>
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 8003a18:	f7ff f846 	bl	8002aa8 <HAL_GetTick>
 8003a1c:	9b01      	ldr	r3, [sp, #4]
 8003a1e:	1ac0      	subs	r0, r0, r3
 8003a20:	2864      	cmp	r0, #100	; 0x64
 8003a22:	d9f6      	bls.n	8003a12 <HAL_RCC_OscConfig+0x24e>
 8003a24:	e73b      	b.n	800389e <HAL_RCC_OscConfig+0xda>
 8003a26:	2201      	movs	r2, #1
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8003a28:	2b00      	cmp	r3, #0
 8003a2a:	d114      	bne.n	8003a56 <HAL_RCC_OscConfig+0x292>
 8003a2c:	6a2b      	ldr	r3, [r5, #32]
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 8003a2e:	2702      	movs	r7, #2
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8003a30:	4393      	bics	r3, r2
 8003a32:	622b      	str	r3, [r5, #32]
 8003a34:	6a2b      	ldr	r3, [r5, #32]
 8003a36:	3203      	adds	r2, #3
 8003a38:	4393      	bics	r3, r2
 8003a3a:	622b      	str	r3, [r5, #32]
      tickstart = HAL_GetTick();
 8003a3c:	f7ff f834 	bl	8002aa8 <HAL_GetTick>
 8003a40:	0006      	movs	r6, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 8003a42:	6a2b      	ldr	r3, [r5, #32]
 8003a44:	423b      	tst	r3, r7
 8003a46:	d025      	beq.n	8003a94 <HAL_RCC_OscConfig+0x2d0>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8003a48:	f7ff f82e 	bl	8002aa8 <HAL_GetTick>
 8003a4c:	4b2b      	ldr	r3, [pc, #172]	; (8003afc <HAL_RCC_OscConfig+0x338>)
 8003a4e:	1b80      	subs	r0, r0, r6
 8003a50:	4298      	cmp	r0, r3
 8003a52:	d9f6      	bls.n	8003a42 <HAL_RCC_OscConfig+0x27e>
 8003a54:	e723      	b.n	800389e <HAL_RCC_OscConfig+0xda>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8003a56:	2b05      	cmp	r3, #5
 8003a58:	d10b      	bne.n	8003a72 <HAL_RCC_OscConfig+0x2ae>
 8003a5a:	6a29      	ldr	r1, [r5, #32]
 8003a5c:	3b01      	subs	r3, #1
 8003a5e:	430b      	orrs	r3, r1
 8003a60:	622b      	str	r3, [r5, #32]
 8003a62:	6a2b      	ldr	r3, [r5, #32]
 8003a64:	431a      	orrs	r2, r3
 8003a66:	622a      	str	r2, [r5, #32]
      tickstart = HAL_GetTick();
 8003a68:	f7ff f81e 	bl	8002aa8 <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8003a6c:	2702      	movs	r7, #2
      tickstart = HAL_GetTick();
 8003a6e:	0006      	movs	r6, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8003a70:	e00d      	b.n	8003a8e <HAL_RCC_OscConfig+0x2ca>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8003a72:	6a2b      	ldr	r3, [r5, #32]
 8003a74:	4393      	bics	r3, r2
 8003a76:	2204      	movs	r2, #4
 8003a78:	622b      	str	r3, [r5, #32]
 8003a7a:	6a2b      	ldr	r3, [r5, #32]
 8003a7c:	4393      	bics	r3, r2
 8003a7e:	e7c0      	b.n	8003a02 <HAL_RCC_OscConfig+0x23e>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8003a80:	f7ff f812 	bl	8002aa8 <HAL_GetTick>
 8003a84:	4b1d      	ldr	r3, [pc, #116]	; (8003afc <HAL_RCC_OscConfig+0x338>)
 8003a86:	1b80      	subs	r0, r0, r6
 8003a88:	4298      	cmp	r0, r3
 8003a8a:	d900      	bls.n	8003a8e <HAL_RCC_OscConfig+0x2ca>
 8003a8c:	e707      	b.n	800389e <HAL_RCC_OscConfig+0xda>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8003a8e:	6a2b      	ldr	r3, [r5, #32]
 8003a90:	423b      	tst	r3, r7
 8003a92:	d0f5      	beq.n	8003a80 <HAL_RCC_OscConfig+0x2bc>
    if(pwrclkchanged == SET)
 8003a94:	9b00      	ldr	r3, [sp, #0]
 8003a96:	2b01      	cmp	r3, #1
 8003a98:	d000      	beq.n	8003a9c <HAL_RCC_OscConfig+0x2d8>
 8003a9a:	e6aa      	b.n	80037f2 <HAL_RCC_OscConfig+0x2e>
      __HAL_RCC_PWR_CLK_DISABLE();
 8003a9c:	69eb      	ldr	r3, [r5, #28]
 8003a9e:	4a18      	ldr	r2, [pc, #96]	; (8003b00 <HAL_RCC_OscConfig+0x33c>)
 8003aa0:	4013      	ands	r3, r2
 8003aa2:	61eb      	str	r3, [r5, #28]
 8003aa4:	e6a5      	b.n	80037f2 <HAL_RCC_OscConfig+0x2e>
        if((HAL_GetTick() - tickstart) > HSI14_TIMEOUT_VALUE)
 8003aa6:	f7fe ffff 	bl	8002aa8 <HAL_GetTick>
 8003aaa:	1bc0      	subs	r0, r0, r7
 8003aac:	2802      	cmp	r0, #2
 8003aae:	d800      	bhi.n	8003ab2 <HAL_RCC_OscConfig+0x2ee>
 8003ab0:	e6b2      	b.n	8003818 <HAL_RCC_OscConfig+0x54>
 8003ab2:	e6f4      	b.n	800389e <HAL_RCC_OscConfig+0xda>
    else if(RCC_OscInitStruct->HSI14State == RCC_HSI14_ADC_CONTROL)
 8003ab4:	3205      	adds	r2, #5
 8003ab6:	d103      	bne.n	8003ac0 <HAL_RCC_OscConfig+0x2fc>
      __HAL_RCC_HSI14ADC_ENABLE();
 8003ab8:	6b6a      	ldr	r2, [r5, #52]	; 0x34
 8003aba:	439a      	bics	r2, r3
 8003abc:	636a      	str	r2, [r5, #52]	; 0x34
 8003abe:	e6af      	b.n	8003820 <HAL_RCC_OscConfig+0x5c>
      __HAL_RCC_HSI14ADC_DISABLE();
 8003ac0:	6b6a      	ldr	r2, [r5, #52]	; 0x34
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI14RDY) != RESET)
 8003ac2:	2602      	movs	r6, #2
      __HAL_RCC_HSI14ADC_DISABLE();
 8003ac4:	4313      	orrs	r3, r2
      __HAL_RCC_HSI14_DISABLE();
 8003ac6:	2201      	movs	r2, #1
      __HAL_RCC_HSI14ADC_DISABLE();
 8003ac8:	636b      	str	r3, [r5, #52]	; 0x34
      __HAL_RCC_HSI14_DISABLE();
 8003aca:	6b6b      	ldr	r3, [r5, #52]	; 0x34
 8003acc:	4393      	bics	r3, r2
 8003ace:	636b      	str	r3, [r5, #52]	; 0x34
      tickstart = HAL_GetTick();
 8003ad0:	f7fe ffea 	bl	8002aa8 <HAL_GetTick>
 8003ad4:	0007      	movs	r7, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI14RDY) != RESET)
 8003ad6:	6b6b      	ldr	r3, [r5, #52]	; 0x34
 8003ad8:	4233      	tst	r3, r6
 8003ada:	d100      	bne.n	8003ade <HAL_RCC_OscConfig+0x31a>
 8003adc:	e6a7      	b.n	800382e <HAL_RCC_OscConfig+0x6a>
        if((HAL_GetTick() - tickstart) > HSI14_TIMEOUT_VALUE)
 8003ade:	f7fe ffe3 	bl	8002aa8 <HAL_GetTick>
 8003ae2:	1bc0      	subs	r0, r0, r7
 8003ae4:	2802      	cmp	r0, #2
 8003ae6:	d9f6      	bls.n	8003ad6 <HAL_RCC_OscConfig+0x312>
 8003ae8:	e6d9      	b.n	800389e <HAL_RCC_OscConfig+0xda>
 8003aea:	46c0      	nop			; (mov r8, r8)
 8003aec:	40021000 	.word	0x40021000
 8003af0:	fffeffff 	.word	0xfffeffff
 8003af4:	fffbffff 	.word	0xfffbffff
 8003af8:	40007000 	.word	0x40007000
 8003afc:	00001388 	.word	0x00001388
 8003b00:	efffffff 	.word	0xefffffff
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSI48) ||
 8003b04:	210c      	movs	r1, #12
 8003b06:	4d53      	ldr	r5, [pc, #332]	; (8003c54 <HAL_RCC_OscConfig+0x490>)
 8003b08:	686a      	ldr	r2, [r5, #4]
 8003b0a:	400a      	ands	r2, r1
 8003b0c:	428a      	cmp	r2, r1
 8003b0e:	d009      	beq.n	8003b24 <HAL_RCC_OscConfig+0x360>
       ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_HSI48)))
 8003b10:	686b      	ldr	r3, [r5, #4]
 8003b12:	400b      	ands	r3, r1
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSI48) ||
 8003b14:	2b08      	cmp	r3, #8
 8003b16:	d10e      	bne.n	8003b36 <HAL_RCC_OscConfig+0x372>
       ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_HSI48)))
 8003b18:	22c0      	movs	r2, #192	; 0xc0
 8003b1a:	686b      	ldr	r3, [r5, #4]
 8003b1c:	0252      	lsls	r2, r2, #9
 8003b1e:	4013      	ands	r3, r2
 8003b20:	4293      	cmp	r3, r2
 8003b22:	d108      	bne.n	8003b36 <HAL_RCC_OscConfig+0x372>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) != RESET) && (RCC_OscInitStruct->HSI48State != RCC_HSI48_ON))
 8003b24:	6b6b      	ldr	r3, [r5, #52]	; 0x34
 8003b26:	03db      	lsls	r3, r3, #15
 8003b28:	d400      	bmi.n	8003b2c <HAL_RCC_OscConfig+0x368>
 8003b2a:	e684      	b.n	8003836 <HAL_RCC_OscConfig+0x72>
 8003b2c:	6a23      	ldr	r3, [r4, #32]
 8003b2e:	2b01      	cmp	r3, #1
 8003b30:	d000      	beq.n	8003b34 <HAL_RCC_OscConfig+0x370>
 8003b32:	e64c      	b.n	80037ce <HAL_RCC_OscConfig+0xa>
 8003b34:	e67f      	b.n	8003836 <HAL_RCC_OscConfig+0x72>
      if(RCC_OscInitStruct->HSI48State != RCC_HSI48_OFF)
 8003b36:	6a23      	ldr	r3, [r4, #32]
 8003b38:	2b00      	cmp	r3, #0
 8003b3a:	d011      	beq.n	8003b60 <HAL_RCC_OscConfig+0x39c>
        __HAL_RCC_HSI48_ENABLE();
 8003b3c:	2680      	movs	r6, #128	; 0x80
 8003b3e:	6b6b      	ldr	r3, [r5, #52]	; 0x34
 8003b40:	0276      	lsls	r6, r6, #9
 8003b42:	4333      	orrs	r3, r6
 8003b44:	636b      	str	r3, [r5, #52]	; 0x34
        tickstart = HAL_GetTick();
 8003b46:	f7fe ffaf 	bl	8002aa8 <HAL_GetTick>
 8003b4a:	0007      	movs	r7, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) == RESET)
 8003b4c:	6b6b      	ldr	r3, [r5, #52]	; 0x34
 8003b4e:	4233      	tst	r3, r6
 8003b50:	d000      	beq.n	8003b54 <HAL_RCC_OscConfig+0x390>
 8003b52:	e670      	b.n	8003836 <HAL_RCC_OscConfig+0x72>
          if((HAL_GetTick() - tickstart) > HSI48_TIMEOUT_VALUE)
 8003b54:	f7fe ffa8 	bl	8002aa8 <HAL_GetTick>
 8003b58:	1bc0      	subs	r0, r0, r7
 8003b5a:	2802      	cmp	r0, #2
 8003b5c:	d9f6      	bls.n	8003b4c <HAL_RCC_OscConfig+0x388>
 8003b5e:	e69e      	b.n	800389e <HAL_RCC_OscConfig+0xda>
        __HAL_RCC_HSI48_DISABLE();
 8003b60:	6b6b      	ldr	r3, [r5, #52]	; 0x34
 8003b62:	4a3d      	ldr	r2, [pc, #244]	; (8003c58 <HAL_RCC_OscConfig+0x494>)
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) != RESET)
 8003b64:	2680      	movs	r6, #128	; 0x80
        __HAL_RCC_HSI48_DISABLE();
 8003b66:	4013      	ands	r3, r2
 8003b68:	636b      	str	r3, [r5, #52]	; 0x34
        tickstart = HAL_GetTick();
 8003b6a:	f7fe ff9d 	bl	8002aa8 <HAL_GetTick>
 8003b6e:	0007      	movs	r7, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) != RESET)
 8003b70:	0276      	lsls	r6, r6, #9
 8003b72:	6b6b      	ldr	r3, [r5, #52]	; 0x34
 8003b74:	4233      	tst	r3, r6
 8003b76:	d100      	bne.n	8003b7a <HAL_RCC_OscConfig+0x3b6>
 8003b78:	e65d      	b.n	8003836 <HAL_RCC_OscConfig+0x72>
          if((HAL_GetTick() - tickstart) > HSI48_TIMEOUT_VALUE)
 8003b7a:	f7fe ff95 	bl	8002aa8 <HAL_GetTick>
 8003b7e:	1bc0      	subs	r0, r0, r7
 8003b80:	2802      	cmp	r0, #2
 8003b82:	d9f6      	bls.n	8003b72 <HAL_RCC_OscConfig+0x3ae>
 8003b84:	e68b      	b.n	800389e <HAL_RCC_OscConfig+0xda>
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 8003b86:	200c      	movs	r0, #12
 8003b88:	4b32      	ldr	r3, [pc, #200]	; (8003c54 <HAL_RCC_OscConfig+0x490>)
 8003b8a:	6859      	ldr	r1, [r3, #4]
 8003b8c:	001d      	movs	r5, r3
 8003b8e:	4001      	ands	r1, r0
 8003b90:	2908      	cmp	r1, #8
 8003b92:	d044      	beq.n	8003c1e <HAL_RCC_OscConfig+0x45a>
        __HAL_RCC_PLL_DISABLE();
 8003b94:	681b      	ldr	r3, [r3, #0]
 8003b96:	4931      	ldr	r1, [pc, #196]	; (8003c5c <HAL_RCC_OscConfig+0x498>)
 8003b98:	400b      	ands	r3, r1
 8003b9a:	602b      	str	r3, [r5, #0]
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 8003b9c:	2a02      	cmp	r2, #2
 8003b9e:	d12f      	bne.n	8003c00 <HAL_RCC_OscConfig+0x43c>
        tickstart = HAL_GetTick();
 8003ba0:	f7fe ff82 	bl	8002aa8 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 8003ba4:	2680      	movs	r6, #128	; 0x80
        tickstart = HAL_GetTick();
 8003ba6:	0007      	movs	r7, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 8003ba8:	04b6      	lsls	r6, r6, #18
 8003baa:	682b      	ldr	r3, [r5, #0]
 8003bac:	4233      	tst	r3, r6
 8003bae:	d121      	bne.n	8003bf4 <HAL_RCC_OscConfig+0x430>
        __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
 8003bb0:	220f      	movs	r2, #15
 8003bb2:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 8003bb4:	4393      	bics	r3, r2
 8003bb6:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8003bb8:	4313      	orrs	r3, r2
 8003bba:	62eb      	str	r3, [r5, #44]	; 0x2c
 8003bbc:	6aa1      	ldr	r1, [r4, #40]	; 0x28
 8003bbe:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8003bc0:	686a      	ldr	r2, [r5, #4]
 8003bc2:	430b      	orrs	r3, r1
 8003bc4:	4926      	ldr	r1, [pc, #152]	; (8003c60 <HAL_RCC_OscConfig+0x49c>)
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  == RESET)
 8003bc6:	2480      	movs	r4, #128	; 0x80
        __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
 8003bc8:	400a      	ands	r2, r1
 8003bca:	4313      	orrs	r3, r2
 8003bcc:	606b      	str	r3, [r5, #4]
        __HAL_RCC_PLL_ENABLE();
 8003bce:	2380      	movs	r3, #128	; 0x80
 8003bd0:	682a      	ldr	r2, [r5, #0]
 8003bd2:	045b      	lsls	r3, r3, #17
 8003bd4:	4313      	orrs	r3, r2
 8003bd6:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 8003bd8:	f7fe ff66 	bl	8002aa8 <HAL_GetTick>
 8003bdc:	0006      	movs	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  == RESET)
 8003bde:	04a4      	lsls	r4, r4, #18
 8003be0:	682b      	ldr	r3, [r5, #0]
 8003be2:	4223      	tst	r3, r4
 8003be4:	d000      	beq.n	8003be8 <HAL_RCC_OscConfig+0x424>
 8003be6:	e62a      	b.n	800383e <HAL_RCC_OscConfig+0x7a>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8003be8:	f7fe ff5e 	bl	8002aa8 <HAL_GetTick>
 8003bec:	1b80      	subs	r0, r0, r6
 8003bee:	2802      	cmp	r0, #2
 8003bf0:	d9f6      	bls.n	8003be0 <HAL_RCC_OscConfig+0x41c>
 8003bf2:	e654      	b.n	800389e <HAL_RCC_OscConfig+0xda>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8003bf4:	f7fe ff58 	bl	8002aa8 <HAL_GetTick>
 8003bf8:	1bc0      	subs	r0, r0, r7
 8003bfa:	2802      	cmp	r0, #2
 8003bfc:	d9d5      	bls.n	8003baa <HAL_RCC_OscConfig+0x3e6>
 8003bfe:	e64e      	b.n	800389e <HAL_RCC_OscConfig+0xda>
        tickstart = HAL_GetTick();
 8003c00:	f7fe ff52 	bl	8002aa8 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 8003c04:	2480      	movs	r4, #128	; 0x80
        tickstart = HAL_GetTick();
 8003c06:	0006      	movs	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 8003c08:	04a4      	lsls	r4, r4, #18
 8003c0a:	682b      	ldr	r3, [r5, #0]
 8003c0c:	4223      	tst	r3, r4
 8003c0e:	d100      	bne.n	8003c12 <HAL_RCC_OscConfig+0x44e>
 8003c10:	e615      	b.n	800383e <HAL_RCC_OscConfig+0x7a>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8003c12:	f7fe ff49 	bl	8002aa8 <HAL_GetTick>
 8003c16:	1b80      	subs	r0, r0, r6
 8003c18:	2802      	cmp	r0, #2
 8003c1a:	d9f6      	bls.n	8003c0a <HAL_RCC_OscConfig+0x446>
 8003c1c:	e63f      	b.n	800389e <HAL_RCC_OscConfig+0xda>
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 8003c1e:	2a01      	cmp	r2, #1
 8003c20:	d100      	bne.n	8003c24 <HAL_RCC_OscConfig+0x460>
 8003c22:	e5d4      	b.n	80037ce <HAL_RCC_OscConfig+0xa>
        if((READ_BIT(pll_config,  RCC_CFGR_PLLSRC)  != RCC_OscInitStruct->PLL.PLLSource) ||
 8003c24:	22c0      	movs	r2, #192	; 0xc0
        pll_config  = RCC->CFGR;
 8003c26:	6858      	ldr	r0, [r3, #4]
        if((READ_BIT(pll_config,  RCC_CFGR_PLLSRC)  != RCC_OscInitStruct->PLL.PLLSource) ||
 8003c28:	6aa1      	ldr	r1, [r4, #40]	; 0x28
 8003c2a:	0252      	lsls	r2, r2, #9
        pll_config2 = RCC->CFGR2;
 8003c2c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
        if((READ_BIT(pll_config,  RCC_CFGR_PLLSRC)  != RCC_OscInitStruct->PLL.PLLSource) ||
 8003c2e:	4002      	ands	r2, r0
 8003c30:	428a      	cmp	r2, r1
 8003c32:	d000      	beq.n	8003c36 <HAL_RCC_OscConfig+0x472>
 8003c34:	e5cb      	b.n	80037ce <HAL_RCC_OscConfig+0xa>
           (READ_BIT(pll_config2, RCC_CFGR2_PREDIV) != RCC_OscInitStruct->PLL.PREDIV)    ||
 8003c36:	220f      	movs	r2, #15
 8003c38:	4013      	ands	r3, r2
        if((READ_BIT(pll_config,  RCC_CFGR_PLLSRC)  != RCC_OscInitStruct->PLL.PLLSource) ||
 8003c3a:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8003c3c:	4293      	cmp	r3, r2
 8003c3e:	d000      	beq.n	8003c42 <HAL_RCC_OscConfig+0x47e>
 8003c40:	e5c5      	b.n	80037ce <HAL_RCC_OscConfig+0xa>
           (READ_BIT(pll_config,  RCC_CFGR_PLLMUL)  != RCC_OscInitStruct->PLL.PLLMUL))
 8003c42:	23f0      	movs	r3, #240	; 0xf0
 8003c44:	039b      	lsls	r3, r3, #14
 8003c46:	4018      	ands	r0, r3
           (READ_BIT(pll_config2, RCC_CFGR2_PREDIV) != RCC_OscInitStruct->PLL.PREDIV)    ||
 8003c48:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8003c4a:	1ac0      	subs	r0, r0, r3
 8003c4c:	1e43      	subs	r3, r0, #1
 8003c4e:	4198      	sbcs	r0, r3
    return HAL_ERROR;
 8003c50:	b2c0      	uxtb	r0, r0
 8003c52:	e5bd      	b.n	80037d0 <HAL_RCC_OscConfig+0xc>
 8003c54:	40021000 	.word	0x40021000
 8003c58:	fffeffff 	.word	0xfffeffff
 8003c5c:	feffffff 	.word	0xfeffffff
 8003c60:	ffc27fff 	.word	0xffc27fff

08003c64 <HAL_RCC_GetSysClockFreq>:
  *         right SYSCLK value. Otherwise, any configuration based on this function will be incorrect.
  *         
  * @retval SYSCLK frequency
  */
uint32_t HAL_RCC_GetSysClockFreq(void)
{
 8003c64:	b530      	push	{r4, r5, lr}
  const uint8_t aPLLMULFactorTable[16] = { 2U,  3U,  4U,  5U,  6U,  7U,  8U,  9U,
 8003c66:	4c1b      	ldr	r4, [pc, #108]	; (8003cd4 <HAL_RCC_GetSysClockFreq+0x70>)
{
 8003c68:	b089      	sub	sp, #36	; 0x24
  const uint8_t aPLLMULFactorTable[16] = { 2U,  3U,  4U,  5U,  6U,  7U,  8U,  9U,
 8003c6a:	2210      	movs	r2, #16
 8003c6c:	0021      	movs	r1, r4
 8003c6e:	4668      	mov	r0, sp
 8003c70:	f000 f986 	bl	8003f80 <memcpy>
                                         10U, 11U, 12U, 13U, 14U, 15U, 16U, 16U};
  const uint8_t aPredivFactorTable[16] = { 1U, 2U,  3U,  4U,  5U,  6U,  7U,  8U,
 8003c74:	0021      	movs	r1, r4
 8003c76:	ad04      	add	r5, sp, #16
 8003c78:	2210      	movs	r2, #16
 8003c7a:	3110      	adds	r1, #16
 8003c7c:	0028      	movs	r0, r5
 8003c7e:	f000 f97f 	bl	8003f80 <memcpy>
  uint32_t sysclockfreq = 0U;
  
  tmpreg = RCC->CFGR;
  
  /* Get SYSCLK source -------------------------------------------------------*/
  switch (tmpreg & RCC_CFGR_SWS)
 8003c82:	200c      	movs	r0, #12
  tmpreg = RCC->CFGR;
 8003c84:	4a14      	ldr	r2, [pc, #80]	; (8003cd8 <HAL_RCC_GetSysClockFreq+0x74>)
 8003c86:	6853      	ldr	r3, [r2, #4]
  switch (tmpreg & RCC_CFGR_SWS)
 8003c88:	4018      	ands	r0, r3
 8003c8a:	2808      	cmp	r0, #8
 8003c8c:	d009      	beq.n	8003ca2 <HAL_RCC_GetSysClockFreq+0x3e>
  {
    case RCC_SYSCLKSOURCE_STATUS_HSE:  /* HSE used as system clock */
    {
      sysclockfreq = HSE_VALUE;
 8003c8e:	380c      	subs	r0, #12
 8003c90:	4243      	negs	r3, r0
 8003c92:	4158      	adcs	r0, r3
 8003c94:	4b11      	ldr	r3, [pc, #68]	; (8003cdc <HAL_RCC_GetSysClockFreq+0x78>)
 8003c96:	4240      	negs	r0, r0
 8003c98:	4018      	ands	r0, r3
 8003c9a:	4b11      	ldr	r3, [pc, #68]	; (8003ce0 <HAL_RCC_GetSysClockFreq+0x7c>)
 8003c9c:	18c0      	adds	r0, r0, r3
      sysclockfreq = HSI_VALUE;
      break;
    }
  }
  return sysclockfreq;
}
 8003c9e:	b009      	add	sp, #36	; 0x24
 8003ca0:	bd30      	pop	{r4, r5, pc}
      pllmul = aPLLMULFactorTable[(uint32_t)(tmpreg & RCC_CFGR_PLLMUL) >> RCC_CFGR_PLLMUL_BITNUMBER];
 8003ca2:	200f      	movs	r0, #15
 8003ca4:	466c      	mov	r4, sp
      prediv = aPredivFactorTable[(uint32_t)(RCC->CFGR2 & RCC_CFGR2_PREDIV) >> RCC_CFGR2_PREDIV_BITNUMBER];
 8003ca6:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
      pllmul = aPLLMULFactorTable[(uint32_t)(tmpreg & RCC_CFGR_PLLMUL) >> RCC_CFGR_PLLMUL_BITNUMBER];
 8003ca8:	0c99      	lsrs	r1, r3, #18
 8003caa:	4001      	ands	r1, r0
      prediv = aPredivFactorTable[(uint32_t)(RCC->CFGR2 & RCC_CFGR2_PREDIV) >> RCC_CFGR2_PREDIV_BITNUMBER];
 8003cac:	4002      	ands	r2, r0
      pllmul = aPLLMULFactorTable[(uint32_t)(tmpreg & RCC_CFGR_PLLMUL) >> RCC_CFGR_PLLMUL_BITNUMBER];
 8003cae:	5c64      	ldrb	r4, [r4, r1]
      prediv = aPredivFactorTable[(uint32_t)(RCC->CFGR2 & RCC_CFGR2_PREDIV) >> RCC_CFGR2_PREDIV_BITNUMBER];
 8003cb0:	5ca9      	ldrb	r1, [r5, r2]
      if ((tmpreg & RCC_CFGR_PLLSRC) == RCC_PLLSOURCE_HSE)
 8003cb2:	22c0      	movs	r2, #192	; 0xc0
 8003cb4:	2080      	movs	r0, #128	; 0x80
 8003cb6:	0252      	lsls	r2, r2, #9
 8003cb8:	4013      	ands	r3, r2
 8003cba:	0240      	lsls	r0, r0, #9
 8003cbc:	4283      	cmp	r3, r0
 8003cbe:	d101      	bne.n	8003cc4 <HAL_RCC_GetSysClockFreq+0x60>
        pllclk = (uint32_t)((uint64_t) HSI_VALUE / (uint64_t) (prediv)) * ((uint64_t) pllmul);
 8003cc0:	4807      	ldr	r0, [pc, #28]	; (8003ce0 <HAL_RCC_GetSysClockFreq+0x7c>)
 8003cc2:	e002      	b.n	8003cca <HAL_RCC_GetSysClockFreq+0x66>
      else if ((tmpreg & RCC_CFGR_PLLSRC) == RCC_PLLSOURCE_HSI48)
 8003cc4:	4293      	cmp	r3, r2
 8003cc6:	d1fb      	bne.n	8003cc0 <HAL_RCC_GetSysClockFreq+0x5c>
        pllclk = (uint32_t)((uint64_t) HSI48_VALUE / (uint64_t) (prediv)) * ((uint64_t) pllmul);
 8003cc8:	4806      	ldr	r0, [pc, #24]	; (8003ce4 <HAL_RCC_GetSysClockFreq+0x80>)
        pllclk = (uint32_t)((uint64_t) HSI_VALUE / (uint64_t) (prediv)) * ((uint64_t) pllmul);
 8003cca:	f7fc fa2f 	bl	800012c <__udivsi3>
 8003cce:	4360      	muls	r0, r4
 8003cd0:	e7e5      	b.n	8003c9e <HAL_RCC_GetSysClockFreq+0x3a>
 8003cd2:	46c0      	nop			; (mov r8, r8)
 8003cd4:	080060a8 	.word	0x080060a8
 8003cd8:	40021000 	.word	0x40021000
 8003cdc:	02625a00 	.word	0x02625a00
 8003ce0:	007a1200 	.word	0x007a1200
 8003ce4:	02dc6c00 	.word	0x02dc6c00

08003ce8 <HAL_RCC_ClockConfig>:
{
 8003ce8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8003cea:	0005      	movs	r5, r0
 8003cec:	000f      	movs	r7, r1
  if(RCC_ClkInitStruct == NULL)
 8003cee:	2800      	cmp	r0, #0
 8003cf0:	d101      	bne.n	8003cf6 <HAL_RCC_ClockConfig+0xe>
    return HAL_ERROR;
 8003cf2:	2001      	movs	r0, #1
}
 8003cf4:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 8003cf6:	2201      	movs	r2, #1
 8003cf8:	4c3b      	ldr	r4, [pc, #236]	; (8003de8 <HAL_RCC_ClockConfig+0x100>)
 8003cfa:	6823      	ldr	r3, [r4, #0]
 8003cfc:	4013      	ands	r3, r2
 8003cfe:	428b      	cmp	r3, r1
 8003d00:	d31c      	bcc.n	8003d3c <HAL_RCC_ClockConfig+0x54>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 8003d02:	6829      	ldr	r1, [r5, #0]
 8003d04:	078b      	lsls	r3, r1, #30
 8003d06:	d422      	bmi.n	8003d4e <HAL_RCC_ClockConfig+0x66>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 8003d08:	07cb      	lsls	r3, r1, #31
 8003d0a:	d42f      	bmi.n	8003d6c <HAL_RCC_ClockConfig+0x84>
  if(FLatency < __HAL_FLASH_GET_LATENCY())
 8003d0c:	2301      	movs	r3, #1
 8003d0e:	6822      	ldr	r2, [r4, #0]
 8003d10:	401a      	ands	r2, r3
 8003d12:	42ba      	cmp	r2, r7
 8003d14:	d859      	bhi.n	8003dca <HAL_RCC_ClockConfig+0xe2>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8003d16:	682b      	ldr	r3, [r5, #0]
 8003d18:	4c34      	ldr	r4, [pc, #208]	; (8003dec <HAL_RCC_ClockConfig+0x104>)
 8003d1a:	075b      	lsls	r3, r3, #29
 8003d1c:	d45c      	bmi.n	8003dd8 <HAL_RCC_ClockConfig+0xf0>
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_BITNUMBER];
 8003d1e:	f7ff ffa1 	bl	8003c64 <HAL_RCC_GetSysClockFreq>
 8003d22:	6863      	ldr	r3, [r4, #4]
 8003d24:	4a32      	ldr	r2, [pc, #200]	; (8003df0 <HAL_RCC_ClockConfig+0x108>)
 8003d26:	061b      	lsls	r3, r3, #24
 8003d28:	0f1b      	lsrs	r3, r3, #28
 8003d2a:	5cd3      	ldrb	r3, [r2, r3]
 8003d2c:	40d8      	lsrs	r0, r3
 8003d2e:	4b31      	ldr	r3, [pc, #196]	; (8003df4 <HAL_RCC_ClockConfig+0x10c>)
 8003d30:	6018      	str	r0, [r3, #0]
  HAL_InitTick (TICK_INT_PRIORITY);
 8003d32:	2000      	movs	r0, #0
 8003d34:	f7fe fe78 	bl	8002a28 <HAL_InitTick>
  return HAL_OK;
 8003d38:	2000      	movs	r0, #0
 8003d3a:	e7db      	b.n	8003cf4 <HAL_RCC_ClockConfig+0xc>
    __HAL_FLASH_SET_LATENCY(FLatency);
 8003d3c:	6823      	ldr	r3, [r4, #0]
 8003d3e:	4393      	bics	r3, r2
 8003d40:	430b      	orrs	r3, r1
 8003d42:	6023      	str	r3, [r4, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 8003d44:	6823      	ldr	r3, [r4, #0]
 8003d46:	4013      	ands	r3, r2
 8003d48:	428b      	cmp	r3, r1
 8003d4a:	d1d2      	bne.n	8003cf2 <HAL_RCC_ClockConfig+0xa>
 8003d4c:	e7d9      	b.n	8003d02 <HAL_RCC_ClockConfig+0x1a>
 8003d4e:	4a27      	ldr	r2, [pc, #156]	; (8003dec <HAL_RCC_ClockConfig+0x104>)
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8003d50:	074b      	lsls	r3, r1, #29
 8003d52:	d504      	bpl.n	8003d5e <HAL_RCC_ClockConfig+0x76>
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE, RCC_HCLK_DIV16);
 8003d54:	23e0      	movs	r3, #224	; 0xe0
 8003d56:	6850      	ldr	r0, [r2, #4]
 8003d58:	00db      	lsls	r3, r3, #3
 8003d5a:	4303      	orrs	r3, r0
 8003d5c:	6053      	str	r3, [r2, #4]
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 8003d5e:	20f0      	movs	r0, #240	; 0xf0
 8003d60:	6853      	ldr	r3, [r2, #4]
 8003d62:	4383      	bics	r3, r0
 8003d64:	68a8      	ldr	r0, [r5, #8]
 8003d66:	4303      	orrs	r3, r0
 8003d68:	6053      	str	r3, [r2, #4]
 8003d6a:	e7cd      	b.n	8003d08 <HAL_RCC_ClockConfig+0x20>
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 8003d6c:	686a      	ldr	r2, [r5, #4]
 8003d6e:	4e1f      	ldr	r6, [pc, #124]	; (8003dec <HAL_RCC_ClockConfig+0x104>)
 8003d70:	2a01      	cmp	r2, #1
 8003d72:	d11a      	bne.n	8003daa <HAL_RCC_ClockConfig+0xc2>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8003d74:	6833      	ldr	r3, [r6, #0]
 8003d76:	039b      	lsls	r3, r3, #14
 8003d78:	d5bb      	bpl.n	8003cf2 <HAL_RCC_ClockConfig+0xa>
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 8003d7a:	2103      	movs	r1, #3
 8003d7c:	6873      	ldr	r3, [r6, #4]
 8003d7e:	438b      	bics	r3, r1
 8003d80:	4313      	orrs	r3, r2
 8003d82:	6073      	str	r3, [r6, #4]
    tickstart = HAL_GetTick();
 8003d84:	f7fe fe90 	bl	8002aa8 <HAL_GetTick>
 8003d88:	9001      	str	r0, [sp, #4]
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 8003d8a:	230c      	movs	r3, #12
 8003d8c:	6872      	ldr	r2, [r6, #4]
 8003d8e:	401a      	ands	r2, r3
 8003d90:	686b      	ldr	r3, [r5, #4]
 8003d92:	009b      	lsls	r3, r3, #2
 8003d94:	429a      	cmp	r2, r3
 8003d96:	d0b9      	beq.n	8003d0c <HAL_RCC_ClockConfig+0x24>
      if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 8003d98:	f7fe fe86 	bl	8002aa8 <HAL_GetTick>
 8003d9c:	9b01      	ldr	r3, [sp, #4]
 8003d9e:	1ac0      	subs	r0, r0, r3
 8003da0:	4b15      	ldr	r3, [pc, #84]	; (8003df8 <HAL_RCC_ClockConfig+0x110>)
 8003da2:	4298      	cmp	r0, r3
 8003da4:	d9f1      	bls.n	8003d8a <HAL_RCC_ClockConfig+0xa2>
        return HAL_TIMEOUT;
 8003da6:	2003      	movs	r0, #3
 8003da8:	e7a4      	b.n	8003cf4 <HAL_RCC_ClockConfig+0xc>
    else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 8003daa:	2a02      	cmp	r2, #2
 8003dac:	d103      	bne.n	8003db6 <HAL_RCC_ClockConfig+0xce>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8003dae:	6833      	ldr	r3, [r6, #0]
 8003db0:	019b      	lsls	r3, r3, #6
 8003db2:	d4e2      	bmi.n	8003d7a <HAL_RCC_ClockConfig+0x92>
 8003db4:	e79d      	b.n	8003cf2 <HAL_RCC_ClockConfig+0xa>
    else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSI48)
 8003db6:	2a03      	cmp	r2, #3
 8003db8:	d103      	bne.n	8003dc2 <HAL_RCC_ClockConfig+0xda>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) == RESET)
 8003dba:	6b73      	ldr	r3, [r6, #52]	; 0x34
 8003dbc:	03db      	lsls	r3, r3, #15
 8003dbe:	d4dc      	bmi.n	8003d7a <HAL_RCC_ClockConfig+0x92>
 8003dc0:	e797      	b.n	8003cf2 <HAL_RCC_ClockConfig+0xa>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8003dc2:	6833      	ldr	r3, [r6, #0]
 8003dc4:	079b      	lsls	r3, r3, #30
 8003dc6:	d4d8      	bmi.n	8003d7a <HAL_RCC_ClockConfig+0x92>
 8003dc8:	e793      	b.n	8003cf2 <HAL_RCC_ClockConfig+0xa>
    __HAL_FLASH_SET_LATENCY(FLatency);
 8003dca:	6822      	ldr	r2, [r4, #0]
 8003dcc:	439a      	bics	r2, r3
 8003dce:	6022      	str	r2, [r4, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 8003dd0:	6822      	ldr	r2, [r4, #0]
 8003dd2:	421a      	tst	r2, r3
 8003dd4:	d09f      	beq.n	8003d16 <HAL_RCC_ClockConfig+0x2e>
 8003dd6:	e78c      	b.n	8003cf2 <HAL_RCC_ClockConfig+0xa>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE, RCC_ClkInitStruct->APB1CLKDivider);
 8003dd8:	6863      	ldr	r3, [r4, #4]
 8003dda:	4a08      	ldr	r2, [pc, #32]	; (8003dfc <HAL_RCC_ClockConfig+0x114>)
 8003ddc:	4013      	ands	r3, r2
 8003dde:	68ea      	ldr	r2, [r5, #12]
 8003de0:	4313      	orrs	r3, r2
 8003de2:	6063      	str	r3, [r4, #4]
 8003de4:	e79b      	b.n	8003d1e <HAL_RCC_ClockConfig+0x36>
 8003de6:	46c0      	nop			; (mov r8, r8)
 8003de8:	40022000 	.word	0x40022000
 8003dec:	40021000 	.word	0x40021000
 8003df0:	0800618b 	.word	0x0800618b
 8003df4:	20000000 	.word	0x20000000
 8003df8:	00001388 	.word	0x00001388
 8003dfc:	fffff8ff 	.word	0xfffff8ff

08003e00 <HAL_RCCEx_PeriphCLKConfig>:
  *         the backup registers) and RCC_BDCR register are set to their reset values.
  *
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCCEx_PeriphCLKConfig(RCC_PeriphCLKInitTypeDef  *PeriphClkInit)
{
 8003e00:	b5f0      	push	{r4, r5, r6, r7, lr}

  /* Check the parameters */
  assert_param(IS_RCC_PERIPHCLOCK(PeriphClkInit->PeriphClockSelection));
  
  /*---------------------------- RTC configuration -------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 8003e02:	6803      	ldr	r3, [r0, #0]
{
 8003e04:	b085      	sub	sp, #20
 8003e06:	0005      	movs	r5, r0
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 8003e08:	03db      	lsls	r3, r3, #15
 8003e0a:	d528      	bpl.n	8003e5e <HAL_RCCEx_PeriphCLKConfig+0x5e>
    FlagStatus       pwrclkchanged = RESET;

    /* As soon as function is called to change RTC clock source, activation of the 
       power domain is done. */
    /* Requires to enable write access to Backup Domain of necessary */
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 8003e0c:	2280      	movs	r2, #128	; 0x80
    FlagStatus       pwrclkchanged = RESET;
 8003e0e:	2100      	movs	r1, #0
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 8003e10:	4c40      	ldr	r4, [pc, #256]	; (8003f14 <HAL_RCCEx_PeriphCLKConfig+0x114>)
 8003e12:	0552      	lsls	r2, r2, #21
 8003e14:	69e3      	ldr	r3, [r4, #28]
    FlagStatus       pwrclkchanged = RESET;
 8003e16:	9100      	str	r1, [sp, #0]
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 8003e18:	4213      	tst	r3, r2
 8003e1a:	d108      	bne.n	8003e2e <HAL_RCCEx_PeriphCLKConfig+0x2e>
    {
    __HAL_RCC_PWR_CLK_ENABLE();
 8003e1c:	69e3      	ldr	r3, [r4, #28]
 8003e1e:	4313      	orrs	r3, r2
 8003e20:	61e3      	str	r3, [r4, #28]
 8003e22:	69e3      	ldr	r3, [r4, #28]
 8003e24:	4013      	ands	r3, r2
 8003e26:	9303      	str	r3, [sp, #12]
 8003e28:	9b03      	ldr	r3, [sp, #12]
      pwrclkchanged = SET;
 8003e2a:	2301      	movs	r3, #1
 8003e2c:	9300      	str	r3, [sp, #0]
    }
    
    if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8003e2e:	2780      	movs	r7, #128	; 0x80
 8003e30:	4e39      	ldr	r6, [pc, #228]	; (8003f18 <HAL_RCCEx_PeriphCLKConfig+0x118>)
 8003e32:	007f      	lsls	r7, r7, #1
 8003e34:	6833      	ldr	r3, [r6, #0]
 8003e36:	423b      	tst	r3, r7
 8003e38:	d038      	beq.n	8003eac <HAL_RCCEx_PeriphCLKConfig+0xac>
        }
      }
    }
    
    /* Reset the Backup domain only if the RTC Clock source selection is modified from reset value */ 
    temp_reg = (RCC->BDCR & RCC_BDCR_RTCSEL);
 8003e3a:	22c0      	movs	r2, #192	; 0xc0
 8003e3c:	6a23      	ldr	r3, [r4, #32]
 8003e3e:	0092      	lsls	r2, r2, #2
 8003e40:	4013      	ands	r3, r2
 8003e42:	4e36      	ldr	r6, [pc, #216]	; (8003f1c <HAL_RCCEx_PeriphCLKConfig+0x11c>)
    if((temp_reg != 0x00000000U) && (temp_reg != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 8003e44:	d144      	bne.n	8003ed0 <HAL_RCCEx_PeriphCLKConfig+0xd0>
            return HAL_TIMEOUT;
          }
        }
      }
    }
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 8003e46:	6a23      	ldr	r3, [r4, #32]
 8003e48:	401e      	ands	r6, r3
 8003e4a:	686b      	ldr	r3, [r5, #4]
 8003e4c:	431e      	orrs	r6, r3

    /* Require to disable power clock if necessary */
    if(pwrclkchanged == SET)
 8003e4e:	9b00      	ldr	r3, [sp, #0]
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 8003e50:	6226      	str	r6, [r4, #32]
    if(pwrclkchanged == SET)
 8003e52:	2b01      	cmp	r3, #1
 8003e54:	d103      	bne.n	8003e5e <HAL_RCCEx_PeriphCLKConfig+0x5e>
    {
      __HAL_RCC_PWR_CLK_DISABLE();
 8003e56:	69e3      	ldr	r3, [r4, #28]
 8003e58:	4a31      	ldr	r2, [pc, #196]	; (8003f20 <HAL_RCCEx_PeriphCLKConfig+0x120>)
 8003e5a:	4013      	ands	r3, r2
 8003e5c:	61e3      	str	r3, [r4, #28]
    }
  }

  /*------------------------------- USART1 Configuration ------------------------*/ 
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART1) == RCC_PERIPHCLK_USART1)
 8003e5e:	682a      	ldr	r2, [r5, #0]
 8003e60:	07d3      	lsls	r3, r2, #31
 8003e62:	d506      	bpl.n	8003e72 <HAL_RCCEx_PeriphCLKConfig+0x72>
  {
    /* Check the parameters */
    assert_param(IS_RCC_USART1CLKSOURCE(PeriphClkInit->Usart1ClockSelection));
    
    /* Configure the USART1 clock source */
    __HAL_RCC_USART1_CONFIG(PeriphClkInit->Usart1ClockSelection);
 8003e64:	2003      	movs	r0, #3
 8003e66:	492b      	ldr	r1, [pc, #172]	; (8003f14 <HAL_RCCEx_PeriphCLKConfig+0x114>)
 8003e68:	6b0b      	ldr	r3, [r1, #48]	; 0x30
 8003e6a:	4383      	bics	r3, r0
 8003e6c:	68a8      	ldr	r0, [r5, #8]
 8003e6e:	4303      	orrs	r3, r0
 8003e70:	630b      	str	r3, [r1, #48]	; 0x30
    __HAL_RCC_USART3_CONFIG(PeriphClkInit->Usart3ClockSelection);
  }
#endif /* STM32F091xC || STM32F098xx */  

  /*------------------------------ I2C1 Configuration ------------------------*/ 
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C1) == RCC_PERIPHCLK_I2C1)
 8003e72:	0693      	lsls	r3, r2, #26
 8003e74:	d506      	bpl.n	8003e84 <HAL_RCCEx_PeriphCLKConfig+0x84>
  {
    /* Check the parameters */
    assert_param(IS_RCC_I2C1CLKSOURCE(PeriphClkInit->I2c1ClockSelection));
    
    /* Configure the I2C1 clock source */
    __HAL_RCC_I2C1_CONFIG(PeriphClkInit->I2c1ClockSelection);
 8003e76:	2010      	movs	r0, #16
 8003e78:	4926      	ldr	r1, [pc, #152]	; (8003f14 <HAL_RCCEx_PeriphCLKConfig+0x114>)
 8003e7a:	6b0b      	ldr	r3, [r1, #48]	; 0x30
 8003e7c:	4383      	bics	r3, r0
 8003e7e:	68e8      	ldr	r0, [r5, #12]
 8003e80:	4303      	orrs	r3, r0
 8003e82:	630b      	str	r3, [r1, #48]	; 0x30
  }

#if defined(STM32F042x6) || defined(STM32F048xx) || defined(STM32F072xB) || defined(STM32F078xx) || defined(STM32F070xB) || defined(STM32F070x6)
  /*------------------------------ USB Configuration ------------------------*/ 
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USB) == RCC_PERIPHCLK_USB)
 8003e84:	0393      	lsls	r3, r2, #14
 8003e86:	d506      	bpl.n	8003e96 <HAL_RCCEx_PeriphCLKConfig+0x96>
  {
    /* Check the parameters */
    assert_param(IS_RCC_USBCLKSOURCE(PeriphClkInit->UsbClockSelection));
    
    /* Configure the USB clock source */
    __HAL_RCC_USB_CONFIG(PeriphClkInit->UsbClockSelection);
 8003e88:	2080      	movs	r0, #128	; 0x80
 8003e8a:	4922      	ldr	r1, [pc, #136]	; (8003f14 <HAL_RCCEx_PeriphCLKConfig+0x114>)
 8003e8c:	6b0b      	ldr	r3, [r1, #48]	; 0x30
 8003e8e:	4383      	bics	r3, r0
 8003e90:	6968      	ldr	r0, [r5, #20]
 8003e92:	4303      	orrs	r3, r0
 8003e94:	630b      	str	r3, [r1, #48]	; 0x30
#endif /* STM32F042x6 || STM32F048xx ||                */
       /* STM32F051x8 || STM32F058xx ||                */
       /* STM32F071xB || STM32F072xB || STM32F078xx || */
       /* STM32F091xC || STM32F098xx */
  
  return HAL_OK;
 8003e96:	2000      	movs	r0, #0
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CEC) == RCC_PERIPHCLK_CEC)
 8003e98:	0553      	lsls	r3, r2, #21
 8003e9a:	d517      	bpl.n	8003ecc <HAL_RCCEx_PeriphCLKConfig+0xcc>
    __HAL_RCC_CEC_CONFIG(PeriphClkInit->CecClockSelection);
 8003e9c:	2140      	movs	r1, #64	; 0x40
 8003e9e:	4a1d      	ldr	r2, [pc, #116]	; (8003f14 <HAL_RCCEx_PeriphCLKConfig+0x114>)
 8003ea0:	6b13      	ldr	r3, [r2, #48]	; 0x30
 8003ea2:	438b      	bics	r3, r1
 8003ea4:	6929      	ldr	r1, [r5, #16]
 8003ea6:	430b      	orrs	r3, r1
 8003ea8:	6313      	str	r3, [r2, #48]	; 0x30
 8003eaa:	e00f      	b.n	8003ecc <HAL_RCCEx_PeriphCLKConfig+0xcc>
      SET_BIT(PWR->CR, PWR_CR_DBP);
 8003eac:	6833      	ldr	r3, [r6, #0]
 8003eae:	433b      	orrs	r3, r7
 8003eb0:	6033      	str	r3, [r6, #0]
      tickstart = HAL_GetTick();
 8003eb2:	f7fe fdf9 	bl	8002aa8 <HAL_GetTick>
 8003eb6:	9001      	str	r0, [sp, #4]
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8003eb8:	6833      	ldr	r3, [r6, #0]
 8003eba:	423b      	tst	r3, r7
 8003ebc:	d1bd      	bne.n	8003e3a <HAL_RCCEx_PeriphCLKConfig+0x3a>
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 8003ebe:	f7fe fdf3 	bl	8002aa8 <HAL_GetTick>
 8003ec2:	9b01      	ldr	r3, [sp, #4]
 8003ec4:	1ac0      	subs	r0, r0, r3
 8003ec6:	2864      	cmp	r0, #100	; 0x64
 8003ec8:	d9f6      	bls.n	8003eb8 <HAL_RCCEx_PeriphCLKConfig+0xb8>
          return HAL_TIMEOUT;
 8003eca:	2003      	movs	r0, #3
}
 8003ecc:	b005      	add	sp, #20
 8003ece:	bdf0      	pop	{r4, r5, r6, r7, pc}
    if((temp_reg != 0x00000000U) && (temp_reg != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 8003ed0:	6869      	ldr	r1, [r5, #4]
 8003ed2:	400a      	ands	r2, r1
 8003ed4:	429a      	cmp	r2, r3
 8003ed6:	d0b6      	beq.n	8003e46 <HAL_RCCEx_PeriphCLKConfig+0x46>
      __HAL_RCC_BACKUPRESET_FORCE();
 8003ed8:	2380      	movs	r3, #128	; 0x80
      temp_reg = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 8003eda:	6a22      	ldr	r2, [r4, #32]
      __HAL_RCC_BACKUPRESET_FORCE();
 8003edc:	6a20      	ldr	r0, [r4, #32]
      temp_reg = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 8003ede:	0011      	movs	r1, r2
      __HAL_RCC_BACKUPRESET_FORCE();
 8003ee0:	025b      	lsls	r3, r3, #9
 8003ee2:	4303      	orrs	r3, r0
 8003ee4:	6223      	str	r3, [r4, #32]
      __HAL_RCC_BACKUPRESET_RELEASE();
 8003ee6:	6a23      	ldr	r3, [r4, #32]
 8003ee8:	480e      	ldr	r0, [pc, #56]	; (8003f24 <HAL_RCCEx_PeriphCLKConfig+0x124>)
      temp_reg = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 8003eea:	4031      	ands	r1, r6
      __HAL_RCC_BACKUPRESET_RELEASE();
 8003eec:	4003      	ands	r3, r0
 8003eee:	6223      	str	r3, [r4, #32]
      RCC->BDCR = temp_reg;
 8003ef0:	6221      	str	r1, [r4, #32]
      if (HAL_IS_BIT_SET(temp_reg, RCC_BDCR_LSEON))
 8003ef2:	07d3      	lsls	r3, r2, #31
 8003ef4:	d5a7      	bpl.n	8003e46 <HAL_RCCEx_PeriphCLKConfig+0x46>
        tickstart = HAL_GetTick();
 8003ef6:	f7fe fdd7 	bl	8002aa8 <HAL_GetTick>
 8003efa:	0007      	movs	r7, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8003efc:	2202      	movs	r2, #2
 8003efe:	6a23      	ldr	r3, [r4, #32]
 8003f00:	4213      	tst	r3, r2
 8003f02:	d1a0      	bne.n	8003e46 <HAL_RCCEx_PeriphCLKConfig+0x46>
          if((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8003f04:	f7fe fdd0 	bl	8002aa8 <HAL_GetTick>
 8003f08:	4b07      	ldr	r3, [pc, #28]	; (8003f28 <HAL_RCCEx_PeriphCLKConfig+0x128>)
 8003f0a:	1bc0      	subs	r0, r0, r7
 8003f0c:	4298      	cmp	r0, r3
 8003f0e:	d9f5      	bls.n	8003efc <HAL_RCCEx_PeriphCLKConfig+0xfc>
 8003f10:	e7db      	b.n	8003eca <HAL_RCCEx_PeriphCLKConfig+0xca>
 8003f12:	46c0      	nop			; (mov r8, r8)
 8003f14:	40021000 	.word	0x40021000
 8003f18:	40007000 	.word	0x40007000
 8003f1c:	fffffcff 	.word	0xfffffcff
 8003f20:	efffffff 	.word	0xefffffff
 8003f24:	fffeffff 	.word	0xfffeffff
 8003f28:	00001388 	.word	0x00001388

08003f2c <__errno>:
 8003f2c:	4b01      	ldr	r3, [pc, #4]	; (8003f34 <__errno+0x8>)
 8003f2e:	6818      	ldr	r0, [r3, #0]
 8003f30:	4770      	bx	lr
 8003f32:	46c0      	nop			; (mov r8, r8)
 8003f34:	20000014 	.word	0x20000014

08003f38 <__libc_init_array>:
 8003f38:	b570      	push	{r4, r5, r6, lr}
 8003f3a:	2600      	movs	r6, #0
 8003f3c:	4d0c      	ldr	r5, [pc, #48]	; (8003f70 <__libc_init_array+0x38>)
 8003f3e:	4c0d      	ldr	r4, [pc, #52]	; (8003f74 <__libc_init_array+0x3c>)
 8003f40:	1b64      	subs	r4, r4, r5
 8003f42:	10a4      	asrs	r4, r4, #2
 8003f44:	42a6      	cmp	r6, r4
 8003f46:	d109      	bne.n	8003f5c <__libc_init_array+0x24>
 8003f48:	2600      	movs	r6, #0
 8003f4a:	f002 f8a1 	bl	8006090 <_init>
 8003f4e:	4d0a      	ldr	r5, [pc, #40]	; (8003f78 <__libc_init_array+0x40>)
 8003f50:	4c0a      	ldr	r4, [pc, #40]	; (8003f7c <__libc_init_array+0x44>)
 8003f52:	1b64      	subs	r4, r4, r5
 8003f54:	10a4      	asrs	r4, r4, #2
 8003f56:	42a6      	cmp	r6, r4
 8003f58:	d105      	bne.n	8003f66 <__libc_init_array+0x2e>
 8003f5a:	bd70      	pop	{r4, r5, r6, pc}
 8003f5c:	00b3      	lsls	r3, r6, #2
 8003f5e:	58eb      	ldr	r3, [r5, r3]
 8003f60:	4798      	blx	r3
 8003f62:	3601      	adds	r6, #1
 8003f64:	e7ee      	b.n	8003f44 <__libc_init_array+0xc>
 8003f66:	00b3      	lsls	r3, r6, #2
 8003f68:	58eb      	ldr	r3, [r5, r3]
 8003f6a:	4798      	blx	r3
 8003f6c:	3601      	adds	r6, #1
 8003f6e:	e7f2      	b.n	8003f56 <__libc_init_array+0x1e>
 8003f70:	08007158 	.word	0x08007158
 8003f74:	08007158 	.word	0x08007158
 8003f78:	08007158 	.word	0x08007158
 8003f7c:	0800715c 	.word	0x0800715c

08003f80 <memcpy>:
 8003f80:	2300      	movs	r3, #0
 8003f82:	b510      	push	{r4, lr}
 8003f84:	429a      	cmp	r2, r3
 8003f86:	d100      	bne.n	8003f8a <memcpy+0xa>
 8003f88:	bd10      	pop	{r4, pc}
 8003f8a:	5ccc      	ldrb	r4, [r1, r3]
 8003f8c:	54c4      	strb	r4, [r0, r3]
 8003f8e:	3301      	adds	r3, #1
 8003f90:	e7f8      	b.n	8003f84 <memcpy+0x4>

08003f92 <memset>:
 8003f92:	0003      	movs	r3, r0
 8003f94:	1812      	adds	r2, r2, r0
 8003f96:	4293      	cmp	r3, r2
 8003f98:	d100      	bne.n	8003f9c <memset+0xa>
 8003f9a:	4770      	bx	lr
 8003f9c:	7019      	strb	r1, [r3, #0]
 8003f9e:	3301      	adds	r3, #1
 8003fa0:	e7f9      	b.n	8003f96 <memset+0x4>

08003fa2 <__cvt>:
 8003fa2:	b5f0      	push	{r4, r5, r6, r7, lr}
 8003fa4:	b08b      	sub	sp, #44	; 0x2c
 8003fa6:	0014      	movs	r4, r2
 8003fa8:	1e1d      	subs	r5, r3, #0
 8003faa:	9912      	ldr	r1, [sp, #72]	; 0x48
 8003fac:	da53      	bge.n	8004056 <__cvt+0xb4>
 8003fae:	2480      	movs	r4, #128	; 0x80
 8003fb0:	0624      	lsls	r4, r4, #24
 8003fb2:	191b      	adds	r3, r3, r4
 8003fb4:	001d      	movs	r5, r3
 8003fb6:	0014      	movs	r4, r2
 8003fb8:	232d      	movs	r3, #45	; 0x2d
 8003fba:	700b      	strb	r3, [r1, #0]
 8003fbc:	2320      	movs	r3, #32
 8003fbe:	9e14      	ldr	r6, [sp, #80]	; 0x50
 8003fc0:	2203      	movs	r2, #3
 8003fc2:	439e      	bics	r6, r3
 8003fc4:	2e46      	cmp	r6, #70	; 0x46
 8003fc6:	d007      	beq.n	8003fd8 <__cvt+0x36>
 8003fc8:	0033      	movs	r3, r6
 8003fca:	3b45      	subs	r3, #69	; 0x45
 8003fcc:	4259      	negs	r1, r3
 8003fce:	414b      	adcs	r3, r1
 8003fd0:	9910      	ldr	r1, [sp, #64]	; 0x40
 8003fd2:	3a01      	subs	r2, #1
 8003fd4:	18cb      	adds	r3, r1, r3
 8003fd6:	9310      	str	r3, [sp, #64]	; 0x40
 8003fd8:	ab09      	add	r3, sp, #36	; 0x24
 8003fda:	9304      	str	r3, [sp, #16]
 8003fdc:	ab08      	add	r3, sp, #32
 8003fde:	9303      	str	r3, [sp, #12]
 8003fe0:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8003fe2:	9200      	str	r2, [sp, #0]
 8003fe4:	9302      	str	r3, [sp, #8]
 8003fe6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8003fe8:	0022      	movs	r2, r4
 8003fea:	9301      	str	r3, [sp, #4]
 8003fec:	002b      	movs	r3, r5
 8003fee:	f000 fcdd 	bl	80049ac <_dtoa_r>
 8003ff2:	0007      	movs	r7, r0
 8003ff4:	2e47      	cmp	r6, #71	; 0x47
 8003ff6:	d102      	bne.n	8003ffe <__cvt+0x5c>
 8003ff8:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8003ffa:	07db      	lsls	r3, r3, #31
 8003ffc:	d524      	bpl.n	8004048 <__cvt+0xa6>
 8003ffe:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8004000:	18fb      	adds	r3, r7, r3
 8004002:	9307      	str	r3, [sp, #28]
 8004004:	2e46      	cmp	r6, #70	; 0x46
 8004006:	d114      	bne.n	8004032 <__cvt+0x90>
 8004008:	783b      	ldrb	r3, [r7, #0]
 800400a:	2b30      	cmp	r3, #48	; 0x30
 800400c:	d10c      	bne.n	8004028 <__cvt+0x86>
 800400e:	2200      	movs	r2, #0
 8004010:	2300      	movs	r3, #0
 8004012:	0020      	movs	r0, r4
 8004014:	0029      	movs	r1, r5
 8004016:	f7fc fa0f 	bl	8000438 <__aeabi_dcmpeq>
 800401a:	2800      	cmp	r0, #0
 800401c:	d104      	bne.n	8004028 <__cvt+0x86>
 800401e:	2301      	movs	r3, #1
 8004020:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8004022:	1a9b      	subs	r3, r3, r2
 8004024:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8004026:	6013      	str	r3, [r2, #0]
 8004028:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 800402a:	9a07      	ldr	r2, [sp, #28]
 800402c:	681b      	ldr	r3, [r3, #0]
 800402e:	18d3      	adds	r3, r2, r3
 8004030:	9307      	str	r3, [sp, #28]
 8004032:	2200      	movs	r2, #0
 8004034:	2300      	movs	r3, #0
 8004036:	0020      	movs	r0, r4
 8004038:	0029      	movs	r1, r5
 800403a:	f7fc f9fd 	bl	8000438 <__aeabi_dcmpeq>
 800403e:	2230      	movs	r2, #48	; 0x30
 8004040:	2800      	cmp	r0, #0
 8004042:	d00d      	beq.n	8004060 <__cvt+0xbe>
 8004044:	9b07      	ldr	r3, [sp, #28]
 8004046:	9309      	str	r3, [sp, #36]	; 0x24
 8004048:	0038      	movs	r0, r7
 800404a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800404c:	9a15      	ldr	r2, [sp, #84]	; 0x54
 800404e:	1bdb      	subs	r3, r3, r7
 8004050:	6013      	str	r3, [r2, #0]
 8004052:	b00b      	add	sp, #44	; 0x2c
 8004054:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8004056:	2300      	movs	r3, #0
 8004058:	e7af      	b.n	8003fba <__cvt+0x18>
 800405a:	1c59      	adds	r1, r3, #1
 800405c:	9109      	str	r1, [sp, #36]	; 0x24
 800405e:	701a      	strb	r2, [r3, #0]
 8004060:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8004062:	9907      	ldr	r1, [sp, #28]
 8004064:	428b      	cmp	r3, r1
 8004066:	d3f8      	bcc.n	800405a <__cvt+0xb8>
 8004068:	e7ee      	b.n	8004048 <__cvt+0xa6>

0800406a <__exponent>:
 800406a:	b5f0      	push	{r4, r5, r6, r7, lr}
 800406c:	1c83      	adds	r3, r0, #2
 800406e:	b085      	sub	sp, #20
 8004070:	9301      	str	r3, [sp, #4]
 8004072:	0006      	movs	r6, r0
 8004074:	000c      	movs	r4, r1
 8004076:	7002      	strb	r2, [r0, #0]
 8004078:	232b      	movs	r3, #43	; 0x2b
 800407a:	2900      	cmp	r1, #0
 800407c:	da01      	bge.n	8004082 <__exponent+0x18>
 800407e:	232d      	movs	r3, #45	; 0x2d
 8004080:	424c      	negs	r4, r1
 8004082:	7073      	strb	r3, [r6, #1]
 8004084:	2c09      	cmp	r4, #9
 8004086:	dd22      	ble.n	80040ce <__exponent+0x64>
 8004088:	ab02      	add	r3, sp, #8
 800408a:	1ddd      	adds	r5, r3, #7
 800408c:	0020      	movs	r0, r4
 800408e:	210a      	movs	r1, #10
 8004090:	f7fc f9bc 	bl	800040c <__aeabi_idivmod>
 8004094:	1e6f      	subs	r7, r5, #1
 8004096:	3130      	adds	r1, #48	; 0x30
 8004098:	7039      	strb	r1, [r7, #0]
 800409a:	0020      	movs	r0, r4
 800409c:	210a      	movs	r1, #10
 800409e:	f7fc f8cf 	bl	8000240 <__divsi3>
 80040a2:	0004      	movs	r4, r0
 80040a4:	2809      	cmp	r0, #9
 80040a6:	dc0b      	bgt.n	80040c0 <__exponent+0x56>
 80040a8:	3d02      	subs	r5, #2
 80040aa:	3430      	adds	r4, #48	; 0x30
 80040ac:	9b01      	ldr	r3, [sp, #4]
 80040ae:	702c      	strb	r4, [r5, #0]
 80040b0:	aa02      	add	r2, sp, #8
 80040b2:	3207      	adds	r2, #7
 80040b4:	0018      	movs	r0, r3
 80040b6:	42aa      	cmp	r2, r5
 80040b8:	d804      	bhi.n	80040c4 <__exponent+0x5a>
 80040ba:	1b80      	subs	r0, r0, r6
 80040bc:	b005      	add	sp, #20
 80040be:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80040c0:	003d      	movs	r5, r7
 80040c2:	e7e3      	b.n	800408c <__exponent+0x22>
 80040c4:	782a      	ldrb	r2, [r5, #0]
 80040c6:	3501      	adds	r5, #1
 80040c8:	701a      	strb	r2, [r3, #0]
 80040ca:	3301      	adds	r3, #1
 80040cc:	e7f0      	b.n	80040b0 <__exponent+0x46>
 80040ce:	2330      	movs	r3, #48	; 0x30
 80040d0:	18e4      	adds	r4, r4, r3
 80040d2:	70b3      	strb	r3, [r6, #2]
 80040d4:	1d30      	adds	r0, r6, #4
 80040d6:	70f4      	strb	r4, [r6, #3]
 80040d8:	e7ef      	b.n	80040ba <__exponent+0x50>
	...

080040dc <_printf_float>:
 80040dc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80040de:	b095      	sub	sp, #84	; 0x54
 80040e0:	000c      	movs	r4, r1
 80040e2:	920a      	str	r2, [sp, #40]	; 0x28
 80040e4:	930b      	str	r3, [sp, #44]	; 0x2c
 80040e6:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 80040e8:	9009      	str	r0, [sp, #36]	; 0x24
 80040ea:	f001 fa3f 	bl	800556c <_localeconv_r>
 80040ee:	6803      	ldr	r3, [r0, #0]
 80040f0:	0018      	movs	r0, r3
 80040f2:	930c      	str	r3, [sp, #48]	; 0x30
 80040f4:	f7fc f808 	bl	8000108 <strlen>
 80040f8:	2300      	movs	r3, #0
 80040fa:	9312      	str	r3, [sp, #72]	; 0x48
 80040fc:	6823      	ldr	r3, [r4, #0]
 80040fe:	900e      	str	r0, [sp, #56]	; 0x38
 8004100:	930d      	str	r3, [sp, #52]	; 0x34
 8004102:	990d      	ldr	r1, [sp, #52]	; 0x34
 8004104:	7e27      	ldrb	r7, [r4, #24]
 8004106:	682b      	ldr	r3, [r5, #0]
 8004108:	2207      	movs	r2, #7
 800410a:	05c9      	lsls	r1, r1, #23
 800410c:	d545      	bpl.n	800419a <_printf_float+0xbe>
 800410e:	189b      	adds	r3, r3, r2
 8004110:	4393      	bics	r3, r2
 8004112:	001a      	movs	r2, r3
 8004114:	3208      	adds	r2, #8
 8004116:	602a      	str	r2, [r5, #0]
 8004118:	681a      	ldr	r2, [r3, #0]
 800411a:	685b      	ldr	r3, [r3, #4]
 800411c:	64a2      	str	r2, [r4, #72]	; 0x48
 800411e:	64e3      	str	r3, [r4, #76]	; 0x4c
 8004120:	2201      	movs	r2, #1
 8004122:	6ce5      	ldr	r5, [r4, #76]	; 0x4c
 8004124:	6ca6      	ldr	r6, [r4, #72]	; 0x48
 8004126:	006b      	lsls	r3, r5, #1
 8004128:	085b      	lsrs	r3, r3, #1
 800412a:	930f      	str	r3, [sp, #60]	; 0x3c
 800412c:	4252      	negs	r2, r2
 800412e:	4bac      	ldr	r3, [pc, #688]	; (80043e0 <_printf_float+0x304>)
 8004130:	0030      	movs	r0, r6
 8004132:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8004134:	f7fe f800 	bl	8002138 <__aeabi_dcmpun>
 8004138:	2800      	cmp	r0, #0
 800413a:	d130      	bne.n	800419e <_printf_float+0xc2>
 800413c:	2201      	movs	r2, #1
 800413e:	4ba8      	ldr	r3, [pc, #672]	; (80043e0 <_printf_float+0x304>)
 8004140:	4252      	negs	r2, r2
 8004142:	0030      	movs	r0, r6
 8004144:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8004146:	f7fc f987 	bl	8000458 <__aeabi_dcmple>
 800414a:	2800      	cmp	r0, #0
 800414c:	d127      	bne.n	800419e <_printf_float+0xc2>
 800414e:	2200      	movs	r2, #0
 8004150:	2300      	movs	r3, #0
 8004152:	0030      	movs	r0, r6
 8004154:	0029      	movs	r1, r5
 8004156:	f7fc f975 	bl	8000444 <__aeabi_dcmplt>
 800415a:	2800      	cmp	r0, #0
 800415c:	d003      	beq.n	8004166 <_printf_float+0x8a>
 800415e:	0023      	movs	r3, r4
 8004160:	222d      	movs	r2, #45	; 0x2d
 8004162:	3343      	adds	r3, #67	; 0x43
 8004164:	701a      	strb	r2, [r3, #0]
 8004166:	4d9f      	ldr	r5, [pc, #636]	; (80043e4 <_printf_float+0x308>)
 8004168:	2f47      	cmp	r7, #71	; 0x47
 800416a:	d800      	bhi.n	800416e <_printf_float+0x92>
 800416c:	4d9e      	ldr	r5, [pc, #632]	; (80043e8 <_printf_float+0x30c>)
 800416e:	2303      	movs	r3, #3
 8004170:	2600      	movs	r6, #0
 8004172:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8004174:	6123      	str	r3, [r4, #16]
 8004176:	3301      	adds	r3, #1
 8004178:	439a      	bics	r2, r3
 800417a:	6022      	str	r2, [r4, #0]
 800417c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800417e:	aa13      	add	r2, sp, #76	; 0x4c
 8004180:	9300      	str	r3, [sp, #0]
 8004182:	0021      	movs	r1, r4
 8004184:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8004186:	9809      	ldr	r0, [sp, #36]	; 0x24
 8004188:	f000 f9f4 	bl	8004574 <_printf_common>
 800418c:	1c43      	adds	r3, r0, #1
 800418e:	d000      	beq.n	8004192 <_printf_float+0xb6>
 8004190:	e093      	b.n	80042ba <_printf_float+0x1de>
 8004192:	2001      	movs	r0, #1
 8004194:	4240      	negs	r0, r0
 8004196:	b015      	add	sp, #84	; 0x54
 8004198:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800419a:	3307      	adds	r3, #7
 800419c:	e7b8      	b.n	8004110 <_printf_float+0x34>
 800419e:	0032      	movs	r2, r6
 80041a0:	002b      	movs	r3, r5
 80041a2:	0030      	movs	r0, r6
 80041a4:	0029      	movs	r1, r5
 80041a6:	f7fd ffc7 	bl	8002138 <__aeabi_dcmpun>
 80041aa:	2800      	cmp	r0, #0
 80041ac:	d004      	beq.n	80041b8 <_printf_float+0xdc>
 80041ae:	4d8f      	ldr	r5, [pc, #572]	; (80043ec <_printf_float+0x310>)
 80041b0:	2f47      	cmp	r7, #71	; 0x47
 80041b2:	d8dc      	bhi.n	800416e <_printf_float+0x92>
 80041b4:	4d8e      	ldr	r5, [pc, #568]	; (80043f0 <_printf_float+0x314>)
 80041b6:	e7da      	b.n	800416e <_printf_float+0x92>
 80041b8:	2380      	movs	r3, #128	; 0x80
 80041ba:	990d      	ldr	r1, [sp, #52]	; 0x34
 80041bc:	6862      	ldr	r2, [r4, #4]
 80041be:	00db      	lsls	r3, r3, #3
 80041c0:	430b      	orrs	r3, r1
 80041c2:	1c51      	adds	r1, r2, #1
 80041c4:	d143      	bne.n	800424e <_printf_float+0x172>
 80041c6:	3207      	adds	r2, #7
 80041c8:	6062      	str	r2, [r4, #4]
 80041ca:	aa12      	add	r2, sp, #72	; 0x48
 80041cc:	2100      	movs	r1, #0
 80041ce:	9205      	str	r2, [sp, #20]
 80041d0:	aa11      	add	r2, sp, #68	; 0x44
 80041d2:	9203      	str	r2, [sp, #12]
 80041d4:	2223      	movs	r2, #35	; 0x23
 80041d6:	6023      	str	r3, [r4, #0]
 80041d8:	9106      	str	r1, [sp, #24]
 80041da:	9301      	str	r3, [sp, #4]
 80041dc:	a908      	add	r1, sp, #32
 80041de:	6863      	ldr	r3, [r4, #4]
 80041e0:	1852      	adds	r2, r2, r1
 80041e2:	9202      	str	r2, [sp, #8]
 80041e4:	9300      	str	r3, [sp, #0]
 80041e6:	0032      	movs	r2, r6
 80041e8:	002b      	movs	r3, r5
 80041ea:	9704      	str	r7, [sp, #16]
 80041ec:	9809      	ldr	r0, [sp, #36]	; 0x24
 80041ee:	f7ff fed8 	bl	8003fa2 <__cvt>
 80041f2:	2320      	movs	r3, #32
 80041f4:	003a      	movs	r2, r7
 80041f6:	0005      	movs	r5, r0
 80041f8:	439a      	bics	r2, r3
 80041fa:	2a47      	cmp	r2, #71	; 0x47
 80041fc:	d107      	bne.n	800420e <_printf_float+0x132>
 80041fe:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8004200:	1cda      	adds	r2, r3, #3
 8004202:	db02      	blt.n	800420a <_printf_float+0x12e>
 8004204:	6862      	ldr	r2, [r4, #4]
 8004206:	4293      	cmp	r3, r2
 8004208:	dd45      	ble.n	8004296 <_printf_float+0x1ba>
 800420a:	3f02      	subs	r7, #2
 800420c:	b2ff      	uxtb	r7, r7
 800420e:	9911      	ldr	r1, [sp, #68]	; 0x44
 8004210:	2f65      	cmp	r7, #101	; 0x65
 8004212:	d825      	bhi.n	8004260 <_printf_float+0x184>
 8004214:	0020      	movs	r0, r4
 8004216:	3901      	subs	r1, #1
 8004218:	003a      	movs	r2, r7
 800421a:	3050      	adds	r0, #80	; 0x50
 800421c:	9111      	str	r1, [sp, #68]	; 0x44
 800421e:	f7ff ff24 	bl	800406a <__exponent>
 8004222:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8004224:	0006      	movs	r6, r0
 8004226:	1813      	adds	r3, r2, r0
 8004228:	6123      	str	r3, [r4, #16]
 800422a:	2a01      	cmp	r2, #1
 800422c:	dc02      	bgt.n	8004234 <_printf_float+0x158>
 800422e:	6822      	ldr	r2, [r4, #0]
 8004230:	07d2      	lsls	r2, r2, #31
 8004232:	d501      	bpl.n	8004238 <_printf_float+0x15c>
 8004234:	3301      	adds	r3, #1
 8004236:	6123      	str	r3, [r4, #16]
 8004238:	2323      	movs	r3, #35	; 0x23
 800423a:	aa08      	add	r2, sp, #32
 800423c:	189b      	adds	r3, r3, r2
 800423e:	781b      	ldrb	r3, [r3, #0]
 8004240:	2b00      	cmp	r3, #0
 8004242:	d09b      	beq.n	800417c <_printf_float+0xa0>
 8004244:	0023      	movs	r3, r4
 8004246:	222d      	movs	r2, #45	; 0x2d
 8004248:	3343      	adds	r3, #67	; 0x43
 800424a:	701a      	strb	r2, [r3, #0]
 800424c:	e796      	b.n	800417c <_printf_float+0xa0>
 800424e:	2f67      	cmp	r7, #103	; 0x67
 8004250:	d100      	bne.n	8004254 <_printf_float+0x178>
 8004252:	e176      	b.n	8004542 <_printf_float+0x466>
 8004254:	2f47      	cmp	r7, #71	; 0x47
 8004256:	d1b8      	bne.n	80041ca <_printf_float+0xee>
 8004258:	2a00      	cmp	r2, #0
 800425a:	d1b6      	bne.n	80041ca <_printf_float+0xee>
 800425c:	2201      	movs	r2, #1
 800425e:	e7b3      	b.n	80041c8 <_printf_float+0xec>
 8004260:	2f66      	cmp	r7, #102	; 0x66
 8004262:	d119      	bne.n	8004298 <_printf_float+0x1bc>
 8004264:	6863      	ldr	r3, [r4, #4]
 8004266:	2900      	cmp	r1, #0
 8004268:	dd0c      	ble.n	8004284 <_printf_float+0x1a8>
 800426a:	6121      	str	r1, [r4, #16]
 800426c:	2b00      	cmp	r3, #0
 800426e:	d102      	bne.n	8004276 <_printf_float+0x19a>
 8004270:	6822      	ldr	r2, [r4, #0]
 8004272:	07d2      	lsls	r2, r2, #31
 8004274:	d502      	bpl.n	800427c <_printf_float+0x1a0>
 8004276:	3301      	adds	r3, #1
 8004278:	185b      	adds	r3, r3, r1
 800427a:	6123      	str	r3, [r4, #16]
 800427c:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800427e:	2600      	movs	r6, #0
 8004280:	65a3      	str	r3, [r4, #88]	; 0x58
 8004282:	e7d9      	b.n	8004238 <_printf_float+0x15c>
 8004284:	2b00      	cmp	r3, #0
 8004286:	d103      	bne.n	8004290 <_printf_float+0x1b4>
 8004288:	2201      	movs	r2, #1
 800428a:	6821      	ldr	r1, [r4, #0]
 800428c:	4211      	tst	r1, r2
 800428e:	d000      	beq.n	8004292 <_printf_float+0x1b6>
 8004290:	1c9a      	adds	r2, r3, #2
 8004292:	6122      	str	r2, [r4, #16]
 8004294:	e7f2      	b.n	800427c <_printf_float+0x1a0>
 8004296:	2767      	movs	r7, #103	; 0x67
 8004298:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800429a:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800429c:	4293      	cmp	r3, r2
 800429e:	db05      	blt.n	80042ac <_printf_float+0x1d0>
 80042a0:	6822      	ldr	r2, [r4, #0]
 80042a2:	6123      	str	r3, [r4, #16]
 80042a4:	07d2      	lsls	r2, r2, #31
 80042a6:	d5e9      	bpl.n	800427c <_printf_float+0x1a0>
 80042a8:	3301      	adds	r3, #1
 80042aa:	e7e6      	b.n	800427a <_printf_float+0x19e>
 80042ac:	2101      	movs	r1, #1
 80042ae:	2b00      	cmp	r3, #0
 80042b0:	dc01      	bgt.n	80042b6 <_printf_float+0x1da>
 80042b2:	1849      	adds	r1, r1, r1
 80042b4:	1ac9      	subs	r1, r1, r3
 80042b6:	1852      	adds	r2, r2, r1
 80042b8:	e7eb      	b.n	8004292 <_printf_float+0x1b6>
 80042ba:	6822      	ldr	r2, [r4, #0]
 80042bc:	0553      	lsls	r3, r2, #21
 80042be:	d408      	bmi.n	80042d2 <_printf_float+0x1f6>
 80042c0:	6923      	ldr	r3, [r4, #16]
 80042c2:	002a      	movs	r2, r5
 80042c4:	990a      	ldr	r1, [sp, #40]	; 0x28
 80042c6:	9809      	ldr	r0, [sp, #36]	; 0x24
 80042c8:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 80042ca:	47a8      	blx	r5
 80042cc:	1c43      	adds	r3, r0, #1
 80042ce:	d129      	bne.n	8004324 <_printf_float+0x248>
 80042d0:	e75f      	b.n	8004192 <_printf_float+0xb6>
 80042d2:	2f65      	cmp	r7, #101	; 0x65
 80042d4:	d800      	bhi.n	80042d8 <_printf_float+0x1fc>
 80042d6:	e0e0      	b.n	800449a <_printf_float+0x3be>
 80042d8:	6ca0      	ldr	r0, [r4, #72]	; 0x48
 80042da:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
 80042dc:	2200      	movs	r2, #0
 80042de:	2300      	movs	r3, #0
 80042e0:	f7fc f8aa 	bl	8000438 <__aeabi_dcmpeq>
 80042e4:	2800      	cmp	r0, #0
 80042e6:	d034      	beq.n	8004352 <_printf_float+0x276>
 80042e8:	2301      	movs	r3, #1
 80042ea:	4a42      	ldr	r2, [pc, #264]	; (80043f4 <_printf_float+0x318>)
 80042ec:	990a      	ldr	r1, [sp, #40]	; 0x28
 80042ee:	9809      	ldr	r0, [sp, #36]	; 0x24
 80042f0:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 80042f2:	47a8      	blx	r5
 80042f4:	1c43      	adds	r3, r0, #1
 80042f6:	d100      	bne.n	80042fa <_printf_float+0x21e>
 80042f8:	e74b      	b.n	8004192 <_printf_float+0xb6>
 80042fa:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80042fc:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80042fe:	4293      	cmp	r3, r2
 8004300:	db02      	blt.n	8004308 <_printf_float+0x22c>
 8004302:	6823      	ldr	r3, [r4, #0]
 8004304:	07db      	lsls	r3, r3, #31
 8004306:	d50d      	bpl.n	8004324 <_printf_float+0x248>
 8004308:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 800430a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800430c:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 800430e:	990a      	ldr	r1, [sp, #40]	; 0x28
 8004310:	9809      	ldr	r0, [sp, #36]	; 0x24
 8004312:	47a8      	blx	r5
 8004314:	2500      	movs	r5, #0
 8004316:	1c43      	adds	r3, r0, #1
 8004318:	d100      	bne.n	800431c <_printf_float+0x240>
 800431a:	e73a      	b.n	8004192 <_printf_float+0xb6>
 800431c:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800431e:	3b01      	subs	r3, #1
 8004320:	42ab      	cmp	r3, r5
 8004322:	dc0a      	bgt.n	800433a <_printf_float+0x25e>
 8004324:	6823      	ldr	r3, [r4, #0]
 8004326:	079b      	lsls	r3, r3, #30
 8004328:	d500      	bpl.n	800432c <_printf_float+0x250>
 800432a:	e108      	b.n	800453e <_printf_float+0x462>
 800432c:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 800432e:	68e0      	ldr	r0, [r4, #12]
 8004330:	4298      	cmp	r0, r3
 8004332:	db00      	blt.n	8004336 <_printf_float+0x25a>
 8004334:	e72f      	b.n	8004196 <_printf_float+0xba>
 8004336:	0018      	movs	r0, r3
 8004338:	e72d      	b.n	8004196 <_printf_float+0xba>
 800433a:	0022      	movs	r2, r4
 800433c:	2301      	movs	r3, #1
 800433e:	321a      	adds	r2, #26
 8004340:	990a      	ldr	r1, [sp, #40]	; 0x28
 8004342:	9809      	ldr	r0, [sp, #36]	; 0x24
 8004344:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 8004346:	47b0      	blx	r6
 8004348:	1c43      	adds	r3, r0, #1
 800434a:	d100      	bne.n	800434e <_printf_float+0x272>
 800434c:	e721      	b.n	8004192 <_printf_float+0xb6>
 800434e:	3501      	adds	r5, #1
 8004350:	e7e4      	b.n	800431c <_printf_float+0x240>
 8004352:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8004354:	2b00      	cmp	r3, #0
 8004356:	dc2d      	bgt.n	80043b4 <_printf_float+0x2d8>
 8004358:	2301      	movs	r3, #1
 800435a:	4a26      	ldr	r2, [pc, #152]	; (80043f4 <_printf_float+0x318>)
 800435c:	990a      	ldr	r1, [sp, #40]	; 0x28
 800435e:	9809      	ldr	r0, [sp, #36]	; 0x24
 8004360:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 8004362:	47b0      	blx	r6
 8004364:	1c43      	adds	r3, r0, #1
 8004366:	d100      	bne.n	800436a <_printf_float+0x28e>
 8004368:	e713      	b.n	8004192 <_printf_float+0xb6>
 800436a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800436c:	2b00      	cmp	r3, #0
 800436e:	d105      	bne.n	800437c <_printf_float+0x2a0>
 8004370:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8004372:	2b00      	cmp	r3, #0
 8004374:	d102      	bne.n	800437c <_printf_float+0x2a0>
 8004376:	6823      	ldr	r3, [r4, #0]
 8004378:	07db      	lsls	r3, r3, #31
 800437a:	d5d3      	bpl.n	8004324 <_printf_float+0x248>
 800437c:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 800437e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8004380:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8004382:	990a      	ldr	r1, [sp, #40]	; 0x28
 8004384:	9809      	ldr	r0, [sp, #36]	; 0x24
 8004386:	47b0      	blx	r6
 8004388:	2600      	movs	r6, #0
 800438a:	1c43      	adds	r3, r0, #1
 800438c:	d100      	bne.n	8004390 <_printf_float+0x2b4>
 800438e:	e700      	b.n	8004192 <_printf_float+0xb6>
 8004390:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8004392:	425b      	negs	r3, r3
 8004394:	42b3      	cmp	r3, r6
 8004396:	dc01      	bgt.n	800439c <_printf_float+0x2c0>
 8004398:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800439a:	e792      	b.n	80042c2 <_printf_float+0x1e6>
 800439c:	0022      	movs	r2, r4
 800439e:	2301      	movs	r3, #1
 80043a0:	321a      	adds	r2, #26
 80043a2:	990a      	ldr	r1, [sp, #40]	; 0x28
 80043a4:	9809      	ldr	r0, [sp, #36]	; 0x24
 80043a6:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 80043a8:	47b8      	blx	r7
 80043aa:	1c43      	adds	r3, r0, #1
 80043ac:	d100      	bne.n	80043b0 <_printf_float+0x2d4>
 80043ae:	e6f0      	b.n	8004192 <_printf_float+0xb6>
 80043b0:	3601      	adds	r6, #1
 80043b2:	e7ed      	b.n	8004390 <_printf_float+0x2b4>
 80043b4:	6da3      	ldr	r3, [r4, #88]	; 0x58
 80043b6:	9f12      	ldr	r7, [sp, #72]	; 0x48
 80043b8:	429f      	cmp	r7, r3
 80043ba:	dd00      	ble.n	80043be <_printf_float+0x2e2>
 80043bc:	001f      	movs	r7, r3
 80043be:	2f00      	cmp	r7, #0
 80043c0:	dd08      	ble.n	80043d4 <_printf_float+0x2f8>
 80043c2:	003b      	movs	r3, r7
 80043c4:	002a      	movs	r2, r5
 80043c6:	990a      	ldr	r1, [sp, #40]	; 0x28
 80043c8:	9809      	ldr	r0, [sp, #36]	; 0x24
 80043ca:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 80043cc:	47b0      	blx	r6
 80043ce:	1c43      	adds	r3, r0, #1
 80043d0:	d100      	bne.n	80043d4 <_printf_float+0x2f8>
 80043d2:	e6de      	b.n	8004192 <_printf_float+0xb6>
 80043d4:	2300      	movs	r3, #0
 80043d6:	930d      	str	r3, [sp, #52]	; 0x34
 80043d8:	43fb      	mvns	r3, r7
 80043da:	17db      	asrs	r3, r3, #31
 80043dc:	930f      	str	r3, [sp, #60]	; 0x3c
 80043de:	e018      	b.n	8004412 <_printf_float+0x336>
 80043e0:	7fefffff 	.word	0x7fefffff
 80043e4:	08006efc 	.word	0x08006efc
 80043e8:	08006ef8 	.word	0x08006ef8
 80043ec:	08006f04 	.word	0x08006f04
 80043f0:	08006f00 	.word	0x08006f00
 80043f4:	08006f08 	.word	0x08006f08
 80043f8:	0022      	movs	r2, r4
 80043fa:	2301      	movs	r3, #1
 80043fc:	321a      	adds	r2, #26
 80043fe:	990a      	ldr	r1, [sp, #40]	; 0x28
 8004400:	9809      	ldr	r0, [sp, #36]	; 0x24
 8004402:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 8004404:	47b0      	blx	r6
 8004406:	1c43      	adds	r3, r0, #1
 8004408:	d100      	bne.n	800440c <_printf_float+0x330>
 800440a:	e6c2      	b.n	8004192 <_printf_float+0xb6>
 800440c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800440e:	3301      	adds	r3, #1
 8004410:	930d      	str	r3, [sp, #52]	; 0x34
 8004412:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8004414:	6da6      	ldr	r6, [r4, #88]	; 0x58
 8004416:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8004418:	403b      	ands	r3, r7
 800441a:	1af3      	subs	r3, r6, r3
 800441c:	4293      	cmp	r3, r2
 800441e:	dceb      	bgt.n	80043f8 <_printf_float+0x31c>
 8004420:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8004422:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8004424:	19ad      	adds	r5, r5, r6
 8004426:	4293      	cmp	r3, r2
 8004428:	db10      	blt.n	800444c <_printf_float+0x370>
 800442a:	6823      	ldr	r3, [r4, #0]
 800442c:	07db      	lsls	r3, r3, #31
 800442e:	d40d      	bmi.n	800444c <_printf_float+0x370>
 8004430:	9f12      	ldr	r7, [sp, #72]	; 0x48
 8004432:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8004434:	1bbe      	subs	r6, r7, r6
 8004436:	1aff      	subs	r7, r7, r3
 8004438:	42b7      	cmp	r7, r6
 800443a:	dd00      	ble.n	800443e <_printf_float+0x362>
 800443c:	0037      	movs	r7, r6
 800443e:	2f00      	cmp	r7, #0
 8004440:	dc0d      	bgt.n	800445e <_printf_float+0x382>
 8004442:	43fe      	mvns	r6, r7
 8004444:	17f3      	asrs	r3, r6, #31
 8004446:	2500      	movs	r5, #0
 8004448:	930c      	str	r3, [sp, #48]	; 0x30
 800444a:	e01c      	b.n	8004486 <_printf_float+0x3aa>
 800444c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800444e:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8004450:	990a      	ldr	r1, [sp, #40]	; 0x28
 8004452:	9809      	ldr	r0, [sp, #36]	; 0x24
 8004454:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 8004456:	47b8      	blx	r7
 8004458:	1c43      	adds	r3, r0, #1
 800445a:	d1e9      	bne.n	8004430 <_printf_float+0x354>
 800445c:	e699      	b.n	8004192 <_printf_float+0xb6>
 800445e:	003b      	movs	r3, r7
 8004460:	002a      	movs	r2, r5
 8004462:	990a      	ldr	r1, [sp, #40]	; 0x28
 8004464:	9809      	ldr	r0, [sp, #36]	; 0x24
 8004466:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8004468:	47a8      	blx	r5
 800446a:	1c43      	adds	r3, r0, #1
 800446c:	d1e9      	bne.n	8004442 <_printf_float+0x366>
 800446e:	e690      	b.n	8004192 <_printf_float+0xb6>
 8004470:	0022      	movs	r2, r4
 8004472:	2301      	movs	r3, #1
 8004474:	321a      	adds	r2, #26
 8004476:	990a      	ldr	r1, [sp, #40]	; 0x28
 8004478:	9809      	ldr	r0, [sp, #36]	; 0x24
 800447a:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 800447c:	47b0      	blx	r6
 800447e:	1c43      	adds	r3, r0, #1
 8004480:	d100      	bne.n	8004484 <_printf_float+0x3a8>
 8004482:	e686      	b.n	8004192 <_printf_float+0xb6>
 8004484:	3501      	adds	r5, #1
 8004486:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8004488:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800448a:	990c      	ldr	r1, [sp, #48]	; 0x30
 800448c:	1a9b      	subs	r3, r3, r2
 800448e:	003a      	movs	r2, r7
 8004490:	400a      	ands	r2, r1
 8004492:	1a9b      	subs	r3, r3, r2
 8004494:	42ab      	cmp	r3, r5
 8004496:	dceb      	bgt.n	8004470 <_printf_float+0x394>
 8004498:	e744      	b.n	8004324 <_printf_float+0x248>
 800449a:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800449c:	2b01      	cmp	r3, #1
 800449e:	dc02      	bgt.n	80044a6 <_printf_float+0x3ca>
 80044a0:	2301      	movs	r3, #1
 80044a2:	421a      	tst	r2, r3
 80044a4:	d032      	beq.n	800450c <_printf_float+0x430>
 80044a6:	2301      	movs	r3, #1
 80044a8:	002a      	movs	r2, r5
 80044aa:	990a      	ldr	r1, [sp, #40]	; 0x28
 80044ac:	9809      	ldr	r0, [sp, #36]	; 0x24
 80044ae:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 80044b0:	47b8      	blx	r7
 80044b2:	1c43      	adds	r3, r0, #1
 80044b4:	d100      	bne.n	80044b8 <_printf_float+0x3dc>
 80044b6:	e66c      	b.n	8004192 <_printf_float+0xb6>
 80044b8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80044ba:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80044bc:	990a      	ldr	r1, [sp, #40]	; 0x28
 80044be:	9809      	ldr	r0, [sp, #36]	; 0x24
 80044c0:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 80044c2:	3501      	adds	r5, #1
 80044c4:	47b8      	blx	r7
 80044c6:	1c43      	adds	r3, r0, #1
 80044c8:	d100      	bne.n	80044cc <_printf_float+0x3f0>
 80044ca:	e662      	b.n	8004192 <_printf_float+0xb6>
 80044cc:	6ca0      	ldr	r0, [r4, #72]	; 0x48
 80044ce:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
 80044d0:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80044d2:	2200      	movs	r2, #0
 80044d4:	1e5f      	subs	r7, r3, #1
 80044d6:	2300      	movs	r3, #0
 80044d8:	f7fb ffae 	bl	8000438 <__aeabi_dcmpeq>
 80044dc:	003b      	movs	r3, r7
 80044de:	2800      	cmp	r0, #0
 80044e0:	d014      	beq.n	800450c <_printf_float+0x430>
 80044e2:	2500      	movs	r5, #0
 80044e4:	e00a      	b.n	80044fc <_printf_float+0x420>
 80044e6:	0022      	movs	r2, r4
 80044e8:	2301      	movs	r3, #1
 80044ea:	321a      	adds	r2, #26
 80044ec:	990a      	ldr	r1, [sp, #40]	; 0x28
 80044ee:	9809      	ldr	r0, [sp, #36]	; 0x24
 80044f0:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 80044f2:	47b8      	blx	r7
 80044f4:	1c43      	adds	r3, r0, #1
 80044f6:	d100      	bne.n	80044fa <_printf_float+0x41e>
 80044f8:	e64b      	b.n	8004192 <_printf_float+0xb6>
 80044fa:	3501      	adds	r5, #1
 80044fc:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80044fe:	3b01      	subs	r3, #1
 8004500:	42ab      	cmp	r3, r5
 8004502:	dcf0      	bgt.n	80044e6 <_printf_float+0x40a>
 8004504:	0022      	movs	r2, r4
 8004506:	0033      	movs	r3, r6
 8004508:	3250      	adds	r2, #80	; 0x50
 800450a:	e6db      	b.n	80042c4 <_printf_float+0x1e8>
 800450c:	002a      	movs	r2, r5
 800450e:	990a      	ldr	r1, [sp, #40]	; 0x28
 8004510:	9809      	ldr	r0, [sp, #36]	; 0x24
 8004512:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8004514:	47a8      	blx	r5
 8004516:	1c43      	adds	r3, r0, #1
 8004518:	d1f4      	bne.n	8004504 <_printf_float+0x428>
 800451a:	e63a      	b.n	8004192 <_printf_float+0xb6>
 800451c:	0022      	movs	r2, r4
 800451e:	2301      	movs	r3, #1
 8004520:	3219      	adds	r2, #25
 8004522:	990a      	ldr	r1, [sp, #40]	; 0x28
 8004524:	9809      	ldr	r0, [sp, #36]	; 0x24
 8004526:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 8004528:	47b0      	blx	r6
 800452a:	1c43      	adds	r3, r0, #1
 800452c:	d100      	bne.n	8004530 <_printf_float+0x454>
 800452e:	e630      	b.n	8004192 <_printf_float+0xb6>
 8004530:	3501      	adds	r5, #1
 8004532:	68e3      	ldr	r3, [r4, #12]
 8004534:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8004536:	1a9b      	subs	r3, r3, r2
 8004538:	42ab      	cmp	r3, r5
 800453a:	dcef      	bgt.n	800451c <_printf_float+0x440>
 800453c:	e6f6      	b.n	800432c <_printf_float+0x250>
 800453e:	2500      	movs	r5, #0
 8004540:	e7f7      	b.n	8004532 <_printf_float+0x456>
 8004542:	2a00      	cmp	r2, #0
 8004544:	d100      	bne.n	8004548 <_printf_float+0x46c>
 8004546:	e689      	b.n	800425c <_printf_float+0x180>
 8004548:	2100      	movs	r1, #0
 800454a:	9106      	str	r1, [sp, #24]
 800454c:	a912      	add	r1, sp, #72	; 0x48
 800454e:	9105      	str	r1, [sp, #20]
 8004550:	a911      	add	r1, sp, #68	; 0x44
 8004552:	9103      	str	r1, [sp, #12]
 8004554:	2123      	movs	r1, #35	; 0x23
 8004556:	a808      	add	r0, sp, #32
 8004558:	1809      	adds	r1, r1, r0
 800455a:	6023      	str	r3, [r4, #0]
 800455c:	9301      	str	r3, [sp, #4]
 800455e:	9200      	str	r2, [sp, #0]
 8004560:	002b      	movs	r3, r5
 8004562:	9704      	str	r7, [sp, #16]
 8004564:	9102      	str	r1, [sp, #8]
 8004566:	0032      	movs	r2, r6
 8004568:	9809      	ldr	r0, [sp, #36]	; 0x24
 800456a:	f7ff fd1a 	bl	8003fa2 <__cvt>
 800456e:	0005      	movs	r5, r0
 8004570:	e645      	b.n	80041fe <_printf_float+0x122>
 8004572:	46c0      	nop			; (mov r8, r8)

08004574 <_printf_common>:
 8004574:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8004576:	0015      	movs	r5, r2
 8004578:	9301      	str	r3, [sp, #4]
 800457a:	688a      	ldr	r2, [r1, #8]
 800457c:	690b      	ldr	r3, [r1, #16]
 800457e:	9000      	str	r0, [sp, #0]
 8004580:	000c      	movs	r4, r1
 8004582:	4293      	cmp	r3, r2
 8004584:	da00      	bge.n	8004588 <_printf_common+0x14>
 8004586:	0013      	movs	r3, r2
 8004588:	0022      	movs	r2, r4
 800458a:	602b      	str	r3, [r5, #0]
 800458c:	3243      	adds	r2, #67	; 0x43
 800458e:	7812      	ldrb	r2, [r2, #0]
 8004590:	2a00      	cmp	r2, #0
 8004592:	d001      	beq.n	8004598 <_printf_common+0x24>
 8004594:	3301      	adds	r3, #1
 8004596:	602b      	str	r3, [r5, #0]
 8004598:	6823      	ldr	r3, [r4, #0]
 800459a:	069b      	lsls	r3, r3, #26
 800459c:	d502      	bpl.n	80045a4 <_printf_common+0x30>
 800459e:	682b      	ldr	r3, [r5, #0]
 80045a0:	3302      	adds	r3, #2
 80045a2:	602b      	str	r3, [r5, #0]
 80045a4:	2706      	movs	r7, #6
 80045a6:	6823      	ldr	r3, [r4, #0]
 80045a8:	401f      	ands	r7, r3
 80045aa:	d027      	beq.n	80045fc <_printf_common+0x88>
 80045ac:	0023      	movs	r3, r4
 80045ae:	3343      	adds	r3, #67	; 0x43
 80045b0:	781b      	ldrb	r3, [r3, #0]
 80045b2:	1e5a      	subs	r2, r3, #1
 80045b4:	4193      	sbcs	r3, r2
 80045b6:	6822      	ldr	r2, [r4, #0]
 80045b8:	0692      	lsls	r2, r2, #26
 80045ba:	d430      	bmi.n	800461e <_printf_common+0xaa>
 80045bc:	0022      	movs	r2, r4
 80045be:	9901      	ldr	r1, [sp, #4]
 80045c0:	3243      	adds	r2, #67	; 0x43
 80045c2:	9800      	ldr	r0, [sp, #0]
 80045c4:	9e08      	ldr	r6, [sp, #32]
 80045c6:	47b0      	blx	r6
 80045c8:	1c43      	adds	r3, r0, #1
 80045ca:	d025      	beq.n	8004618 <_printf_common+0xa4>
 80045cc:	2306      	movs	r3, #6
 80045ce:	6820      	ldr	r0, [r4, #0]
 80045d0:	682a      	ldr	r2, [r5, #0]
 80045d2:	68e1      	ldr	r1, [r4, #12]
 80045d4:	4003      	ands	r3, r0
 80045d6:	2500      	movs	r5, #0
 80045d8:	2b04      	cmp	r3, #4
 80045da:	d103      	bne.n	80045e4 <_printf_common+0x70>
 80045dc:	1a8d      	subs	r5, r1, r2
 80045de:	43eb      	mvns	r3, r5
 80045e0:	17db      	asrs	r3, r3, #31
 80045e2:	401d      	ands	r5, r3
 80045e4:	68a3      	ldr	r3, [r4, #8]
 80045e6:	6922      	ldr	r2, [r4, #16]
 80045e8:	4293      	cmp	r3, r2
 80045ea:	dd01      	ble.n	80045f0 <_printf_common+0x7c>
 80045ec:	1a9b      	subs	r3, r3, r2
 80045ee:	18ed      	adds	r5, r5, r3
 80045f0:	2700      	movs	r7, #0
 80045f2:	42bd      	cmp	r5, r7
 80045f4:	d120      	bne.n	8004638 <_printf_common+0xc4>
 80045f6:	2000      	movs	r0, #0
 80045f8:	e010      	b.n	800461c <_printf_common+0xa8>
 80045fa:	3701      	adds	r7, #1
 80045fc:	68e3      	ldr	r3, [r4, #12]
 80045fe:	682a      	ldr	r2, [r5, #0]
 8004600:	1a9b      	subs	r3, r3, r2
 8004602:	42bb      	cmp	r3, r7
 8004604:	ddd2      	ble.n	80045ac <_printf_common+0x38>
 8004606:	0022      	movs	r2, r4
 8004608:	2301      	movs	r3, #1
 800460a:	3219      	adds	r2, #25
 800460c:	9901      	ldr	r1, [sp, #4]
 800460e:	9800      	ldr	r0, [sp, #0]
 8004610:	9e08      	ldr	r6, [sp, #32]
 8004612:	47b0      	blx	r6
 8004614:	1c43      	adds	r3, r0, #1
 8004616:	d1f0      	bne.n	80045fa <_printf_common+0x86>
 8004618:	2001      	movs	r0, #1
 800461a:	4240      	negs	r0, r0
 800461c:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 800461e:	2030      	movs	r0, #48	; 0x30
 8004620:	18e1      	adds	r1, r4, r3
 8004622:	3143      	adds	r1, #67	; 0x43
 8004624:	7008      	strb	r0, [r1, #0]
 8004626:	0021      	movs	r1, r4
 8004628:	1c5a      	adds	r2, r3, #1
 800462a:	3145      	adds	r1, #69	; 0x45
 800462c:	7809      	ldrb	r1, [r1, #0]
 800462e:	18a2      	adds	r2, r4, r2
 8004630:	3243      	adds	r2, #67	; 0x43
 8004632:	3302      	adds	r3, #2
 8004634:	7011      	strb	r1, [r2, #0]
 8004636:	e7c1      	b.n	80045bc <_printf_common+0x48>
 8004638:	0022      	movs	r2, r4
 800463a:	2301      	movs	r3, #1
 800463c:	321a      	adds	r2, #26
 800463e:	9901      	ldr	r1, [sp, #4]
 8004640:	9800      	ldr	r0, [sp, #0]
 8004642:	9e08      	ldr	r6, [sp, #32]
 8004644:	47b0      	blx	r6
 8004646:	1c43      	adds	r3, r0, #1
 8004648:	d0e6      	beq.n	8004618 <_printf_common+0xa4>
 800464a:	3701      	adds	r7, #1
 800464c:	e7d1      	b.n	80045f2 <_printf_common+0x7e>
	...

08004650 <_printf_i>:
 8004650:	b5f0      	push	{r4, r5, r6, r7, lr}
 8004652:	b089      	sub	sp, #36	; 0x24
 8004654:	9204      	str	r2, [sp, #16]
 8004656:	000a      	movs	r2, r1
 8004658:	3243      	adds	r2, #67	; 0x43
 800465a:	9305      	str	r3, [sp, #20]
 800465c:	9003      	str	r0, [sp, #12]
 800465e:	9202      	str	r2, [sp, #8]
 8004660:	7e0a      	ldrb	r2, [r1, #24]
 8004662:	000c      	movs	r4, r1
 8004664:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8004666:	2a6e      	cmp	r2, #110	; 0x6e
 8004668:	d100      	bne.n	800466c <_printf_i+0x1c>
 800466a:	e086      	b.n	800477a <_printf_i+0x12a>
 800466c:	d81f      	bhi.n	80046ae <_printf_i+0x5e>
 800466e:	2a63      	cmp	r2, #99	; 0x63
 8004670:	d033      	beq.n	80046da <_printf_i+0x8a>
 8004672:	d808      	bhi.n	8004686 <_printf_i+0x36>
 8004674:	2a00      	cmp	r2, #0
 8004676:	d100      	bne.n	800467a <_printf_i+0x2a>
 8004678:	e08c      	b.n	8004794 <_printf_i+0x144>
 800467a:	2a58      	cmp	r2, #88	; 0x58
 800467c:	d04d      	beq.n	800471a <_printf_i+0xca>
 800467e:	0025      	movs	r5, r4
 8004680:	3542      	adds	r5, #66	; 0x42
 8004682:	702a      	strb	r2, [r5, #0]
 8004684:	e030      	b.n	80046e8 <_printf_i+0x98>
 8004686:	2a64      	cmp	r2, #100	; 0x64
 8004688:	d001      	beq.n	800468e <_printf_i+0x3e>
 800468a:	2a69      	cmp	r2, #105	; 0x69
 800468c:	d1f7      	bne.n	800467e <_printf_i+0x2e>
 800468e:	6819      	ldr	r1, [r3, #0]
 8004690:	6825      	ldr	r5, [r4, #0]
 8004692:	1d0a      	adds	r2, r1, #4
 8004694:	0628      	lsls	r0, r5, #24
 8004696:	d529      	bpl.n	80046ec <_printf_i+0x9c>
 8004698:	6808      	ldr	r0, [r1, #0]
 800469a:	601a      	str	r2, [r3, #0]
 800469c:	2800      	cmp	r0, #0
 800469e:	da03      	bge.n	80046a8 <_printf_i+0x58>
 80046a0:	232d      	movs	r3, #45	; 0x2d
 80046a2:	9a02      	ldr	r2, [sp, #8]
 80046a4:	4240      	negs	r0, r0
 80046a6:	7013      	strb	r3, [r2, #0]
 80046a8:	4e6b      	ldr	r6, [pc, #428]	; (8004858 <_printf_i+0x208>)
 80046aa:	270a      	movs	r7, #10
 80046ac:	e04f      	b.n	800474e <_printf_i+0xfe>
 80046ae:	2a73      	cmp	r2, #115	; 0x73
 80046b0:	d074      	beq.n	800479c <_printf_i+0x14c>
 80046b2:	d808      	bhi.n	80046c6 <_printf_i+0x76>
 80046b4:	2a6f      	cmp	r2, #111	; 0x6f
 80046b6:	d01f      	beq.n	80046f8 <_printf_i+0xa8>
 80046b8:	2a70      	cmp	r2, #112	; 0x70
 80046ba:	d1e0      	bne.n	800467e <_printf_i+0x2e>
 80046bc:	2220      	movs	r2, #32
 80046be:	6809      	ldr	r1, [r1, #0]
 80046c0:	430a      	orrs	r2, r1
 80046c2:	6022      	str	r2, [r4, #0]
 80046c4:	e003      	b.n	80046ce <_printf_i+0x7e>
 80046c6:	2a75      	cmp	r2, #117	; 0x75
 80046c8:	d016      	beq.n	80046f8 <_printf_i+0xa8>
 80046ca:	2a78      	cmp	r2, #120	; 0x78
 80046cc:	d1d7      	bne.n	800467e <_printf_i+0x2e>
 80046ce:	0022      	movs	r2, r4
 80046d0:	2178      	movs	r1, #120	; 0x78
 80046d2:	3245      	adds	r2, #69	; 0x45
 80046d4:	7011      	strb	r1, [r2, #0]
 80046d6:	4e61      	ldr	r6, [pc, #388]	; (800485c <_printf_i+0x20c>)
 80046d8:	e022      	b.n	8004720 <_printf_i+0xd0>
 80046da:	0025      	movs	r5, r4
 80046dc:	681a      	ldr	r2, [r3, #0]
 80046de:	3542      	adds	r5, #66	; 0x42
 80046e0:	1d11      	adds	r1, r2, #4
 80046e2:	6019      	str	r1, [r3, #0]
 80046e4:	6813      	ldr	r3, [r2, #0]
 80046e6:	702b      	strb	r3, [r5, #0]
 80046e8:	2301      	movs	r3, #1
 80046ea:	e065      	b.n	80047b8 <_printf_i+0x168>
 80046ec:	6808      	ldr	r0, [r1, #0]
 80046ee:	601a      	str	r2, [r3, #0]
 80046f0:	0669      	lsls	r1, r5, #25
 80046f2:	d5d3      	bpl.n	800469c <_printf_i+0x4c>
 80046f4:	b200      	sxth	r0, r0
 80046f6:	e7d1      	b.n	800469c <_printf_i+0x4c>
 80046f8:	6819      	ldr	r1, [r3, #0]
 80046fa:	6825      	ldr	r5, [r4, #0]
 80046fc:	1d08      	adds	r0, r1, #4
 80046fe:	6018      	str	r0, [r3, #0]
 8004700:	6808      	ldr	r0, [r1, #0]
 8004702:	062e      	lsls	r6, r5, #24
 8004704:	d505      	bpl.n	8004712 <_printf_i+0xc2>
 8004706:	4e54      	ldr	r6, [pc, #336]	; (8004858 <_printf_i+0x208>)
 8004708:	2708      	movs	r7, #8
 800470a:	2a6f      	cmp	r2, #111	; 0x6f
 800470c:	d01b      	beq.n	8004746 <_printf_i+0xf6>
 800470e:	270a      	movs	r7, #10
 8004710:	e019      	b.n	8004746 <_printf_i+0xf6>
 8004712:	066d      	lsls	r5, r5, #25
 8004714:	d5f7      	bpl.n	8004706 <_printf_i+0xb6>
 8004716:	b280      	uxth	r0, r0
 8004718:	e7f5      	b.n	8004706 <_printf_i+0xb6>
 800471a:	3145      	adds	r1, #69	; 0x45
 800471c:	4e4e      	ldr	r6, [pc, #312]	; (8004858 <_printf_i+0x208>)
 800471e:	700a      	strb	r2, [r1, #0]
 8004720:	6818      	ldr	r0, [r3, #0]
 8004722:	6822      	ldr	r2, [r4, #0]
 8004724:	1d01      	adds	r1, r0, #4
 8004726:	6800      	ldr	r0, [r0, #0]
 8004728:	6019      	str	r1, [r3, #0]
 800472a:	0615      	lsls	r5, r2, #24
 800472c:	d521      	bpl.n	8004772 <_printf_i+0x122>
 800472e:	07d3      	lsls	r3, r2, #31
 8004730:	d502      	bpl.n	8004738 <_printf_i+0xe8>
 8004732:	2320      	movs	r3, #32
 8004734:	431a      	orrs	r2, r3
 8004736:	6022      	str	r2, [r4, #0]
 8004738:	2710      	movs	r7, #16
 800473a:	2800      	cmp	r0, #0
 800473c:	d103      	bne.n	8004746 <_printf_i+0xf6>
 800473e:	2320      	movs	r3, #32
 8004740:	6822      	ldr	r2, [r4, #0]
 8004742:	439a      	bics	r2, r3
 8004744:	6022      	str	r2, [r4, #0]
 8004746:	0023      	movs	r3, r4
 8004748:	2200      	movs	r2, #0
 800474a:	3343      	adds	r3, #67	; 0x43
 800474c:	701a      	strb	r2, [r3, #0]
 800474e:	6863      	ldr	r3, [r4, #4]
 8004750:	60a3      	str	r3, [r4, #8]
 8004752:	2b00      	cmp	r3, #0
 8004754:	db58      	blt.n	8004808 <_printf_i+0x1b8>
 8004756:	2204      	movs	r2, #4
 8004758:	6821      	ldr	r1, [r4, #0]
 800475a:	4391      	bics	r1, r2
 800475c:	6021      	str	r1, [r4, #0]
 800475e:	2800      	cmp	r0, #0
 8004760:	d154      	bne.n	800480c <_printf_i+0x1bc>
 8004762:	9d02      	ldr	r5, [sp, #8]
 8004764:	2b00      	cmp	r3, #0
 8004766:	d05a      	beq.n	800481e <_printf_i+0x1ce>
 8004768:	0025      	movs	r5, r4
 800476a:	7833      	ldrb	r3, [r6, #0]
 800476c:	3542      	adds	r5, #66	; 0x42
 800476e:	702b      	strb	r3, [r5, #0]
 8004770:	e055      	b.n	800481e <_printf_i+0x1ce>
 8004772:	0655      	lsls	r5, r2, #25
 8004774:	d5db      	bpl.n	800472e <_printf_i+0xde>
 8004776:	b280      	uxth	r0, r0
 8004778:	e7d9      	b.n	800472e <_printf_i+0xde>
 800477a:	681a      	ldr	r2, [r3, #0]
 800477c:	680d      	ldr	r5, [r1, #0]
 800477e:	1d10      	adds	r0, r2, #4
 8004780:	6949      	ldr	r1, [r1, #20]
 8004782:	6018      	str	r0, [r3, #0]
 8004784:	6813      	ldr	r3, [r2, #0]
 8004786:	062e      	lsls	r6, r5, #24
 8004788:	d501      	bpl.n	800478e <_printf_i+0x13e>
 800478a:	6019      	str	r1, [r3, #0]
 800478c:	e002      	b.n	8004794 <_printf_i+0x144>
 800478e:	066d      	lsls	r5, r5, #25
 8004790:	d5fb      	bpl.n	800478a <_printf_i+0x13a>
 8004792:	8019      	strh	r1, [r3, #0]
 8004794:	2300      	movs	r3, #0
 8004796:	9d02      	ldr	r5, [sp, #8]
 8004798:	6123      	str	r3, [r4, #16]
 800479a:	e04f      	b.n	800483c <_printf_i+0x1ec>
 800479c:	681a      	ldr	r2, [r3, #0]
 800479e:	1d11      	adds	r1, r2, #4
 80047a0:	6019      	str	r1, [r3, #0]
 80047a2:	6815      	ldr	r5, [r2, #0]
 80047a4:	2100      	movs	r1, #0
 80047a6:	6862      	ldr	r2, [r4, #4]
 80047a8:	0028      	movs	r0, r5
 80047aa:	f000 fef5 	bl	8005598 <memchr>
 80047ae:	2800      	cmp	r0, #0
 80047b0:	d001      	beq.n	80047b6 <_printf_i+0x166>
 80047b2:	1b40      	subs	r0, r0, r5
 80047b4:	6060      	str	r0, [r4, #4]
 80047b6:	6863      	ldr	r3, [r4, #4]
 80047b8:	6123      	str	r3, [r4, #16]
 80047ba:	2300      	movs	r3, #0
 80047bc:	9a02      	ldr	r2, [sp, #8]
 80047be:	7013      	strb	r3, [r2, #0]
 80047c0:	e03c      	b.n	800483c <_printf_i+0x1ec>
 80047c2:	6923      	ldr	r3, [r4, #16]
 80047c4:	002a      	movs	r2, r5
 80047c6:	9904      	ldr	r1, [sp, #16]
 80047c8:	9803      	ldr	r0, [sp, #12]
 80047ca:	9d05      	ldr	r5, [sp, #20]
 80047cc:	47a8      	blx	r5
 80047ce:	1c43      	adds	r3, r0, #1
 80047d0:	d03e      	beq.n	8004850 <_printf_i+0x200>
 80047d2:	6823      	ldr	r3, [r4, #0]
 80047d4:	079b      	lsls	r3, r3, #30
 80047d6:	d415      	bmi.n	8004804 <_printf_i+0x1b4>
 80047d8:	9b07      	ldr	r3, [sp, #28]
 80047da:	68e0      	ldr	r0, [r4, #12]
 80047dc:	4298      	cmp	r0, r3
 80047de:	da39      	bge.n	8004854 <_printf_i+0x204>
 80047e0:	0018      	movs	r0, r3
 80047e2:	e037      	b.n	8004854 <_printf_i+0x204>
 80047e4:	0022      	movs	r2, r4
 80047e6:	2301      	movs	r3, #1
 80047e8:	3219      	adds	r2, #25
 80047ea:	9904      	ldr	r1, [sp, #16]
 80047ec:	9803      	ldr	r0, [sp, #12]
 80047ee:	9e05      	ldr	r6, [sp, #20]
 80047f0:	47b0      	blx	r6
 80047f2:	1c43      	adds	r3, r0, #1
 80047f4:	d02c      	beq.n	8004850 <_printf_i+0x200>
 80047f6:	3501      	adds	r5, #1
 80047f8:	68e3      	ldr	r3, [r4, #12]
 80047fa:	9a07      	ldr	r2, [sp, #28]
 80047fc:	1a9b      	subs	r3, r3, r2
 80047fe:	42ab      	cmp	r3, r5
 8004800:	dcf0      	bgt.n	80047e4 <_printf_i+0x194>
 8004802:	e7e9      	b.n	80047d8 <_printf_i+0x188>
 8004804:	2500      	movs	r5, #0
 8004806:	e7f7      	b.n	80047f8 <_printf_i+0x1a8>
 8004808:	2800      	cmp	r0, #0
 800480a:	d0ad      	beq.n	8004768 <_printf_i+0x118>
 800480c:	9d02      	ldr	r5, [sp, #8]
 800480e:	0039      	movs	r1, r7
 8004810:	f7fb fd12 	bl	8000238 <__aeabi_uidivmod>
 8004814:	5c73      	ldrb	r3, [r6, r1]
 8004816:	3d01      	subs	r5, #1
 8004818:	702b      	strb	r3, [r5, #0]
 800481a:	2800      	cmp	r0, #0
 800481c:	d1f7      	bne.n	800480e <_printf_i+0x1be>
 800481e:	2f08      	cmp	r7, #8
 8004820:	d109      	bne.n	8004836 <_printf_i+0x1e6>
 8004822:	6823      	ldr	r3, [r4, #0]
 8004824:	07db      	lsls	r3, r3, #31
 8004826:	d506      	bpl.n	8004836 <_printf_i+0x1e6>
 8004828:	6863      	ldr	r3, [r4, #4]
 800482a:	6922      	ldr	r2, [r4, #16]
 800482c:	4293      	cmp	r3, r2
 800482e:	dc02      	bgt.n	8004836 <_printf_i+0x1e6>
 8004830:	2330      	movs	r3, #48	; 0x30
 8004832:	3d01      	subs	r5, #1
 8004834:	702b      	strb	r3, [r5, #0]
 8004836:	9b02      	ldr	r3, [sp, #8]
 8004838:	1b5b      	subs	r3, r3, r5
 800483a:	6123      	str	r3, [r4, #16]
 800483c:	9b05      	ldr	r3, [sp, #20]
 800483e:	aa07      	add	r2, sp, #28
 8004840:	9300      	str	r3, [sp, #0]
 8004842:	0021      	movs	r1, r4
 8004844:	9b04      	ldr	r3, [sp, #16]
 8004846:	9803      	ldr	r0, [sp, #12]
 8004848:	f7ff fe94 	bl	8004574 <_printf_common>
 800484c:	1c43      	adds	r3, r0, #1
 800484e:	d1b8      	bne.n	80047c2 <_printf_i+0x172>
 8004850:	2001      	movs	r0, #1
 8004852:	4240      	negs	r0, r0
 8004854:	b009      	add	sp, #36	; 0x24
 8004856:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8004858:	08006f0a 	.word	0x08006f0a
 800485c:	08006f1b 	.word	0x08006f1b

08004860 <siprintf>:
 8004860:	b40e      	push	{r1, r2, r3}
 8004862:	b500      	push	{lr}
 8004864:	490b      	ldr	r1, [pc, #44]	; (8004894 <siprintf+0x34>)
 8004866:	b09c      	sub	sp, #112	; 0x70
 8004868:	ab1d      	add	r3, sp, #116	; 0x74
 800486a:	9002      	str	r0, [sp, #8]
 800486c:	9006      	str	r0, [sp, #24]
 800486e:	9107      	str	r1, [sp, #28]
 8004870:	9104      	str	r1, [sp, #16]
 8004872:	4809      	ldr	r0, [pc, #36]	; (8004898 <siprintf+0x38>)
 8004874:	4909      	ldr	r1, [pc, #36]	; (800489c <siprintf+0x3c>)
 8004876:	cb04      	ldmia	r3!, {r2}
 8004878:	9105      	str	r1, [sp, #20]
 800487a:	6800      	ldr	r0, [r0, #0]
 800487c:	a902      	add	r1, sp, #8
 800487e:	9301      	str	r3, [sp, #4]
 8004880:	f001 fa94 	bl	8005dac <_svfiprintf_r>
 8004884:	2300      	movs	r3, #0
 8004886:	9a02      	ldr	r2, [sp, #8]
 8004888:	7013      	strb	r3, [r2, #0]
 800488a:	b01c      	add	sp, #112	; 0x70
 800488c:	bc08      	pop	{r3}
 800488e:	b003      	add	sp, #12
 8004890:	4718      	bx	r3
 8004892:	46c0      	nop			; (mov r8, r8)
 8004894:	7fffffff 	.word	0x7fffffff
 8004898:	20000014 	.word	0x20000014
 800489c:	ffff0208 	.word	0xffff0208

080048a0 <quorem>:
 80048a0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80048a2:	6903      	ldr	r3, [r0, #16]
 80048a4:	690c      	ldr	r4, [r1, #16]
 80048a6:	b089      	sub	sp, #36	; 0x24
 80048a8:	0007      	movs	r7, r0
 80048aa:	9105      	str	r1, [sp, #20]
 80048ac:	2600      	movs	r6, #0
 80048ae:	42a3      	cmp	r3, r4
 80048b0:	db65      	blt.n	800497e <quorem+0xde>
 80048b2:	000b      	movs	r3, r1
 80048b4:	3c01      	subs	r4, #1
 80048b6:	3314      	adds	r3, #20
 80048b8:	00a5      	lsls	r5, r4, #2
 80048ba:	9303      	str	r3, [sp, #12]
 80048bc:	195b      	adds	r3, r3, r5
 80048be:	9304      	str	r3, [sp, #16]
 80048c0:	0003      	movs	r3, r0
 80048c2:	3314      	adds	r3, #20
 80048c4:	9302      	str	r3, [sp, #8]
 80048c6:	195d      	adds	r5, r3, r5
 80048c8:	9b04      	ldr	r3, [sp, #16]
 80048ca:	6828      	ldr	r0, [r5, #0]
 80048cc:	681b      	ldr	r3, [r3, #0]
 80048ce:	1c59      	adds	r1, r3, #1
 80048d0:	9301      	str	r3, [sp, #4]
 80048d2:	f7fb fc2b 	bl	800012c <__udivsi3>
 80048d6:	9001      	str	r0, [sp, #4]
 80048d8:	42b0      	cmp	r0, r6
 80048da:	d029      	beq.n	8004930 <quorem+0x90>
 80048dc:	9b03      	ldr	r3, [sp, #12]
 80048de:	9802      	ldr	r0, [sp, #8]
 80048e0:	469c      	mov	ip, r3
 80048e2:	9606      	str	r6, [sp, #24]
 80048e4:	4662      	mov	r2, ip
 80048e6:	ca08      	ldmia	r2!, {r3}
 80048e8:	4694      	mov	ip, r2
 80048ea:	9a01      	ldr	r2, [sp, #4]
 80048ec:	b299      	uxth	r1, r3
 80048ee:	4351      	muls	r1, r2
 80048f0:	0c1b      	lsrs	r3, r3, #16
 80048f2:	4353      	muls	r3, r2
 80048f4:	1989      	adds	r1, r1, r6
 80048f6:	0c0a      	lsrs	r2, r1, #16
 80048f8:	189b      	adds	r3, r3, r2
 80048fa:	9307      	str	r3, [sp, #28]
 80048fc:	0c1e      	lsrs	r6, r3, #16
 80048fe:	6803      	ldr	r3, [r0, #0]
 8004900:	b289      	uxth	r1, r1
 8004902:	b29a      	uxth	r2, r3
 8004904:	9b06      	ldr	r3, [sp, #24]
 8004906:	18d2      	adds	r2, r2, r3
 8004908:	6803      	ldr	r3, [r0, #0]
 800490a:	1a52      	subs	r2, r2, r1
 800490c:	0c19      	lsrs	r1, r3, #16
 800490e:	466b      	mov	r3, sp
 8004910:	8b9b      	ldrh	r3, [r3, #28]
 8004912:	1acb      	subs	r3, r1, r3
 8004914:	1411      	asrs	r1, r2, #16
 8004916:	185b      	adds	r3, r3, r1
 8004918:	1419      	asrs	r1, r3, #16
 800491a:	b292      	uxth	r2, r2
 800491c:	041b      	lsls	r3, r3, #16
 800491e:	431a      	orrs	r2, r3
 8004920:	9b04      	ldr	r3, [sp, #16]
 8004922:	9106      	str	r1, [sp, #24]
 8004924:	c004      	stmia	r0!, {r2}
 8004926:	4563      	cmp	r3, ip
 8004928:	d2dc      	bcs.n	80048e4 <quorem+0x44>
 800492a:	682b      	ldr	r3, [r5, #0]
 800492c:	2b00      	cmp	r3, #0
 800492e:	d02d      	beq.n	800498c <quorem+0xec>
 8004930:	9905      	ldr	r1, [sp, #20]
 8004932:	0038      	movs	r0, r7
 8004934:	f001 f850 	bl	80059d8 <__mcmp>
 8004938:	2800      	cmp	r0, #0
 800493a:	db1f      	blt.n	800497c <quorem+0xdc>
 800493c:	2500      	movs	r5, #0
 800493e:	9b01      	ldr	r3, [sp, #4]
 8004940:	9802      	ldr	r0, [sp, #8]
 8004942:	3301      	adds	r3, #1
 8004944:	9903      	ldr	r1, [sp, #12]
 8004946:	9301      	str	r3, [sp, #4]
 8004948:	6802      	ldr	r2, [r0, #0]
 800494a:	c908      	ldmia	r1!, {r3}
 800494c:	b292      	uxth	r2, r2
 800494e:	1955      	adds	r5, r2, r5
 8004950:	b29a      	uxth	r2, r3
 8004952:	1aaa      	subs	r2, r5, r2
 8004954:	6805      	ldr	r5, [r0, #0]
 8004956:	0c1b      	lsrs	r3, r3, #16
 8004958:	0c2d      	lsrs	r5, r5, #16
 800495a:	1aeb      	subs	r3, r5, r3
 800495c:	1415      	asrs	r5, r2, #16
 800495e:	195b      	adds	r3, r3, r5
 8004960:	141d      	asrs	r5, r3, #16
 8004962:	b292      	uxth	r2, r2
 8004964:	041b      	lsls	r3, r3, #16
 8004966:	4313      	orrs	r3, r2
 8004968:	c008      	stmia	r0!, {r3}
 800496a:	9b04      	ldr	r3, [sp, #16]
 800496c:	428b      	cmp	r3, r1
 800496e:	d2eb      	bcs.n	8004948 <quorem+0xa8>
 8004970:	9a02      	ldr	r2, [sp, #8]
 8004972:	00a3      	lsls	r3, r4, #2
 8004974:	18d3      	adds	r3, r2, r3
 8004976:	681a      	ldr	r2, [r3, #0]
 8004978:	2a00      	cmp	r2, #0
 800497a:	d011      	beq.n	80049a0 <quorem+0x100>
 800497c:	9e01      	ldr	r6, [sp, #4]
 800497e:	0030      	movs	r0, r6
 8004980:	b009      	add	sp, #36	; 0x24
 8004982:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8004984:	682b      	ldr	r3, [r5, #0]
 8004986:	2b00      	cmp	r3, #0
 8004988:	d104      	bne.n	8004994 <quorem+0xf4>
 800498a:	3c01      	subs	r4, #1
 800498c:	9b02      	ldr	r3, [sp, #8]
 800498e:	3d04      	subs	r5, #4
 8004990:	42ab      	cmp	r3, r5
 8004992:	d3f7      	bcc.n	8004984 <quorem+0xe4>
 8004994:	613c      	str	r4, [r7, #16]
 8004996:	e7cb      	b.n	8004930 <quorem+0x90>
 8004998:	681a      	ldr	r2, [r3, #0]
 800499a:	2a00      	cmp	r2, #0
 800499c:	d104      	bne.n	80049a8 <quorem+0x108>
 800499e:	3c01      	subs	r4, #1
 80049a0:	9a02      	ldr	r2, [sp, #8]
 80049a2:	3b04      	subs	r3, #4
 80049a4:	429a      	cmp	r2, r3
 80049a6:	d3f7      	bcc.n	8004998 <quorem+0xf8>
 80049a8:	613c      	str	r4, [r7, #16]
 80049aa:	e7e7      	b.n	800497c <quorem+0xdc>

080049ac <_dtoa_r>:
 80049ac:	b5f0      	push	{r4, r5, r6, r7, lr}
 80049ae:	0016      	movs	r6, r2
 80049b0:	001f      	movs	r7, r3
 80049b2:	6a44      	ldr	r4, [r0, #36]	; 0x24
 80049b4:	b09b      	sub	sp, #108	; 0x6c
 80049b6:	9002      	str	r0, [sp, #8]
 80049b8:	9d23      	ldr	r5, [sp, #140]	; 0x8c
 80049ba:	9606      	str	r6, [sp, #24]
 80049bc:	9707      	str	r7, [sp, #28]
 80049be:	2c00      	cmp	r4, #0
 80049c0:	d108      	bne.n	80049d4 <_dtoa_r+0x28>
 80049c2:	2010      	movs	r0, #16
 80049c4:	f000 fdde 	bl	8005584 <malloc>
 80049c8:	9b02      	ldr	r3, [sp, #8]
 80049ca:	6258      	str	r0, [r3, #36]	; 0x24
 80049cc:	6044      	str	r4, [r0, #4]
 80049ce:	6084      	str	r4, [r0, #8]
 80049d0:	6004      	str	r4, [r0, #0]
 80049d2:	60c4      	str	r4, [r0, #12]
 80049d4:	9b02      	ldr	r3, [sp, #8]
 80049d6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80049d8:	6819      	ldr	r1, [r3, #0]
 80049da:	2900      	cmp	r1, #0
 80049dc:	d00b      	beq.n	80049f6 <_dtoa_r+0x4a>
 80049de:	685a      	ldr	r2, [r3, #4]
 80049e0:	2301      	movs	r3, #1
 80049e2:	4093      	lsls	r3, r2
 80049e4:	604a      	str	r2, [r1, #4]
 80049e6:	608b      	str	r3, [r1, #8]
 80049e8:	9802      	ldr	r0, [sp, #8]
 80049ea:	f000 fe18 	bl	800561e <_Bfree>
 80049ee:	2200      	movs	r2, #0
 80049f0:	9b02      	ldr	r3, [sp, #8]
 80049f2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80049f4:	601a      	str	r2, [r3, #0]
 80049f6:	2f00      	cmp	r7, #0
 80049f8:	da20      	bge.n	8004a3c <_dtoa_r+0x90>
 80049fa:	2301      	movs	r3, #1
 80049fc:	602b      	str	r3, [r5, #0]
 80049fe:	007b      	lsls	r3, r7, #1
 8004a00:	085b      	lsrs	r3, r3, #1
 8004a02:	9307      	str	r3, [sp, #28]
 8004a04:	9c07      	ldr	r4, [sp, #28]
 8004a06:	4bb2      	ldr	r3, [pc, #712]	; (8004cd0 <_dtoa_r+0x324>)
 8004a08:	0022      	movs	r2, r4
 8004a0a:	9317      	str	r3, [sp, #92]	; 0x5c
 8004a0c:	401a      	ands	r2, r3
 8004a0e:	429a      	cmp	r2, r3
 8004a10:	d117      	bne.n	8004a42 <_dtoa_r+0x96>
 8004a12:	4bb0      	ldr	r3, [pc, #704]	; (8004cd4 <_dtoa_r+0x328>)
 8004a14:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8004a16:	6013      	str	r3, [r2, #0]
 8004a18:	9b06      	ldr	r3, [sp, #24]
 8004a1a:	2b00      	cmp	r3, #0
 8004a1c:	d103      	bne.n	8004a26 <_dtoa_r+0x7a>
 8004a1e:	0324      	lsls	r4, r4, #12
 8004a20:	d101      	bne.n	8004a26 <_dtoa_r+0x7a>
 8004a22:	f000 fd87 	bl	8005534 <_dtoa_r+0xb88>
 8004a26:	4bac      	ldr	r3, [pc, #688]	; (8004cd8 <_dtoa_r+0x32c>)
 8004a28:	9a24      	ldr	r2, [sp, #144]	; 0x90
 8004a2a:	9308      	str	r3, [sp, #32]
 8004a2c:	2a00      	cmp	r2, #0
 8004a2e:	d002      	beq.n	8004a36 <_dtoa_r+0x8a>
 8004a30:	4baa      	ldr	r3, [pc, #680]	; (8004cdc <_dtoa_r+0x330>)
 8004a32:	9a24      	ldr	r2, [sp, #144]	; 0x90
 8004a34:	6013      	str	r3, [r2, #0]
 8004a36:	9808      	ldr	r0, [sp, #32]
 8004a38:	b01b      	add	sp, #108	; 0x6c
 8004a3a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8004a3c:	2300      	movs	r3, #0
 8004a3e:	602b      	str	r3, [r5, #0]
 8004a40:	e7e0      	b.n	8004a04 <_dtoa_r+0x58>
 8004a42:	9e06      	ldr	r6, [sp, #24]
 8004a44:	9f07      	ldr	r7, [sp, #28]
 8004a46:	2200      	movs	r2, #0
 8004a48:	2300      	movs	r3, #0
 8004a4a:	0030      	movs	r0, r6
 8004a4c:	0039      	movs	r1, r7
 8004a4e:	f7fb fcf3 	bl	8000438 <__aeabi_dcmpeq>
 8004a52:	1e05      	subs	r5, r0, #0
 8004a54:	d00b      	beq.n	8004a6e <_dtoa_r+0xc2>
 8004a56:	2301      	movs	r3, #1
 8004a58:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8004a5a:	6013      	str	r3, [r2, #0]
 8004a5c:	4ba0      	ldr	r3, [pc, #640]	; (8004ce0 <_dtoa_r+0x334>)
 8004a5e:	9a24      	ldr	r2, [sp, #144]	; 0x90
 8004a60:	9308      	str	r3, [sp, #32]
 8004a62:	2a00      	cmp	r2, #0
 8004a64:	d0e7      	beq.n	8004a36 <_dtoa_r+0x8a>
 8004a66:	4a9f      	ldr	r2, [pc, #636]	; (8004ce4 <_dtoa_r+0x338>)
 8004a68:	9924      	ldr	r1, [sp, #144]	; 0x90
 8004a6a:	600a      	str	r2, [r1, #0]
 8004a6c:	e7e3      	b.n	8004a36 <_dtoa_r+0x8a>
 8004a6e:	ab18      	add	r3, sp, #96	; 0x60
 8004a70:	9301      	str	r3, [sp, #4]
 8004a72:	ab19      	add	r3, sp, #100	; 0x64
 8004a74:	9300      	str	r3, [sp, #0]
 8004a76:	0032      	movs	r2, r6
 8004a78:	003b      	movs	r3, r7
 8004a7a:	9802      	ldr	r0, [sp, #8]
 8004a7c:	f001 f82a 	bl	8005ad4 <__d2b>
 8004a80:	0063      	lsls	r3, r4, #1
 8004a82:	9003      	str	r0, [sp, #12]
 8004a84:	0d5b      	lsrs	r3, r3, #21
 8004a86:	d074      	beq.n	8004b72 <_dtoa_r+0x1c6>
 8004a88:	033a      	lsls	r2, r7, #12
 8004a8a:	4c97      	ldr	r4, [pc, #604]	; (8004ce8 <_dtoa_r+0x33c>)
 8004a8c:	0b12      	lsrs	r2, r2, #12
 8004a8e:	4314      	orrs	r4, r2
 8004a90:	0021      	movs	r1, r4
 8004a92:	4a96      	ldr	r2, [pc, #600]	; (8004cec <_dtoa_r+0x340>)
 8004a94:	0030      	movs	r0, r6
 8004a96:	9516      	str	r5, [sp, #88]	; 0x58
 8004a98:	189e      	adds	r6, r3, r2
 8004a9a:	2200      	movs	r2, #0
 8004a9c:	4b94      	ldr	r3, [pc, #592]	; (8004cf0 <_dtoa_r+0x344>)
 8004a9e:	f7fd f803 	bl	8001aa8 <__aeabi_dsub>
 8004aa2:	4a94      	ldr	r2, [pc, #592]	; (8004cf4 <_dtoa_r+0x348>)
 8004aa4:	4b94      	ldr	r3, [pc, #592]	; (8004cf8 <_dtoa_r+0x34c>)
 8004aa6:	f7fc fd8d 	bl	80015c4 <__aeabi_dmul>
 8004aaa:	4a94      	ldr	r2, [pc, #592]	; (8004cfc <_dtoa_r+0x350>)
 8004aac:	4b94      	ldr	r3, [pc, #592]	; (8004d00 <_dtoa_r+0x354>)
 8004aae:	f7fb fe63 	bl	8000778 <__aeabi_dadd>
 8004ab2:	0004      	movs	r4, r0
 8004ab4:	0030      	movs	r0, r6
 8004ab6:	000d      	movs	r5, r1
 8004ab8:	f7fd fb90 	bl	80021dc <__aeabi_i2d>
 8004abc:	4a91      	ldr	r2, [pc, #580]	; (8004d04 <_dtoa_r+0x358>)
 8004abe:	4b92      	ldr	r3, [pc, #584]	; (8004d08 <_dtoa_r+0x35c>)
 8004ac0:	f7fc fd80 	bl	80015c4 <__aeabi_dmul>
 8004ac4:	0002      	movs	r2, r0
 8004ac6:	000b      	movs	r3, r1
 8004ac8:	0020      	movs	r0, r4
 8004aca:	0029      	movs	r1, r5
 8004acc:	f7fb fe54 	bl	8000778 <__aeabi_dadd>
 8004ad0:	0004      	movs	r4, r0
 8004ad2:	000d      	movs	r5, r1
 8004ad4:	f7fd fb4c 	bl	8002170 <__aeabi_d2iz>
 8004ad8:	2200      	movs	r2, #0
 8004ada:	0007      	movs	r7, r0
 8004adc:	2300      	movs	r3, #0
 8004ade:	0020      	movs	r0, r4
 8004ae0:	0029      	movs	r1, r5
 8004ae2:	f7fb fcaf 	bl	8000444 <__aeabi_dcmplt>
 8004ae6:	2800      	cmp	r0, #0
 8004ae8:	d009      	beq.n	8004afe <_dtoa_r+0x152>
 8004aea:	0038      	movs	r0, r7
 8004aec:	f7fd fb76 	bl	80021dc <__aeabi_i2d>
 8004af0:	002b      	movs	r3, r5
 8004af2:	0022      	movs	r2, r4
 8004af4:	f7fb fca0 	bl	8000438 <__aeabi_dcmpeq>
 8004af8:	4243      	negs	r3, r0
 8004afa:	4158      	adcs	r0, r3
 8004afc:	1a3f      	subs	r7, r7, r0
 8004afe:	2301      	movs	r3, #1
 8004b00:	9314      	str	r3, [sp, #80]	; 0x50
 8004b02:	2f16      	cmp	r7, #22
 8004b04:	d80d      	bhi.n	8004b22 <_dtoa_r+0x176>
 8004b06:	4981      	ldr	r1, [pc, #516]	; (8004d0c <_dtoa_r+0x360>)
 8004b08:	00fb      	lsls	r3, r7, #3
 8004b0a:	18c9      	adds	r1, r1, r3
 8004b0c:	6808      	ldr	r0, [r1, #0]
 8004b0e:	6849      	ldr	r1, [r1, #4]
 8004b10:	9a06      	ldr	r2, [sp, #24]
 8004b12:	9b07      	ldr	r3, [sp, #28]
 8004b14:	f7fb fcaa 	bl	800046c <__aeabi_dcmpgt>
 8004b18:	2800      	cmp	r0, #0
 8004b1a:	d046      	beq.n	8004baa <_dtoa_r+0x1fe>
 8004b1c:	2300      	movs	r3, #0
 8004b1e:	3f01      	subs	r7, #1
 8004b20:	9314      	str	r3, [sp, #80]	; 0x50
 8004b22:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8004b24:	1b9e      	subs	r6, r3, r6
 8004b26:	2300      	movs	r3, #0
 8004b28:	930a      	str	r3, [sp, #40]	; 0x28
 8004b2a:	0033      	movs	r3, r6
 8004b2c:	3b01      	subs	r3, #1
 8004b2e:	930b      	str	r3, [sp, #44]	; 0x2c
 8004b30:	d504      	bpl.n	8004b3c <_dtoa_r+0x190>
 8004b32:	2301      	movs	r3, #1
 8004b34:	1b9b      	subs	r3, r3, r6
 8004b36:	930a      	str	r3, [sp, #40]	; 0x28
 8004b38:	2300      	movs	r3, #0
 8004b3a:	930b      	str	r3, [sp, #44]	; 0x2c
 8004b3c:	2f00      	cmp	r7, #0
 8004b3e:	db36      	blt.n	8004bae <_dtoa_r+0x202>
 8004b40:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8004b42:	9711      	str	r7, [sp, #68]	; 0x44
 8004b44:	19db      	adds	r3, r3, r7
 8004b46:	930b      	str	r3, [sp, #44]	; 0x2c
 8004b48:	2300      	movs	r3, #0
 8004b4a:	9304      	str	r3, [sp, #16]
 8004b4c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8004b4e:	2401      	movs	r4, #1
 8004b50:	2b09      	cmp	r3, #9
 8004b52:	d900      	bls.n	8004b56 <_dtoa_r+0x1aa>
 8004b54:	e084      	b.n	8004c60 <_dtoa_r+0x2b4>
 8004b56:	2b05      	cmp	r3, #5
 8004b58:	dd02      	ble.n	8004b60 <_dtoa_r+0x1b4>
 8004b5a:	2400      	movs	r4, #0
 8004b5c:	3b04      	subs	r3, #4
 8004b5e:	9320      	str	r3, [sp, #128]	; 0x80
 8004b60:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8004b62:	1e98      	subs	r0, r3, #2
 8004b64:	2803      	cmp	r0, #3
 8004b66:	d900      	bls.n	8004b6a <_dtoa_r+0x1be>
 8004b68:	e084      	b.n	8004c74 <_dtoa_r+0x2c8>
 8004b6a:	f7fb fad5 	bl	8000118 <__gnu_thumb1_case_uqi>
 8004b6e:	7775      	.short	0x7775
 8004b70:	6a28      	.short	0x6a28
 8004b72:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8004b74:	9a19      	ldr	r2, [sp, #100]	; 0x64
 8004b76:	189e      	adds	r6, r3, r2
 8004b78:	4b65      	ldr	r3, [pc, #404]	; (8004d10 <_dtoa_r+0x364>)
 8004b7a:	18f2      	adds	r2, r6, r3
 8004b7c:	2a20      	cmp	r2, #32
 8004b7e:	dd0f      	ble.n	8004ba0 <_dtoa_r+0x1f4>
 8004b80:	2340      	movs	r3, #64	; 0x40
 8004b82:	1a9b      	subs	r3, r3, r2
 8004b84:	409c      	lsls	r4, r3
 8004b86:	4b63      	ldr	r3, [pc, #396]	; (8004d14 <_dtoa_r+0x368>)
 8004b88:	9806      	ldr	r0, [sp, #24]
 8004b8a:	18f3      	adds	r3, r6, r3
 8004b8c:	40d8      	lsrs	r0, r3
 8004b8e:	4320      	orrs	r0, r4
 8004b90:	f7fd fb5e 	bl	8002250 <__aeabi_ui2d>
 8004b94:	2301      	movs	r3, #1
 8004b96:	4c60      	ldr	r4, [pc, #384]	; (8004d18 <_dtoa_r+0x36c>)
 8004b98:	3e01      	subs	r6, #1
 8004b9a:	1909      	adds	r1, r1, r4
 8004b9c:	9316      	str	r3, [sp, #88]	; 0x58
 8004b9e:	e77c      	b.n	8004a9a <_dtoa_r+0xee>
 8004ba0:	2320      	movs	r3, #32
 8004ba2:	9806      	ldr	r0, [sp, #24]
 8004ba4:	1a9b      	subs	r3, r3, r2
 8004ba6:	4098      	lsls	r0, r3
 8004ba8:	e7f2      	b.n	8004b90 <_dtoa_r+0x1e4>
 8004baa:	9014      	str	r0, [sp, #80]	; 0x50
 8004bac:	e7b9      	b.n	8004b22 <_dtoa_r+0x176>
 8004bae:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8004bb0:	1bdb      	subs	r3, r3, r7
 8004bb2:	930a      	str	r3, [sp, #40]	; 0x28
 8004bb4:	427b      	negs	r3, r7
 8004bb6:	9304      	str	r3, [sp, #16]
 8004bb8:	2300      	movs	r3, #0
 8004bba:	9311      	str	r3, [sp, #68]	; 0x44
 8004bbc:	e7c6      	b.n	8004b4c <_dtoa_r+0x1a0>
 8004bbe:	2301      	movs	r3, #1
 8004bc0:	930d      	str	r3, [sp, #52]	; 0x34
 8004bc2:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8004bc4:	2b00      	cmp	r3, #0
 8004bc6:	dd59      	ble.n	8004c7c <_dtoa_r+0x2d0>
 8004bc8:	930c      	str	r3, [sp, #48]	; 0x30
 8004bca:	9309      	str	r3, [sp, #36]	; 0x24
 8004bcc:	9a02      	ldr	r2, [sp, #8]
 8004bce:	6a55      	ldr	r5, [r2, #36]	; 0x24
 8004bd0:	2200      	movs	r2, #0
 8004bd2:	606a      	str	r2, [r5, #4]
 8004bd4:	3204      	adds	r2, #4
 8004bd6:	0010      	movs	r0, r2
 8004bd8:	3014      	adds	r0, #20
 8004bda:	6869      	ldr	r1, [r5, #4]
 8004bdc:	4298      	cmp	r0, r3
 8004bde:	d952      	bls.n	8004c86 <_dtoa_r+0x2da>
 8004be0:	9802      	ldr	r0, [sp, #8]
 8004be2:	f000 fce4 	bl	80055ae <_Balloc>
 8004be6:	9b02      	ldr	r3, [sp, #8]
 8004be8:	6028      	str	r0, [r5, #0]
 8004bea:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004bec:	681b      	ldr	r3, [r3, #0]
 8004bee:	9308      	str	r3, [sp, #32]
 8004bf0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8004bf2:	2b0e      	cmp	r3, #14
 8004bf4:	d900      	bls.n	8004bf8 <_dtoa_r+0x24c>
 8004bf6:	e10a      	b.n	8004e0e <_dtoa_r+0x462>
 8004bf8:	2c00      	cmp	r4, #0
 8004bfa:	d100      	bne.n	8004bfe <_dtoa_r+0x252>
 8004bfc:	e107      	b.n	8004e0e <_dtoa_r+0x462>
 8004bfe:	9b06      	ldr	r3, [sp, #24]
 8004c00:	9c07      	ldr	r4, [sp, #28]
 8004c02:	9312      	str	r3, [sp, #72]	; 0x48
 8004c04:	9413      	str	r4, [sp, #76]	; 0x4c
 8004c06:	2f00      	cmp	r7, #0
 8004c08:	dc00      	bgt.n	8004c0c <_dtoa_r+0x260>
 8004c0a:	e089      	b.n	8004d20 <_dtoa_r+0x374>
 8004c0c:	210f      	movs	r1, #15
 8004c0e:	003a      	movs	r2, r7
 8004c10:	4b3e      	ldr	r3, [pc, #248]	; (8004d0c <_dtoa_r+0x360>)
 8004c12:	400a      	ands	r2, r1
 8004c14:	00d2      	lsls	r2, r2, #3
 8004c16:	189b      	adds	r3, r3, r2
 8004c18:	681d      	ldr	r5, [r3, #0]
 8004c1a:	685e      	ldr	r6, [r3, #4]
 8004c1c:	2302      	movs	r3, #2
 8004c1e:	113c      	asrs	r4, r7, #4
 8004c20:	930e      	str	r3, [sp, #56]	; 0x38
 8004c22:	06e3      	lsls	r3, r4, #27
 8004c24:	d50b      	bpl.n	8004c3e <_dtoa_r+0x292>
 8004c26:	4b3d      	ldr	r3, [pc, #244]	; (8004d1c <_dtoa_r+0x370>)
 8004c28:	400c      	ands	r4, r1
 8004c2a:	6a1a      	ldr	r2, [r3, #32]
 8004c2c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004c2e:	9812      	ldr	r0, [sp, #72]	; 0x48
 8004c30:	9913      	ldr	r1, [sp, #76]	; 0x4c
 8004c32:	f7fc f8bd 	bl	8000db0 <__aeabi_ddiv>
 8004c36:	2303      	movs	r3, #3
 8004c38:	9006      	str	r0, [sp, #24]
 8004c3a:	9107      	str	r1, [sp, #28]
 8004c3c:	930e      	str	r3, [sp, #56]	; 0x38
 8004c3e:	2300      	movs	r3, #0
 8004c40:	e03a      	b.n	8004cb8 <_dtoa_r+0x30c>
 8004c42:	2301      	movs	r3, #1
 8004c44:	930d      	str	r3, [sp, #52]	; 0x34
 8004c46:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8004c48:	18fb      	adds	r3, r7, r3
 8004c4a:	930c      	str	r3, [sp, #48]	; 0x30
 8004c4c:	3301      	adds	r3, #1
 8004c4e:	9309      	str	r3, [sp, #36]	; 0x24
 8004c50:	2b00      	cmp	r3, #0
 8004c52:	dcbb      	bgt.n	8004bcc <_dtoa_r+0x220>
 8004c54:	2301      	movs	r3, #1
 8004c56:	e7b9      	b.n	8004bcc <_dtoa_r+0x220>
 8004c58:	2300      	movs	r3, #0
 8004c5a:	e7b1      	b.n	8004bc0 <_dtoa_r+0x214>
 8004c5c:	2300      	movs	r3, #0
 8004c5e:	e7f1      	b.n	8004c44 <_dtoa_r+0x298>
 8004c60:	2300      	movs	r3, #0
 8004c62:	940d      	str	r4, [sp, #52]	; 0x34
 8004c64:	9320      	str	r3, [sp, #128]	; 0x80
 8004c66:	3b01      	subs	r3, #1
 8004c68:	2200      	movs	r2, #0
 8004c6a:	930c      	str	r3, [sp, #48]	; 0x30
 8004c6c:	9309      	str	r3, [sp, #36]	; 0x24
 8004c6e:	3313      	adds	r3, #19
 8004c70:	9221      	str	r2, [sp, #132]	; 0x84
 8004c72:	e7ab      	b.n	8004bcc <_dtoa_r+0x220>
 8004c74:	2301      	movs	r3, #1
 8004c76:	930d      	str	r3, [sp, #52]	; 0x34
 8004c78:	3b02      	subs	r3, #2
 8004c7a:	e7f5      	b.n	8004c68 <_dtoa_r+0x2bc>
 8004c7c:	2301      	movs	r3, #1
 8004c7e:	930c      	str	r3, [sp, #48]	; 0x30
 8004c80:	9309      	str	r3, [sp, #36]	; 0x24
 8004c82:	001a      	movs	r2, r3
 8004c84:	e7f4      	b.n	8004c70 <_dtoa_r+0x2c4>
 8004c86:	3101      	adds	r1, #1
 8004c88:	6069      	str	r1, [r5, #4]
 8004c8a:	0052      	lsls	r2, r2, #1
 8004c8c:	e7a3      	b.n	8004bd6 <_dtoa_r+0x22a>
 8004c8e:	2301      	movs	r3, #1
 8004c90:	421c      	tst	r4, r3
 8004c92:	d00e      	beq.n	8004cb2 <_dtoa_r+0x306>
 8004c94:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8004c96:	4a21      	ldr	r2, [pc, #132]	; (8004d1c <_dtoa_r+0x370>)
 8004c98:	3301      	adds	r3, #1
 8004c9a:	930e      	str	r3, [sp, #56]	; 0x38
 8004c9c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8004c9e:	0028      	movs	r0, r5
 8004ca0:	00db      	lsls	r3, r3, #3
 8004ca2:	189b      	adds	r3, r3, r2
 8004ca4:	0031      	movs	r1, r6
 8004ca6:	681a      	ldr	r2, [r3, #0]
 8004ca8:	685b      	ldr	r3, [r3, #4]
 8004caa:	f7fc fc8b 	bl	80015c4 <__aeabi_dmul>
 8004cae:	0005      	movs	r5, r0
 8004cb0:	000e      	movs	r6, r1
 8004cb2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8004cb4:	1064      	asrs	r4, r4, #1
 8004cb6:	3301      	adds	r3, #1
 8004cb8:	9310      	str	r3, [sp, #64]	; 0x40
 8004cba:	2c00      	cmp	r4, #0
 8004cbc:	d1e7      	bne.n	8004c8e <_dtoa_r+0x2e2>
 8004cbe:	9806      	ldr	r0, [sp, #24]
 8004cc0:	9907      	ldr	r1, [sp, #28]
 8004cc2:	002a      	movs	r2, r5
 8004cc4:	0033      	movs	r3, r6
 8004cc6:	f7fc f873 	bl	8000db0 <__aeabi_ddiv>
 8004cca:	9006      	str	r0, [sp, #24]
 8004ccc:	9107      	str	r1, [sp, #28]
 8004cce:	e042      	b.n	8004d56 <_dtoa_r+0x3aa>
 8004cd0:	7ff00000 	.word	0x7ff00000
 8004cd4:	0000270f 	.word	0x0000270f
 8004cd8:	08006f35 	.word	0x08006f35
 8004cdc:	08006f38 	.word	0x08006f38
 8004ce0:	08006f08 	.word	0x08006f08
 8004ce4:	08006f09 	.word	0x08006f09
 8004ce8:	3ff00000 	.word	0x3ff00000
 8004cec:	fffffc01 	.word	0xfffffc01
 8004cf0:	3ff80000 	.word	0x3ff80000
 8004cf4:	636f4361 	.word	0x636f4361
 8004cf8:	3fd287a7 	.word	0x3fd287a7
 8004cfc:	8b60c8b3 	.word	0x8b60c8b3
 8004d00:	3fc68a28 	.word	0x3fc68a28
 8004d04:	509f79fb 	.word	0x509f79fb
 8004d08:	3fd34413 	.word	0x3fd34413
 8004d0c:	08006f68 	.word	0x08006f68
 8004d10:	00000432 	.word	0x00000432
 8004d14:	00000412 	.word	0x00000412
 8004d18:	fe100000 	.word	0xfe100000
 8004d1c:	08006f40 	.word	0x08006f40
 8004d20:	2302      	movs	r3, #2
 8004d22:	930e      	str	r3, [sp, #56]	; 0x38
 8004d24:	2f00      	cmp	r7, #0
 8004d26:	d016      	beq.n	8004d56 <_dtoa_r+0x3aa>
 8004d28:	9812      	ldr	r0, [sp, #72]	; 0x48
 8004d2a:	9913      	ldr	r1, [sp, #76]	; 0x4c
 8004d2c:	427c      	negs	r4, r7
 8004d2e:	330d      	adds	r3, #13
 8004d30:	4023      	ands	r3, r4
 8004d32:	4ace      	ldr	r2, [pc, #824]	; (800506c <_dtoa_r+0x6c0>)
 8004d34:	00db      	lsls	r3, r3, #3
 8004d36:	18d3      	adds	r3, r2, r3
 8004d38:	681a      	ldr	r2, [r3, #0]
 8004d3a:	685b      	ldr	r3, [r3, #4]
 8004d3c:	f7fc fc42 	bl	80015c4 <__aeabi_dmul>
 8004d40:	2300      	movs	r3, #0
 8004d42:	2601      	movs	r6, #1
 8004d44:	001d      	movs	r5, r3
 8004d46:	9006      	str	r0, [sp, #24]
 8004d48:	9107      	str	r1, [sp, #28]
 8004d4a:	1124      	asrs	r4, r4, #4
 8004d4c:	2c00      	cmp	r4, #0
 8004d4e:	d000      	beq.n	8004d52 <_dtoa_r+0x3a6>
 8004d50:	e08c      	b.n	8004e6c <_dtoa_r+0x4c0>
 8004d52:	2b00      	cmp	r3, #0
 8004d54:	d1b9      	bne.n	8004cca <_dtoa_r+0x31e>
 8004d56:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8004d58:	2b00      	cmp	r3, #0
 8004d5a:	d100      	bne.n	8004d5e <_dtoa_r+0x3b2>
 8004d5c:	e096      	b.n	8004e8c <_dtoa_r+0x4e0>
 8004d5e:	9c06      	ldr	r4, [sp, #24]
 8004d60:	9d07      	ldr	r5, [sp, #28]
 8004d62:	2200      	movs	r2, #0
 8004d64:	4bc2      	ldr	r3, [pc, #776]	; (8005070 <_dtoa_r+0x6c4>)
 8004d66:	0020      	movs	r0, r4
 8004d68:	0029      	movs	r1, r5
 8004d6a:	f7fb fb6b 	bl	8000444 <__aeabi_dcmplt>
 8004d6e:	2800      	cmp	r0, #0
 8004d70:	d100      	bne.n	8004d74 <_dtoa_r+0x3c8>
 8004d72:	e08b      	b.n	8004e8c <_dtoa_r+0x4e0>
 8004d74:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8004d76:	2b00      	cmp	r3, #0
 8004d78:	d100      	bne.n	8004d7c <_dtoa_r+0x3d0>
 8004d7a:	e087      	b.n	8004e8c <_dtoa_r+0x4e0>
 8004d7c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8004d7e:	2b00      	cmp	r3, #0
 8004d80:	dd41      	ble.n	8004e06 <_dtoa_r+0x45a>
 8004d82:	4bbc      	ldr	r3, [pc, #752]	; (8005074 <_dtoa_r+0x6c8>)
 8004d84:	2200      	movs	r2, #0
 8004d86:	0020      	movs	r0, r4
 8004d88:	0029      	movs	r1, r5
 8004d8a:	f7fc fc1b 	bl	80015c4 <__aeabi_dmul>
 8004d8e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8004d90:	9006      	str	r0, [sp, #24]
 8004d92:	9107      	str	r1, [sp, #28]
 8004d94:	3301      	adds	r3, #1
 8004d96:	930e      	str	r3, [sp, #56]	; 0x38
 8004d98:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8004d9a:	1e7e      	subs	r6, r7, #1
 8004d9c:	980e      	ldr	r0, [sp, #56]	; 0x38
 8004d9e:	9310      	str	r3, [sp, #64]	; 0x40
 8004da0:	f7fd fa1c 	bl	80021dc <__aeabi_i2d>
 8004da4:	9a06      	ldr	r2, [sp, #24]
 8004da6:	9b07      	ldr	r3, [sp, #28]
 8004da8:	f7fc fc0c 	bl	80015c4 <__aeabi_dmul>
 8004dac:	2200      	movs	r2, #0
 8004dae:	4bb2      	ldr	r3, [pc, #712]	; (8005078 <_dtoa_r+0x6cc>)
 8004db0:	f7fb fce2 	bl	8000778 <__aeabi_dadd>
 8004db4:	4ab1      	ldr	r2, [pc, #708]	; (800507c <_dtoa_r+0x6d0>)
 8004db6:	900e      	str	r0, [sp, #56]	; 0x38
 8004db8:	910f      	str	r1, [sp, #60]	; 0x3c
 8004dba:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8004dbc:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8004dbe:	4694      	mov	ip, r2
 8004dc0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8004dc2:	4463      	add	r3, ip
 8004dc4:	9315      	str	r3, [sp, #84]	; 0x54
 8004dc6:	001d      	movs	r5, r3
 8004dc8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8004dca:	2b00      	cmp	r3, #0
 8004dcc:	d161      	bne.n	8004e92 <_dtoa_r+0x4e6>
 8004dce:	9806      	ldr	r0, [sp, #24]
 8004dd0:	9907      	ldr	r1, [sp, #28]
 8004dd2:	2200      	movs	r2, #0
 8004dd4:	4baa      	ldr	r3, [pc, #680]	; (8005080 <_dtoa_r+0x6d4>)
 8004dd6:	f7fc fe67 	bl	8001aa8 <__aeabi_dsub>
 8004dda:	0022      	movs	r2, r4
 8004ddc:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8004dde:	9006      	str	r0, [sp, #24]
 8004de0:	9107      	str	r1, [sp, #28]
 8004de2:	f7fb fb43 	bl	800046c <__aeabi_dcmpgt>
 8004de6:	2800      	cmp	r0, #0
 8004de8:	d000      	beq.n	8004dec <_dtoa_r+0x440>
 8004dea:	e2a8      	b.n	800533e <_dtoa_r+0x992>
 8004dec:	48a5      	ldr	r0, [pc, #660]	; (8005084 <_dtoa_r+0x6d8>)
 8004dee:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8004df0:	4684      	mov	ip, r0
 8004df2:	4461      	add	r1, ip
 8004df4:	000b      	movs	r3, r1
 8004df6:	9806      	ldr	r0, [sp, #24]
 8004df8:	9907      	ldr	r1, [sp, #28]
 8004dfa:	0022      	movs	r2, r4
 8004dfc:	f7fb fb22 	bl	8000444 <__aeabi_dcmplt>
 8004e00:	2800      	cmp	r0, #0
 8004e02:	d000      	beq.n	8004e06 <_dtoa_r+0x45a>
 8004e04:	e295      	b.n	8005332 <_dtoa_r+0x986>
 8004e06:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8004e08:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8004e0a:	9306      	str	r3, [sp, #24]
 8004e0c:	9407      	str	r4, [sp, #28]
 8004e0e:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8004e10:	2b00      	cmp	r3, #0
 8004e12:	da00      	bge.n	8004e16 <_dtoa_r+0x46a>
 8004e14:	e15c      	b.n	80050d0 <_dtoa_r+0x724>
 8004e16:	2f0e      	cmp	r7, #14
 8004e18:	dd00      	ble.n	8004e1c <_dtoa_r+0x470>
 8004e1a:	e159      	b.n	80050d0 <_dtoa_r+0x724>
 8004e1c:	4b93      	ldr	r3, [pc, #588]	; (800506c <_dtoa_r+0x6c0>)
 8004e1e:	00fa      	lsls	r2, r7, #3
 8004e20:	189b      	adds	r3, r3, r2
 8004e22:	685c      	ldr	r4, [r3, #4]
 8004e24:	681b      	ldr	r3, [r3, #0]
 8004e26:	9304      	str	r3, [sp, #16]
 8004e28:	9405      	str	r4, [sp, #20]
 8004e2a:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8004e2c:	2b00      	cmp	r3, #0
 8004e2e:	db00      	blt.n	8004e32 <_dtoa_r+0x486>
 8004e30:	e0d8      	b.n	8004fe4 <_dtoa_r+0x638>
 8004e32:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8004e34:	2b00      	cmp	r3, #0
 8004e36:	dd00      	ble.n	8004e3a <_dtoa_r+0x48e>
 8004e38:	e0d4      	b.n	8004fe4 <_dtoa_r+0x638>
 8004e3a:	d000      	beq.n	8004e3e <_dtoa_r+0x492>
 8004e3c:	e27d      	b.n	800533a <_dtoa_r+0x98e>
 8004e3e:	9804      	ldr	r0, [sp, #16]
 8004e40:	9905      	ldr	r1, [sp, #20]
 8004e42:	2200      	movs	r2, #0
 8004e44:	4b8e      	ldr	r3, [pc, #568]	; (8005080 <_dtoa_r+0x6d4>)
 8004e46:	f7fc fbbd 	bl	80015c4 <__aeabi_dmul>
 8004e4a:	9a06      	ldr	r2, [sp, #24]
 8004e4c:	9b07      	ldr	r3, [sp, #28]
 8004e4e:	f7fb fb17 	bl	8000480 <__aeabi_dcmpge>
 8004e52:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8004e54:	9304      	str	r3, [sp, #16]
 8004e56:	001e      	movs	r6, r3
 8004e58:	2800      	cmp	r0, #0
 8004e5a:	d000      	beq.n	8004e5e <_dtoa_r+0x4b2>
 8004e5c:	e24f      	b.n	80052fe <_dtoa_r+0x952>
 8004e5e:	9b08      	ldr	r3, [sp, #32]
 8004e60:	9a08      	ldr	r2, [sp, #32]
 8004e62:	1c5d      	adds	r5, r3, #1
 8004e64:	2331      	movs	r3, #49	; 0x31
 8004e66:	3701      	adds	r7, #1
 8004e68:	7013      	strb	r3, [r2, #0]
 8004e6a:	e24b      	b.n	8005304 <_dtoa_r+0x958>
 8004e6c:	4234      	tst	r4, r6
 8004e6e:	d00a      	beq.n	8004e86 <_dtoa_r+0x4da>
 8004e70:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8004e72:	4a85      	ldr	r2, [pc, #532]	; (8005088 <_dtoa_r+0x6dc>)
 8004e74:	3301      	adds	r3, #1
 8004e76:	930e      	str	r3, [sp, #56]	; 0x38
 8004e78:	00eb      	lsls	r3, r5, #3
 8004e7a:	189b      	adds	r3, r3, r2
 8004e7c:	681a      	ldr	r2, [r3, #0]
 8004e7e:	685b      	ldr	r3, [r3, #4]
 8004e80:	f7fc fba0 	bl	80015c4 <__aeabi_dmul>
 8004e84:	0033      	movs	r3, r6
 8004e86:	1064      	asrs	r4, r4, #1
 8004e88:	3501      	adds	r5, #1
 8004e8a:	e75f      	b.n	8004d4c <_dtoa_r+0x3a0>
 8004e8c:	003e      	movs	r6, r7
 8004e8e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8004e90:	e784      	b.n	8004d9c <_dtoa_r+0x3f0>
 8004e92:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8004e94:	990d      	ldr	r1, [sp, #52]	; 0x34
 8004e96:	1e5a      	subs	r2, r3, #1
 8004e98:	4b74      	ldr	r3, [pc, #464]	; (800506c <_dtoa_r+0x6c0>)
 8004e9a:	00d2      	lsls	r2, r2, #3
 8004e9c:	189b      	adds	r3, r3, r2
 8004e9e:	681a      	ldr	r2, [r3, #0]
 8004ea0:	685b      	ldr	r3, [r3, #4]
 8004ea2:	2900      	cmp	r1, #0
 8004ea4:	d049      	beq.n	8004f3a <_dtoa_r+0x58e>
 8004ea6:	2000      	movs	r0, #0
 8004ea8:	4978      	ldr	r1, [pc, #480]	; (800508c <_dtoa_r+0x6e0>)
 8004eaa:	f7fb ff81 	bl	8000db0 <__aeabi_ddiv>
 8004eae:	002b      	movs	r3, r5
 8004eb0:	0022      	movs	r2, r4
 8004eb2:	f7fc fdf9 	bl	8001aa8 <__aeabi_dsub>
 8004eb6:	9b08      	ldr	r3, [sp, #32]
 8004eb8:	900e      	str	r0, [sp, #56]	; 0x38
 8004eba:	910f      	str	r1, [sp, #60]	; 0x3c
 8004ebc:	9315      	str	r3, [sp, #84]	; 0x54
 8004ebe:	9806      	ldr	r0, [sp, #24]
 8004ec0:	9907      	ldr	r1, [sp, #28]
 8004ec2:	f7fd f955 	bl	8002170 <__aeabi_d2iz>
 8004ec6:	0004      	movs	r4, r0
 8004ec8:	f7fd f988 	bl	80021dc <__aeabi_i2d>
 8004ecc:	0002      	movs	r2, r0
 8004ece:	000b      	movs	r3, r1
 8004ed0:	9806      	ldr	r0, [sp, #24]
 8004ed2:	9907      	ldr	r1, [sp, #28]
 8004ed4:	f7fc fde8 	bl	8001aa8 <__aeabi_dsub>
 8004ed8:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8004eda:	3430      	adds	r4, #48	; 0x30
 8004edc:	1c5d      	adds	r5, r3, #1
 8004ede:	701c      	strb	r4, [r3, #0]
 8004ee0:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8004ee2:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8004ee4:	9006      	str	r0, [sp, #24]
 8004ee6:	9107      	str	r1, [sp, #28]
 8004ee8:	f7fb faac 	bl	8000444 <__aeabi_dcmplt>
 8004eec:	2800      	cmp	r0, #0
 8004eee:	d16c      	bne.n	8004fca <_dtoa_r+0x61e>
 8004ef0:	9a06      	ldr	r2, [sp, #24]
 8004ef2:	9b07      	ldr	r3, [sp, #28]
 8004ef4:	2000      	movs	r0, #0
 8004ef6:	495e      	ldr	r1, [pc, #376]	; (8005070 <_dtoa_r+0x6c4>)
 8004ef8:	f7fc fdd6 	bl	8001aa8 <__aeabi_dsub>
 8004efc:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8004efe:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8004f00:	f7fb faa0 	bl	8000444 <__aeabi_dcmplt>
 8004f04:	2800      	cmp	r0, #0
 8004f06:	d000      	beq.n	8004f0a <_dtoa_r+0x55e>
 8004f08:	e0c3      	b.n	8005092 <_dtoa_r+0x6e6>
 8004f0a:	9b08      	ldr	r3, [sp, #32]
 8004f0c:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8004f0e:	1aeb      	subs	r3, r5, r3
 8004f10:	429a      	cmp	r2, r3
 8004f12:	dc00      	bgt.n	8004f16 <_dtoa_r+0x56a>
 8004f14:	e777      	b.n	8004e06 <_dtoa_r+0x45a>
 8004f16:	980e      	ldr	r0, [sp, #56]	; 0x38
 8004f18:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8004f1a:	2200      	movs	r2, #0
 8004f1c:	4b55      	ldr	r3, [pc, #340]	; (8005074 <_dtoa_r+0x6c8>)
 8004f1e:	f7fc fb51 	bl	80015c4 <__aeabi_dmul>
 8004f22:	2200      	movs	r2, #0
 8004f24:	900e      	str	r0, [sp, #56]	; 0x38
 8004f26:	910f      	str	r1, [sp, #60]	; 0x3c
 8004f28:	9806      	ldr	r0, [sp, #24]
 8004f2a:	9907      	ldr	r1, [sp, #28]
 8004f2c:	4b51      	ldr	r3, [pc, #324]	; (8005074 <_dtoa_r+0x6c8>)
 8004f2e:	f7fc fb49 	bl	80015c4 <__aeabi_dmul>
 8004f32:	9515      	str	r5, [sp, #84]	; 0x54
 8004f34:	9006      	str	r0, [sp, #24]
 8004f36:	9107      	str	r1, [sp, #28]
 8004f38:	e7c1      	b.n	8004ebe <_dtoa_r+0x512>
 8004f3a:	0020      	movs	r0, r4
 8004f3c:	0029      	movs	r1, r5
 8004f3e:	f7fc fb41 	bl	80015c4 <__aeabi_dmul>
 8004f42:	9c08      	ldr	r4, [sp, #32]
 8004f44:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8004f46:	0023      	movs	r3, r4
 8004f48:	4694      	mov	ip, r2
 8004f4a:	900e      	str	r0, [sp, #56]	; 0x38
 8004f4c:	910f      	str	r1, [sp, #60]	; 0x3c
 8004f4e:	4463      	add	r3, ip
 8004f50:	9315      	str	r3, [sp, #84]	; 0x54
 8004f52:	9806      	ldr	r0, [sp, #24]
 8004f54:	9907      	ldr	r1, [sp, #28]
 8004f56:	f7fd f90b 	bl	8002170 <__aeabi_d2iz>
 8004f5a:	0005      	movs	r5, r0
 8004f5c:	f7fd f93e 	bl	80021dc <__aeabi_i2d>
 8004f60:	000b      	movs	r3, r1
 8004f62:	0002      	movs	r2, r0
 8004f64:	9806      	ldr	r0, [sp, #24]
 8004f66:	9907      	ldr	r1, [sp, #28]
 8004f68:	f7fc fd9e 	bl	8001aa8 <__aeabi_dsub>
 8004f6c:	3530      	adds	r5, #48	; 0x30
 8004f6e:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8004f70:	7025      	strb	r5, [r4, #0]
 8004f72:	3401      	adds	r4, #1
 8004f74:	9006      	str	r0, [sp, #24]
 8004f76:	9107      	str	r1, [sp, #28]
 8004f78:	42a3      	cmp	r3, r4
 8004f7a:	d12a      	bne.n	8004fd2 <_dtoa_r+0x626>
 8004f7c:	980e      	ldr	r0, [sp, #56]	; 0x38
 8004f7e:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8004f80:	9a08      	ldr	r2, [sp, #32]
 8004f82:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8004f84:	4694      	mov	ip, r2
 8004f86:	4463      	add	r3, ip
 8004f88:	2200      	movs	r2, #0
 8004f8a:	001d      	movs	r5, r3
 8004f8c:	4b3f      	ldr	r3, [pc, #252]	; (800508c <_dtoa_r+0x6e0>)
 8004f8e:	f7fb fbf3 	bl	8000778 <__aeabi_dadd>
 8004f92:	0002      	movs	r2, r0
 8004f94:	000b      	movs	r3, r1
 8004f96:	9806      	ldr	r0, [sp, #24]
 8004f98:	9907      	ldr	r1, [sp, #28]
 8004f9a:	f7fb fa67 	bl	800046c <__aeabi_dcmpgt>
 8004f9e:	2800      	cmp	r0, #0
 8004fa0:	d000      	beq.n	8004fa4 <_dtoa_r+0x5f8>
 8004fa2:	e076      	b.n	8005092 <_dtoa_r+0x6e6>
 8004fa4:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8004fa6:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8004fa8:	2000      	movs	r0, #0
 8004faa:	4938      	ldr	r1, [pc, #224]	; (800508c <_dtoa_r+0x6e0>)
 8004fac:	f7fc fd7c 	bl	8001aa8 <__aeabi_dsub>
 8004fb0:	0002      	movs	r2, r0
 8004fb2:	000b      	movs	r3, r1
 8004fb4:	9806      	ldr	r0, [sp, #24]
 8004fb6:	9907      	ldr	r1, [sp, #28]
 8004fb8:	f7fb fa44 	bl	8000444 <__aeabi_dcmplt>
 8004fbc:	2800      	cmp	r0, #0
 8004fbe:	d100      	bne.n	8004fc2 <_dtoa_r+0x616>
 8004fc0:	e721      	b.n	8004e06 <_dtoa_r+0x45a>
 8004fc2:	1e6b      	subs	r3, r5, #1
 8004fc4:	781a      	ldrb	r2, [r3, #0]
 8004fc6:	2a30      	cmp	r2, #48	; 0x30
 8004fc8:	d001      	beq.n	8004fce <_dtoa_r+0x622>
 8004fca:	0037      	movs	r7, r6
 8004fcc:	e03f      	b.n	800504e <_dtoa_r+0x6a2>
 8004fce:	001d      	movs	r5, r3
 8004fd0:	e7f7      	b.n	8004fc2 <_dtoa_r+0x616>
 8004fd2:	9806      	ldr	r0, [sp, #24]
 8004fd4:	9907      	ldr	r1, [sp, #28]
 8004fd6:	2200      	movs	r2, #0
 8004fd8:	4b26      	ldr	r3, [pc, #152]	; (8005074 <_dtoa_r+0x6c8>)
 8004fda:	f7fc faf3 	bl	80015c4 <__aeabi_dmul>
 8004fde:	9006      	str	r0, [sp, #24]
 8004fe0:	9107      	str	r1, [sp, #28]
 8004fe2:	e7b6      	b.n	8004f52 <_dtoa_r+0x5a6>
 8004fe4:	9e08      	ldr	r6, [sp, #32]
 8004fe6:	9a04      	ldr	r2, [sp, #16]
 8004fe8:	9b05      	ldr	r3, [sp, #20]
 8004fea:	9806      	ldr	r0, [sp, #24]
 8004fec:	9907      	ldr	r1, [sp, #28]
 8004fee:	f7fb fedf 	bl	8000db0 <__aeabi_ddiv>
 8004ff2:	f7fd f8bd 	bl	8002170 <__aeabi_d2iz>
 8004ff6:	0004      	movs	r4, r0
 8004ff8:	f7fd f8f0 	bl	80021dc <__aeabi_i2d>
 8004ffc:	9a04      	ldr	r2, [sp, #16]
 8004ffe:	9b05      	ldr	r3, [sp, #20]
 8005000:	f7fc fae0 	bl	80015c4 <__aeabi_dmul>
 8005004:	0002      	movs	r2, r0
 8005006:	000b      	movs	r3, r1
 8005008:	9806      	ldr	r0, [sp, #24]
 800500a:	9907      	ldr	r1, [sp, #28]
 800500c:	f7fc fd4c 	bl	8001aa8 <__aeabi_dsub>
 8005010:	0023      	movs	r3, r4
 8005012:	3330      	adds	r3, #48	; 0x30
 8005014:	7033      	strb	r3, [r6, #0]
 8005016:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8005018:	9b08      	ldr	r3, [sp, #32]
 800501a:	1c75      	adds	r5, r6, #1
 800501c:	1aeb      	subs	r3, r5, r3
 800501e:	429a      	cmp	r2, r3
 8005020:	d148      	bne.n	80050b4 <_dtoa_r+0x708>
 8005022:	0002      	movs	r2, r0
 8005024:	000b      	movs	r3, r1
 8005026:	f7fb fba7 	bl	8000778 <__aeabi_dadd>
 800502a:	9a04      	ldr	r2, [sp, #16]
 800502c:	9b05      	ldr	r3, [sp, #20]
 800502e:	9006      	str	r0, [sp, #24]
 8005030:	9107      	str	r1, [sp, #28]
 8005032:	f7fb fa1b 	bl	800046c <__aeabi_dcmpgt>
 8005036:	2800      	cmp	r0, #0
 8005038:	d12a      	bne.n	8005090 <_dtoa_r+0x6e4>
 800503a:	9a04      	ldr	r2, [sp, #16]
 800503c:	9b05      	ldr	r3, [sp, #20]
 800503e:	9806      	ldr	r0, [sp, #24]
 8005040:	9907      	ldr	r1, [sp, #28]
 8005042:	f7fb f9f9 	bl	8000438 <__aeabi_dcmpeq>
 8005046:	2800      	cmp	r0, #0
 8005048:	d001      	beq.n	800504e <_dtoa_r+0x6a2>
 800504a:	07e3      	lsls	r3, r4, #31
 800504c:	d420      	bmi.n	8005090 <_dtoa_r+0x6e4>
 800504e:	9903      	ldr	r1, [sp, #12]
 8005050:	9802      	ldr	r0, [sp, #8]
 8005052:	f000 fae4 	bl	800561e <_Bfree>
 8005056:	2300      	movs	r3, #0
 8005058:	702b      	strb	r3, [r5, #0]
 800505a:	9b22      	ldr	r3, [sp, #136]	; 0x88
 800505c:	3701      	adds	r7, #1
 800505e:	601f      	str	r7, [r3, #0]
 8005060:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8005062:	2b00      	cmp	r3, #0
 8005064:	d100      	bne.n	8005068 <_dtoa_r+0x6bc>
 8005066:	e4e6      	b.n	8004a36 <_dtoa_r+0x8a>
 8005068:	601d      	str	r5, [r3, #0]
 800506a:	e4e4      	b.n	8004a36 <_dtoa_r+0x8a>
 800506c:	08006f68 	.word	0x08006f68
 8005070:	3ff00000 	.word	0x3ff00000
 8005074:	40240000 	.word	0x40240000
 8005078:	401c0000 	.word	0x401c0000
 800507c:	fcc00000 	.word	0xfcc00000
 8005080:	40140000 	.word	0x40140000
 8005084:	7cc00000 	.word	0x7cc00000
 8005088:	08006f40 	.word	0x08006f40
 800508c:	3fe00000 	.word	0x3fe00000
 8005090:	003e      	movs	r6, r7
 8005092:	1e6b      	subs	r3, r5, #1
 8005094:	781a      	ldrb	r2, [r3, #0]
 8005096:	2a39      	cmp	r2, #57	; 0x39
 8005098:	d106      	bne.n	80050a8 <_dtoa_r+0x6fc>
 800509a:	9a08      	ldr	r2, [sp, #32]
 800509c:	429a      	cmp	r2, r3
 800509e:	d107      	bne.n	80050b0 <_dtoa_r+0x704>
 80050a0:	2330      	movs	r3, #48	; 0x30
 80050a2:	7013      	strb	r3, [r2, #0]
 80050a4:	0013      	movs	r3, r2
 80050a6:	3601      	adds	r6, #1
 80050a8:	781a      	ldrb	r2, [r3, #0]
 80050aa:	3201      	adds	r2, #1
 80050ac:	701a      	strb	r2, [r3, #0]
 80050ae:	e78c      	b.n	8004fca <_dtoa_r+0x61e>
 80050b0:	001d      	movs	r5, r3
 80050b2:	e7ee      	b.n	8005092 <_dtoa_r+0x6e6>
 80050b4:	2200      	movs	r2, #0
 80050b6:	4ba4      	ldr	r3, [pc, #656]	; (8005348 <_dtoa_r+0x99c>)
 80050b8:	f7fc fa84 	bl	80015c4 <__aeabi_dmul>
 80050bc:	2200      	movs	r2, #0
 80050be:	2300      	movs	r3, #0
 80050c0:	9006      	str	r0, [sp, #24]
 80050c2:	9107      	str	r1, [sp, #28]
 80050c4:	002e      	movs	r6, r5
 80050c6:	f7fb f9b7 	bl	8000438 <__aeabi_dcmpeq>
 80050ca:	2800      	cmp	r0, #0
 80050cc:	d08b      	beq.n	8004fe6 <_dtoa_r+0x63a>
 80050ce:	e7be      	b.n	800504e <_dtoa_r+0x6a2>
 80050d0:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80050d2:	2a00      	cmp	r2, #0
 80050d4:	d100      	bne.n	80050d8 <_dtoa_r+0x72c>
 80050d6:	e0da      	b.n	800528e <_dtoa_r+0x8e2>
 80050d8:	9a20      	ldr	r2, [sp, #128]	; 0x80
 80050da:	2a01      	cmp	r2, #1
 80050dc:	dd00      	ble.n	80050e0 <_dtoa_r+0x734>
 80050de:	e0bd      	b.n	800525c <_dtoa_r+0x8b0>
 80050e0:	9a16      	ldr	r2, [sp, #88]	; 0x58
 80050e2:	2a00      	cmp	r2, #0
 80050e4:	d100      	bne.n	80050e8 <_dtoa_r+0x73c>
 80050e6:	e0b5      	b.n	8005254 <_dtoa_r+0x8a8>
 80050e8:	4a98      	ldr	r2, [pc, #608]	; (800534c <_dtoa_r+0x9a0>)
 80050ea:	189b      	adds	r3, r3, r2
 80050ec:	9d04      	ldr	r5, [sp, #16]
 80050ee:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80050f0:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80050f2:	2101      	movs	r1, #1
 80050f4:	18d2      	adds	r2, r2, r3
 80050f6:	920a      	str	r2, [sp, #40]	; 0x28
 80050f8:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80050fa:	9802      	ldr	r0, [sp, #8]
 80050fc:	18d3      	adds	r3, r2, r3
 80050fe:	930b      	str	r3, [sp, #44]	; 0x2c
 8005100:	f000 fb2d 	bl	800575e <__i2b>
 8005104:	0006      	movs	r6, r0
 8005106:	2c00      	cmp	r4, #0
 8005108:	dd0e      	ble.n	8005128 <_dtoa_r+0x77c>
 800510a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800510c:	2b00      	cmp	r3, #0
 800510e:	dd0b      	ble.n	8005128 <_dtoa_r+0x77c>
 8005110:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8005112:	0023      	movs	r3, r4
 8005114:	4294      	cmp	r4, r2
 8005116:	dd00      	ble.n	800511a <_dtoa_r+0x76e>
 8005118:	0013      	movs	r3, r2
 800511a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800511c:	1ae4      	subs	r4, r4, r3
 800511e:	1ad2      	subs	r2, r2, r3
 8005120:	920a      	str	r2, [sp, #40]	; 0x28
 8005122:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8005124:	1ad3      	subs	r3, r2, r3
 8005126:	930b      	str	r3, [sp, #44]	; 0x2c
 8005128:	9b04      	ldr	r3, [sp, #16]
 800512a:	2b00      	cmp	r3, #0
 800512c:	d01f      	beq.n	800516e <_dtoa_r+0x7c2>
 800512e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8005130:	2b00      	cmp	r3, #0
 8005132:	d100      	bne.n	8005136 <_dtoa_r+0x78a>
 8005134:	e0af      	b.n	8005296 <_dtoa_r+0x8ea>
 8005136:	2d00      	cmp	r5, #0
 8005138:	d011      	beq.n	800515e <_dtoa_r+0x7b2>
 800513a:	0031      	movs	r1, r6
 800513c:	002a      	movs	r2, r5
 800513e:	9802      	ldr	r0, [sp, #8]
 8005140:	f000 fba6 	bl	8005890 <__pow5mult>
 8005144:	9a03      	ldr	r2, [sp, #12]
 8005146:	0001      	movs	r1, r0
 8005148:	0006      	movs	r6, r0
 800514a:	9802      	ldr	r0, [sp, #8]
 800514c:	f000 fb10 	bl	8005770 <__multiply>
 8005150:	9903      	ldr	r1, [sp, #12]
 8005152:	9010      	str	r0, [sp, #64]	; 0x40
 8005154:	9802      	ldr	r0, [sp, #8]
 8005156:	f000 fa62 	bl	800561e <_Bfree>
 800515a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800515c:	9303      	str	r3, [sp, #12]
 800515e:	9b04      	ldr	r3, [sp, #16]
 8005160:	1b5a      	subs	r2, r3, r5
 8005162:	d004      	beq.n	800516e <_dtoa_r+0x7c2>
 8005164:	9903      	ldr	r1, [sp, #12]
 8005166:	9802      	ldr	r0, [sp, #8]
 8005168:	f000 fb92 	bl	8005890 <__pow5mult>
 800516c:	9003      	str	r0, [sp, #12]
 800516e:	2101      	movs	r1, #1
 8005170:	9802      	ldr	r0, [sp, #8]
 8005172:	f000 faf4 	bl	800575e <__i2b>
 8005176:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8005178:	9004      	str	r0, [sp, #16]
 800517a:	2b00      	cmp	r3, #0
 800517c:	d100      	bne.n	8005180 <_dtoa_r+0x7d4>
 800517e:	e1e3      	b.n	8005548 <_dtoa_r+0xb9c>
 8005180:	001a      	movs	r2, r3
 8005182:	0001      	movs	r1, r0
 8005184:	9802      	ldr	r0, [sp, #8]
 8005186:	f000 fb83 	bl	8005890 <__pow5mult>
 800518a:	9b20      	ldr	r3, [sp, #128]	; 0x80
 800518c:	9004      	str	r0, [sp, #16]
 800518e:	2b01      	cmp	r3, #1
 8005190:	dd00      	ble.n	8005194 <_dtoa_r+0x7e8>
 8005192:	e082      	b.n	800529a <_dtoa_r+0x8ee>
 8005194:	2500      	movs	r5, #0
 8005196:	9b06      	ldr	r3, [sp, #24]
 8005198:	42ab      	cmp	r3, r5
 800519a:	d10e      	bne.n	80051ba <_dtoa_r+0x80e>
 800519c:	9b07      	ldr	r3, [sp, #28]
 800519e:	031b      	lsls	r3, r3, #12
 80051a0:	42ab      	cmp	r3, r5
 80051a2:	d10a      	bne.n	80051ba <_dtoa_r+0x80e>
 80051a4:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 80051a6:	9a07      	ldr	r2, [sp, #28]
 80051a8:	4213      	tst	r3, r2
 80051aa:	d006      	beq.n	80051ba <_dtoa_r+0x80e>
 80051ac:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80051ae:	3501      	adds	r5, #1
 80051b0:	3301      	adds	r3, #1
 80051b2:	930a      	str	r3, [sp, #40]	; 0x28
 80051b4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80051b6:	3301      	adds	r3, #1
 80051b8:	930b      	str	r3, [sp, #44]	; 0x2c
 80051ba:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80051bc:	2001      	movs	r0, #1
 80051be:	2b00      	cmp	r3, #0
 80051c0:	d16c      	bne.n	800529c <_dtoa_r+0x8f0>
 80051c2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80051c4:	1818      	adds	r0, r3, r0
 80051c6:	231f      	movs	r3, #31
 80051c8:	4018      	ands	r0, r3
 80051ca:	d07e      	beq.n	80052ca <_dtoa_r+0x91e>
 80051cc:	3301      	adds	r3, #1
 80051ce:	1a1b      	subs	r3, r3, r0
 80051d0:	2b04      	cmp	r3, #4
 80051d2:	dd70      	ble.n	80052b6 <_dtoa_r+0x90a>
 80051d4:	231c      	movs	r3, #28
 80051d6:	1a18      	subs	r0, r3, r0
 80051d8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80051da:	1824      	adds	r4, r4, r0
 80051dc:	181b      	adds	r3, r3, r0
 80051de:	930a      	str	r3, [sp, #40]	; 0x28
 80051e0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80051e2:	181b      	adds	r3, r3, r0
 80051e4:	930b      	str	r3, [sp, #44]	; 0x2c
 80051e6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80051e8:	2b00      	cmp	r3, #0
 80051ea:	dd05      	ble.n	80051f8 <_dtoa_r+0x84c>
 80051ec:	001a      	movs	r2, r3
 80051ee:	9903      	ldr	r1, [sp, #12]
 80051f0:	9802      	ldr	r0, [sp, #8]
 80051f2:	f000 fb9f 	bl	8005934 <__lshift>
 80051f6:	9003      	str	r0, [sp, #12]
 80051f8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80051fa:	2b00      	cmp	r3, #0
 80051fc:	dd05      	ble.n	800520a <_dtoa_r+0x85e>
 80051fe:	001a      	movs	r2, r3
 8005200:	9904      	ldr	r1, [sp, #16]
 8005202:	9802      	ldr	r0, [sp, #8]
 8005204:	f000 fb96 	bl	8005934 <__lshift>
 8005208:	9004      	str	r0, [sp, #16]
 800520a:	9b14      	ldr	r3, [sp, #80]	; 0x50
 800520c:	2b00      	cmp	r3, #0
 800520e:	d05e      	beq.n	80052ce <_dtoa_r+0x922>
 8005210:	9904      	ldr	r1, [sp, #16]
 8005212:	9803      	ldr	r0, [sp, #12]
 8005214:	f000 fbe0 	bl	80059d8 <__mcmp>
 8005218:	2800      	cmp	r0, #0
 800521a:	da58      	bge.n	80052ce <_dtoa_r+0x922>
 800521c:	2300      	movs	r3, #0
 800521e:	220a      	movs	r2, #10
 8005220:	9903      	ldr	r1, [sp, #12]
 8005222:	9802      	ldr	r0, [sp, #8]
 8005224:	f000 fa14 	bl	8005650 <__multadd>
 8005228:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800522a:	3f01      	subs	r7, #1
 800522c:	9003      	str	r0, [sp, #12]
 800522e:	2b00      	cmp	r3, #0
 8005230:	d100      	bne.n	8005234 <_dtoa_r+0x888>
 8005232:	e190      	b.n	8005556 <_dtoa_r+0xbaa>
 8005234:	2300      	movs	r3, #0
 8005236:	0031      	movs	r1, r6
 8005238:	220a      	movs	r2, #10
 800523a:	9802      	ldr	r0, [sp, #8]
 800523c:	f000 fa08 	bl	8005650 <__multadd>
 8005240:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8005242:	0006      	movs	r6, r0
 8005244:	2b00      	cmp	r3, #0
 8005246:	dd00      	ble.n	800524a <_dtoa_r+0x89e>
 8005248:	e088      	b.n	800535c <_dtoa_r+0x9b0>
 800524a:	9b20      	ldr	r3, [sp, #128]	; 0x80
 800524c:	2b02      	cmp	r3, #2
 800524e:	dc00      	bgt.n	8005252 <_dtoa_r+0x8a6>
 8005250:	e084      	b.n	800535c <_dtoa_r+0x9b0>
 8005252:	e044      	b.n	80052de <_dtoa_r+0x932>
 8005254:	2336      	movs	r3, #54	; 0x36
 8005256:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8005258:	1a9b      	subs	r3, r3, r2
 800525a:	e747      	b.n	80050ec <_dtoa_r+0x740>
 800525c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800525e:	1e5d      	subs	r5, r3, #1
 8005260:	9b04      	ldr	r3, [sp, #16]
 8005262:	42ab      	cmp	r3, r5
 8005264:	db08      	blt.n	8005278 <_dtoa_r+0x8cc>
 8005266:	1b5d      	subs	r5, r3, r5
 8005268:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800526a:	2b00      	cmp	r3, #0
 800526c:	da0c      	bge.n	8005288 <_dtoa_r+0x8dc>
 800526e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8005270:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8005272:	1a9c      	subs	r4, r3, r2
 8005274:	2300      	movs	r3, #0
 8005276:	e73b      	b.n	80050f0 <_dtoa_r+0x744>
 8005278:	9b04      	ldr	r3, [sp, #16]
 800527a:	9504      	str	r5, [sp, #16]
 800527c:	1aea      	subs	r2, r5, r3
 800527e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8005280:	2500      	movs	r5, #0
 8005282:	189b      	adds	r3, r3, r2
 8005284:	9311      	str	r3, [sp, #68]	; 0x44
 8005286:	e7ef      	b.n	8005268 <_dtoa_r+0x8bc>
 8005288:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 800528a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800528c:	e730      	b.n	80050f0 <_dtoa_r+0x744>
 800528e:	9d04      	ldr	r5, [sp, #16]
 8005290:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8005292:	9e0d      	ldr	r6, [sp, #52]	; 0x34
 8005294:	e737      	b.n	8005106 <_dtoa_r+0x75a>
 8005296:	9a04      	ldr	r2, [sp, #16]
 8005298:	e764      	b.n	8005164 <_dtoa_r+0x7b8>
 800529a:	2500      	movs	r5, #0
 800529c:	9b04      	ldr	r3, [sp, #16]
 800529e:	9a04      	ldr	r2, [sp, #16]
 80052a0:	691b      	ldr	r3, [r3, #16]
 80052a2:	9310      	str	r3, [sp, #64]	; 0x40
 80052a4:	3303      	adds	r3, #3
 80052a6:	009b      	lsls	r3, r3, #2
 80052a8:	18d3      	adds	r3, r2, r3
 80052aa:	6858      	ldr	r0, [r3, #4]
 80052ac:	f000 fa0e 	bl	80056cc <__hi0bits>
 80052b0:	2320      	movs	r3, #32
 80052b2:	1a18      	subs	r0, r3, r0
 80052b4:	e785      	b.n	80051c2 <_dtoa_r+0x816>
 80052b6:	2b04      	cmp	r3, #4
 80052b8:	d095      	beq.n	80051e6 <_dtoa_r+0x83a>
 80052ba:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80052bc:	331c      	adds	r3, #28
 80052be:	18d2      	adds	r2, r2, r3
 80052c0:	920a      	str	r2, [sp, #40]	; 0x28
 80052c2:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80052c4:	18e4      	adds	r4, r4, r3
 80052c6:	18d3      	adds	r3, r2, r3
 80052c8:	e78c      	b.n	80051e4 <_dtoa_r+0x838>
 80052ca:	0003      	movs	r3, r0
 80052cc:	e7f5      	b.n	80052ba <_dtoa_r+0x90e>
 80052ce:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80052d0:	2b00      	cmp	r3, #0
 80052d2:	dc3d      	bgt.n	8005350 <_dtoa_r+0x9a4>
 80052d4:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80052d6:	2b02      	cmp	r3, #2
 80052d8:	dd3a      	ble.n	8005350 <_dtoa_r+0x9a4>
 80052da:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80052dc:	930c      	str	r3, [sp, #48]	; 0x30
 80052de:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80052e0:	2b00      	cmp	r3, #0
 80052e2:	d10c      	bne.n	80052fe <_dtoa_r+0x952>
 80052e4:	9904      	ldr	r1, [sp, #16]
 80052e6:	2205      	movs	r2, #5
 80052e8:	9802      	ldr	r0, [sp, #8]
 80052ea:	f000 f9b1 	bl	8005650 <__multadd>
 80052ee:	9004      	str	r0, [sp, #16]
 80052f0:	0001      	movs	r1, r0
 80052f2:	9803      	ldr	r0, [sp, #12]
 80052f4:	f000 fb70 	bl	80059d8 <__mcmp>
 80052f8:	2800      	cmp	r0, #0
 80052fa:	dd00      	ble.n	80052fe <_dtoa_r+0x952>
 80052fc:	e5af      	b.n	8004e5e <_dtoa_r+0x4b2>
 80052fe:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8005300:	9d08      	ldr	r5, [sp, #32]
 8005302:	43df      	mvns	r7, r3
 8005304:	2300      	movs	r3, #0
 8005306:	9309      	str	r3, [sp, #36]	; 0x24
 8005308:	9904      	ldr	r1, [sp, #16]
 800530a:	9802      	ldr	r0, [sp, #8]
 800530c:	f000 f987 	bl	800561e <_Bfree>
 8005310:	2e00      	cmp	r6, #0
 8005312:	d100      	bne.n	8005316 <_dtoa_r+0x96a>
 8005314:	e69b      	b.n	800504e <_dtoa_r+0x6a2>
 8005316:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8005318:	2b00      	cmp	r3, #0
 800531a:	d005      	beq.n	8005328 <_dtoa_r+0x97c>
 800531c:	42b3      	cmp	r3, r6
 800531e:	d003      	beq.n	8005328 <_dtoa_r+0x97c>
 8005320:	0019      	movs	r1, r3
 8005322:	9802      	ldr	r0, [sp, #8]
 8005324:	f000 f97b 	bl	800561e <_Bfree>
 8005328:	0031      	movs	r1, r6
 800532a:	9802      	ldr	r0, [sp, #8]
 800532c:	f000 f977 	bl	800561e <_Bfree>
 8005330:	e68d      	b.n	800504e <_dtoa_r+0x6a2>
 8005332:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8005334:	9304      	str	r3, [sp, #16]
 8005336:	001e      	movs	r6, r3
 8005338:	e7e1      	b.n	80052fe <_dtoa_r+0x952>
 800533a:	2300      	movs	r3, #0
 800533c:	e7fa      	b.n	8005334 <_dtoa_r+0x988>
 800533e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8005340:	0037      	movs	r7, r6
 8005342:	9304      	str	r3, [sp, #16]
 8005344:	001e      	movs	r6, r3
 8005346:	e58a      	b.n	8004e5e <_dtoa_r+0x4b2>
 8005348:	40240000 	.word	0x40240000
 800534c:	00000433 	.word	0x00000433
 8005350:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8005352:	2b00      	cmp	r3, #0
 8005354:	d100      	bne.n	8005358 <_dtoa_r+0x9ac>
 8005356:	e0b2      	b.n	80054be <_dtoa_r+0xb12>
 8005358:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800535a:	930c      	str	r3, [sp, #48]	; 0x30
 800535c:	2c00      	cmp	r4, #0
 800535e:	dd05      	ble.n	800536c <_dtoa_r+0x9c0>
 8005360:	0031      	movs	r1, r6
 8005362:	0022      	movs	r2, r4
 8005364:	9802      	ldr	r0, [sp, #8]
 8005366:	f000 fae5 	bl	8005934 <__lshift>
 800536a:	0006      	movs	r6, r0
 800536c:	0030      	movs	r0, r6
 800536e:	2d00      	cmp	r5, #0
 8005370:	d011      	beq.n	8005396 <_dtoa_r+0x9ea>
 8005372:	6871      	ldr	r1, [r6, #4]
 8005374:	9802      	ldr	r0, [sp, #8]
 8005376:	f000 f91a 	bl	80055ae <_Balloc>
 800537a:	0031      	movs	r1, r6
 800537c:	0004      	movs	r4, r0
 800537e:	6933      	ldr	r3, [r6, #16]
 8005380:	310c      	adds	r1, #12
 8005382:	1c9a      	adds	r2, r3, #2
 8005384:	0092      	lsls	r2, r2, #2
 8005386:	300c      	adds	r0, #12
 8005388:	f7fe fdfa 	bl	8003f80 <memcpy>
 800538c:	2201      	movs	r2, #1
 800538e:	0021      	movs	r1, r4
 8005390:	9802      	ldr	r0, [sp, #8]
 8005392:	f000 facf 	bl	8005934 <__lshift>
 8005396:	9609      	str	r6, [sp, #36]	; 0x24
 8005398:	0006      	movs	r6, r0
 800539a:	9b08      	ldr	r3, [sp, #32]
 800539c:	930a      	str	r3, [sp, #40]	; 0x28
 800539e:	9904      	ldr	r1, [sp, #16]
 80053a0:	9803      	ldr	r0, [sp, #12]
 80053a2:	f7ff fa7d 	bl	80048a0 <quorem>
 80053a6:	9909      	ldr	r1, [sp, #36]	; 0x24
 80053a8:	900d      	str	r0, [sp, #52]	; 0x34
 80053aa:	0004      	movs	r4, r0
 80053ac:	9803      	ldr	r0, [sp, #12]
 80053ae:	f000 fb13 	bl	80059d8 <__mcmp>
 80053b2:	0032      	movs	r2, r6
 80053b4:	9010      	str	r0, [sp, #64]	; 0x40
 80053b6:	9904      	ldr	r1, [sp, #16]
 80053b8:	9802      	ldr	r0, [sp, #8]
 80053ba:	f000 fb27 	bl	8005a0c <__mdiff>
 80053be:	2301      	movs	r3, #1
 80053c0:	930b      	str	r3, [sp, #44]	; 0x2c
 80053c2:	68c3      	ldr	r3, [r0, #12]
 80053c4:	3430      	adds	r4, #48	; 0x30
 80053c6:	0005      	movs	r5, r0
 80053c8:	2b00      	cmp	r3, #0
 80053ca:	d104      	bne.n	80053d6 <_dtoa_r+0xa2a>
 80053cc:	0001      	movs	r1, r0
 80053ce:	9803      	ldr	r0, [sp, #12]
 80053d0:	f000 fb02 	bl	80059d8 <__mcmp>
 80053d4:	900b      	str	r0, [sp, #44]	; 0x2c
 80053d6:	0029      	movs	r1, r5
 80053d8:	9802      	ldr	r0, [sp, #8]
 80053da:	f000 f920 	bl	800561e <_Bfree>
 80053de:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80053e0:	9a20      	ldr	r2, [sp, #128]	; 0x80
 80053e2:	4313      	orrs	r3, r2
 80053e4:	d10e      	bne.n	8005404 <_dtoa_r+0xa58>
 80053e6:	9a06      	ldr	r2, [sp, #24]
 80053e8:	3301      	adds	r3, #1
 80053ea:	4213      	tst	r3, r2
 80053ec:	d10a      	bne.n	8005404 <_dtoa_r+0xa58>
 80053ee:	2c39      	cmp	r4, #57	; 0x39
 80053f0:	d026      	beq.n	8005440 <_dtoa_r+0xa94>
 80053f2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80053f4:	2b00      	cmp	r3, #0
 80053f6:	dd01      	ble.n	80053fc <_dtoa_r+0xa50>
 80053f8:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80053fa:	3431      	adds	r4, #49	; 0x31
 80053fc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80053fe:	1c5d      	adds	r5, r3, #1
 8005400:	701c      	strb	r4, [r3, #0]
 8005402:	e781      	b.n	8005308 <_dtoa_r+0x95c>
 8005404:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8005406:	2b00      	cmp	r3, #0
 8005408:	db07      	blt.n	800541a <_dtoa_r+0xa6e>
 800540a:	001d      	movs	r5, r3
 800540c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 800540e:	431d      	orrs	r5, r3
 8005410:	d122      	bne.n	8005458 <_dtoa_r+0xaac>
 8005412:	2301      	movs	r3, #1
 8005414:	9a06      	ldr	r2, [sp, #24]
 8005416:	4213      	tst	r3, r2
 8005418:	d11e      	bne.n	8005458 <_dtoa_r+0xaac>
 800541a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800541c:	2b00      	cmp	r3, #0
 800541e:	dded      	ble.n	80053fc <_dtoa_r+0xa50>
 8005420:	9903      	ldr	r1, [sp, #12]
 8005422:	2201      	movs	r2, #1
 8005424:	9802      	ldr	r0, [sp, #8]
 8005426:	f000 fa85 	bl	8005934 <__lshift>
 800542a:	9904      	ldr	r1, [sp, #16]
 800542c:	9003      	str	r0, [sp, #12]
 800542e:	f000 fad3 	bl	80059d8 <__mcmp>
 8005432:	2800      	cmp	r0, #0
 8005434:	dc02      	bgt.n	800543c <_dtoa_r+0xa90>
 8005436:	d1e1      	bne.n	80053fc <_dtoa_r+0xa50>
 8005438:	07e3      	lsls	r3, r4, #31
 800543a:	d5df      	bpl.n	80053fc <_dtoa_r+0xa50>
 800543c:	2c39      	cmp	r4, #57	; 0x39
 800543e:	d1db      	bne.n	80053f8 <_dtoa_r+0xa4c>
 8005440:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8005442:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8005444:	1c5d      	adds	r5, r3, #1
 8005446:	2339      	movs	r3, #57	; 0x39
 8005448:	7013      	strb	r3, [r2, #0]
 800544a:	1e6b      	subs	r3, r5, #1
 800544c:	781a      	ldrb	r2, [r3, #0]
 800544e:	2a39      	cmp	r2, #57	; 0x39
 8005450:	d067      	beq.n	8005522 <_dtoa_r+0xb76>
 8005452:	3201      	adds	r2, #1
 8005454:	701a      	strb	r2, [r3, #0]
 8005456:	e757      	b.n	8005308 <_dtoa_r+0x95c>
 8005458:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800545a:	1c5d      	adds	r5, r3, #1
 800545c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800545e:	2b00      	cmp	r3, #0
 8005460:	dd04      	ble.n	800546c <_dtoa_r+0xac0>
 8005462:	2c39      	cmp	r4, #57	; 0x39
 8005464:	d0ec      	beq.n	8005440 <_dtoa_r+0xa94>
 8005466:	3401      	adds	r4, #1
 8005468:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800546a:	e7c9      	b.n	8005400 <_dtoa_r+0xa54>
 800546c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800546e:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8005470:	701c      	strb	r4, [r3, #0]
 8005472:	9b08      	ldr	r3, [sp, #32]
 8005474:	1aeb      	subs	r3, r5, r3
 8005476:	4293      	cmp	r3, r2
 8005478:	d03e      	beq.n	80054f8 <_dtoa_r+0xb4c>
 800547a:	2300      	movs	r3, #0
 800547c:	220a      	movs	r2, #10
 800547e:	9903      	ldr	r1, [sp, #12]
 8005480:	9802      	ldr	r0, [sp, #8]
 8005482:	f000 f8e5 	bl	8005650 <__multadd>
 8005486:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8005488:	9003      	str	r0, [sp, #12]
 800548a:	42b3      	cmp	r3, r6
 800548c:	d109      	bne.n	80054a2 <_dtoa_r+0xaf6>
 800548e:	2300      	movs	r3, #0
 8005490:	220a      	movs	r2, #10
 8005492:	9909      	ldr	r1, [sp, #36]	; 0x24
 8005494:	9802      	ldr	r0, [sp, #8]
 8005496:	f000 f8db 	bl	8005650 <__multadd>
 800549a:	9009      	str	r0, [sp, #36]	; 0x24
 800549c:	0006      	movs	r6, r0
 800549e:	950a      	str	r5, [sp, #40]	; 0x28
 80054a0:	e77d      	b.n	800539e <_dtoa_r+0x9f2>
 80054a2:	9909      	ldr	r1, [sp, #36]	; 0x24
 80054a4:	2300      	movs	r3, #0
 80054a6:	220a      	movs	r2, #10
 80054a8:	9802      	ldr	r0, [sp, #8]
 80054aa:	f000 f8d1 	bl	8005650 <__multadd>
 80054ae:	2300      	movs	r3, #0
 80054b0:	9009      	str	r0, [sp, #36]	; 0x24
 80054b2:	220a      	movs	r2, #10
 80054b4:	0031      	movs	r1, r6
 80054b6:	9802      	ldr	r0, [sp, #8]
 80054b8:	f000 f8ca 	bl	8005650 <__multadd>
 80054bc:	e7ee      	b.n	800549c <_dtoa_r+0xaf0>
 80054be:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80054c0:	930c      	str	r3, [sp, #48]	; 0x30
 80054c2:	9b08      	ldr	r3, [sp, #32]
 80054c4:	9306      	str	r3, [sp, #24]
 80054c6:	9904      	ldr	r1, [sp, #16]
 80054c8:	9803      	ldr	r0, [sp, #12]
 80054ca:	f7ff f9e9 	bl	80048a0 <quorem>
 80054ce:	9b06      	ldr	r3, [sp, #24]
 80054d0:	3030      	adds	r0, #48	; 0x30
 80054d2:	1c5d      	adds	r5, r3, #1
 80054d4:	7018      	strb	r0, [r3, #0]
 80054d6:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80054d8:	9b08      	ldr	r3, [sp, #32]
 80054da:	0004      	movs	r4, r0
 80054dc:	1aeb      	subs	r3, r5, r3
 80054de:	429a      	cmp	r2, r3
 80054e0:	dd08      	ble.n	80054f4 <_dtoa_r+0xb48>
 80054e2:	2300      	movs	r3, #0
 80054e4:	220a      	movs	r2, #10
 80054e6:	9903      	ldr	r1, [sp, #12]
 80054e8:	9802      	ldr	r0, [sp, #8]
 80054ea:	f000 f8b1 	bl	8005650 <__multadd>
 80054ee:	9506      	str	r5, [sp, #24]
 80054f0:	9003      	str	r0, [sp, #12]
 80054f2:	e7e8      	b.n	80054c6 <_dtoa_r+0xb1a>
 80054f4:	2300      	movs	r3, #0
 80054f6:	9309      	str	r3, [sp, #36]	; 0x24
 80054f8:	9903      	ldr	r1, [sp, #12]
 80054fa:	2201      	movs	r2, #1
 80054fc:	9802      	ldr	r0, [sp, #8]
 80054fe:	f000 fa19 	bl	8005934 <__lshift>
 8005502:	9904      	ldr	r1, [sp, #16]
 8005504:	9003      	str	r0, [sp, #12]
 8005506:	f000 fa67 	bl	80059d8 <__mcmp>
 800550a:	2800      	cmp	r0, #0
 800550c:	dc9d      	bgt.n	800544a <_dtoa_r+0xa9e>
 800550e:	d101      	bne.n	8005514 <_dtoa_r+0xb68>
 8005510:	07e3      	lsls	r3, r4, #31
 8005512:	d49a      	bmi.n	800544a <_dtoa_r+0xa9e>
 8005514:	1e6b      	subs	r3, r5, #1
 8005516:	781a      	ldrb	r2, [r3, #0]
 8005518:	2a30      	cmp	r2, #48	; 0x30
 800551a:	d000      	beq.n	800551e <_dtoa_r+0xb72>
 800551c:	e6f4      	b.n	8005308 <_dtoa_r+0x95c>
 800551e:	001d      	movs	r5, r3
 8005520:	e7f8      	b.n	8005514 <_dtoa_r+0xb68>
 8005522:	9a08      	ldr	r2, [sp, #32]
 8005524:	429a      	cmp	r2, r3
 8005526:	d103      	bne.n	8005530 <_dtoa_r+0xb84>
 8005528:	2331      	movs	r3, #49	; 0x31
 800552a:	3701      	adds	r7, #1
 800552c:	7013      	strb	r3, [r2, #0]
 800552e:	e6eb      	b.n	8005308 <_dtoa_r+0x95c>
 8005530:	001d      	movs	r5, r3
 8005532:	e78a      	b.n	800544a <_dtoa_r+0xa9e>
 8005534:	4b0b      	ldr	r3, [pc, #44]	; (8005564 <_dtoa_r+0xbb8>)
 8005536:	9a24      	ldr	r2, [sp, #144]	; 0x90
 8005538:	9308      	str	r3, [sp, #32]
 800553a:	4b0b      	ldr	r3, [pc, #44]	; (8005568 <_dtoa_r+0xbbc>)
 800553c:	2a00      	cmp	r2, #0
 800553e:	d001      	beq.n	8005544 <_dtoa_r+0xb98>
 8005540:	f7ff fa77 	bl	8004a32 <_dtoa_r+0x86>
 8005544:	f7ff fa77 	bl	8004a36 <_dtoa_r+0x8a>
 8005548:	9b20      	ldr	r3, [sp, #128]	; 0x80
 800554a:	2b01      	cmp	r3, #1
 800554c:	dc00      	bgt.n	8005550 <_dtoa_r+0xba4>
 800554e:	e621      	b.n	8005194 <_dtoa_r+0x7e8>
 8005550:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8005552:	2001      	movs	r0, #1
 8005554:	e635      	b.n	80051c2 <_dtoa_r+0x816>
 8005556:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8005558:	2b00      	cmp	r3, #0
 800555a:	dcb2      	bgt.n	80054c2 <_dtoa_r+0xb16>
 800555c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 800555e:	2b02      	cmp	r3, #2
 8005560:	ddaf      	ble.n	80054c2 <_dtoa_r+0xb16>
 8005562:	e6bc      	b.n	80052de <_dtoa_r+0x932>
 8005564:	08006f2c 	.word	0x08006f2c
 8005568:	08006f34 	.word	0x08006f34

0800556c <_localeconv_r>:
 800556c:	4b03      	ldr	r3, [pc, #12]	; (800557c <_localeconv_r+0x10>)
 800556e:	681b      	ldr	r3, [r3, #0]
 8005570:	6a18      	ldr	r0, [r3, #32]
 8005572:	2800      	cmp	r0, #0
 8005574:	d100      	bne.n	8005578 <_localeconv_r+0xc>
 8005576:	4802      	ldr	r0, [pc, #8]	; (8005580 <_localeconv_r+0x14>)
 8005578:	30f0      	adds	r0, #240	; 0xf0
 800557a:	4770      	bx	lr
 800557c:	20000014 	.word	0x20000014
 8005580:	20000078 	.word	0x20000078

08005584 <malloc>:
 8005584:	b510      	push	{r4, lr}
 8005586:	4b03      	ldr	r3, [pc, #12]	; (8005594 <malloc+0x10>)
 8005588:	0001      	movs	r1, r0
 800558a:	6818      	ldr	r0, [r3, #0]
 800558c:	f000 fb4e 	bl	8005c2c <_malloc_r>
 8005590:	bd10      	pop	{r4, pc}
 8005592:	46c0      	nop			; (mov r8, r8)
 8005594:	20000014 	.word	0x20000014

08005598 <memchr>:
 8005598:	b2c9      	uxtb	r1, r1
 800559a:	1882      	adds	r2, r0, r2
 800559c:	4290      	cmp	r0, r2
 800559e:	d101      	bne.n	80055a4 <memchr+0xc>
 80055a0:	2000      	movs	r0, #0
 80055a2:	4770      	bx	lr
 80055a4:	7803      	ldrb	r3, [r0, #0]
 80055a6:	428b      	cmp	r3, r1
 80055a8:	d0fb      	beq.n	80055a2 <memchr+0xa>
 80055aa:	3001      	adds	r0, #1
 80055ac:	e7f6      	b.n	800559c <memchr+0x4>

080055ae <_Balloc>:
 80055ae:	b570      	push	{r4, r5, r6, lr}
 80055b0:	6a46      	ldr	r6, [r0, #36]	; 0x24
 80055b2:	0004      	movs	r4, r0
 80055b4:	000d      	movs	r5, r1
 80055b6:	2e00      	cmp	r6, #0
 80055b8:	d107      	bne.n	80055ca <_Balloc+0x1c>
 80055ba:	2010      	movs	r0, #16
 80055bc:	f7ff ffe2 	bl	8005584 <malloc>
 80055c0:	6260      	str	r0, [r4, #36]	; 0x24
 80055c2:	6046      	str	r6, [r0, #4]
 80055c4:	6086      	str	r6, [r0, #8]
 80055c6:	6006      	str	r6, [r0, #0]
 80055c8:	60c6      	str	r6, [r0, #12]
 80055ca:	6a66      	ldr	r6, [r4, #36]	; 0x24
 80055cc:	68f3      	ldr	r3, [r6, #12]
 80055ce:	2b00      	cmp	r3, #0
 80055d0:	d013      	beq.n	80055fa <_Balloc+0x4c>
 80055d2:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80055d4:	00aa      	lsls	r2, r5, #2
 80055d6:	68db      	ldr	r3, [r3, #12]
 80055d8:	189b      	adds	r3, r3, r2
 80055da:	6818      	ldr	r0, [r3, #0]
 80055dc:	2800      	cmp	r0, #0
 80055de:	d118      	bne.n	8005612 <_Balloc+0x64>
 80055e0:	2101      	movs	r1, #1
 80055e2:	000e      	movs	r6, r1
 80055e4:	40ae      	lsls	r6, r5
 80055e6:	1d72      	adds	r2, r6, #5
 80055e8:	0092      	lsls	r2, r2, #2
 80055ea:	0020      	movs	r0, r4
 80055ec:	f000 fac6 	bl	8005b7c <_calloc_r>
 80055f0:	2800      	cmp	r0, #0
 80055f2:	d00c      	beq.n	800560e <_Balloc+0x60>
 80055f4:	6045      	str	r5, [r0, #4]
 80055f6:	6086      	str	r6, [r0, #8]
 80055f8:	e00d      	b.n	8005616 <_Balloc+0x68>
 80055fa:	2221      	movs	r2, #33	; 0x21
 80055fc:	2104      	movs	r1, #4
 80055fe:	0020      	movs	r0, r4
 8005600:	f000 fabc 	bl	8005b7c <_calloc_r>
 8005604:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8005606:	60f0      	str	r0, [r6, #12]
 8005608:	68db      	ldr	r3, [r3, #12]
 800560a:	2b00      	cmp	r3, #0
 800560c:	d1e1      	bne.n	80055d2 <_Balloc+0x24>
 800560e:	2000      	movs	r0, #0
 8005610:	bd70      	pop	{r4, r5, r6, pc}
 8005612:	6802      	ldr	r2, [r0, #0]
 8005614:	601a      	str	r2, [r3, #0]
 8005616:	2300      	movs	r3, #0
 8005618:	6103      	str	r3, [r0, #16]
 800561a:	60c3      	str	r3, [r0, #12]
 800561c:	e7f8      	b.n	8005610 <_Balloc+0x62>

0800561e <_Bfree>:
 800561e:	b570      	push	{r4, r5, r6, lr}
 8005620:	6a44      	ldr	r4, [r0, #36]	; 0x24
 8005622:	0006      	movs	r6, r0
 8005624:	000d      	movs	r5, r1
 8005626:	2c00      	cmp	r4, #0
 8005628:	d107      	bne.n	800563a <_Bfree+0x1c>
 800562a:	2010      	movs	r0, #16
 800562c:	f7ff ffaa 	bl	8005584 <malloc>
 8005630:	6270      	str	r0, [r6, #36]	; 0x24
 8005632:	6044      	str	r4, [r0, #4]
 8005634:	6084      	str	r4, [r0, #8]
 8005636:	6004      	str	r4, [r0, #0]
 8005638:	60c4      	str	r4, [r0, #12]
 800563a:	2d00      	cmp	r5, #0
 800563c:	d007      	beq.n	800564e <_Bfree+0x30>
 800563e:	6a73      	ldr	r3, [r6, #36]	; 0x24
 8005640:	686a      	ldr	r2, [r5, #4]
 8005642:	68db      	ldr	r3, [r3, #12]
 8005644:	0092      	lsls	r2, r2, #2
 8005646:	189b      	adds	r3, r3, r2
 8005648:	681a      	ldr	r2, [r3, #0]
 800564a:	602a      	str	r2, [r5, #0]
 800564c:	601d      	str	r5, [r3, #0]
 800564e:	bd70      	pop	{r4, r5, r6, pc}

08005650 <__multadd>:
 8005650:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8005652:	001e      	movs	r6, r3
 8005654:	2314      	movs	r3, #20
 8005656:	469c      	mov	ip, r3
 8005658:	0007      	movs	r7, r0
 800565a:	000c      	movs	r4, r1
 800565c:	2000      	movs	r0, #0
 800565e:	690d      	ldr	r5, [r1, #16]
 8005660:	448c      	add	ip, r1
 8005662:	4663      	mov	r3, ip
 8005664:	681b      	ldr	r3, [r3, #0]
 8005666:	3001      	adds	r0, #1
 8005668:	b299      	uxth	r1, r3
 800566a:	4663      	mov	r3, ip
 800566c:	681b      	ldr	r3, [r3, #0]
 800566e:	4351      	muls	r1, r2
 8005670:	0c1b      	lsrs	r3, r3, #16
 8005672:	4353      	muls	r3, r2
 8005674:	1989      	adds	r1, r1, r6
 8005676:	0c0e      	lsrs	r6, r1, #16
 8005678:	199b      	adds	r3, r3, r6
 800567a:	b289      	uxth	r1, r1
 800567c:	0c1e      	lsrs	r6, r3, #16
 800567e:	041b      	lsls	r3, r3, #16
 8005680:	185b      	adds	r3, r3, r1
 8005682:	4661      	mov	r1, ip
 8005684:	c108      	stmia	r1!, {r3}
 8005686:	468c      	mov	ip, r1
 8005688:	4285      	cmp	r5, r0
 800568a:	dcea      	bgt.n	8005662 <__multadd+0x12>
 800568c:	2e00      	cmp	r6, #0
 800568e:	d01b      	beq.n	80056c8 <__multadd+0x78>
 8005690:	68a3      	ldr	r3, [r4, #8]
 8005692:	42ab      	cmp	r3, r5
 8005694:	dc12      	bgt.n	80056bc <__multadd+0x6c>
 8005696:	6863      	ldr	r3, [r4, #4]
 8005698:	0038      	movs	r0, r7
 800569a:	1c59      	adds	r1, r3, #1
 800569c:	f7ff ff87 	bl	80055ae <_Balloc>
 80056a0:	0021      	movs	r1, r4
 80056a2:	6923      	ldr	r3, [r4, #16]
 80056a4:	9001      	str	r0, [sp, #4]
 80056a6:	1c9a      	adds	r2, r3, #2
 80056a8:	0092      	lsls	r2, r2, #2
 80056aa:	310c      	adds	r1, #12
 80056ac:	300c      	adds	r0, #12
 80056ae:	f7fe fc67 	bl	8003f80 <memcpy>
 80056b2:	0021      	movs	r1, r4
 80056b4:	0038      	movs	r0, r7
 80056b6:	f7ff ffb2 	bl	800561e <_Bfree>
 80056ba:	9c01      	ldr	r4, [sp, #4]
 80056bc:	1d2b      	adds	r3, r5, #4
 80056be:	009b      	lsls	r3, r3, #2
 80056c0:	18e3      	adds	r3, r4, r3
 80056c2:	3501      	adds	r5, #1
 80056c4:	605e      	str	r6, [r3, #4]
 80056c6:	6125      	str	r5, [r4, #16]
 80056c8:	0020      	movs	r0, r4
 80056ca:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}

080056cc <__hi0bits>:
 80056cc:	0003      	movs	r3, r0
 80056ce:	0c02      	lsrs	r2, r0, #16
 80056d0:	2000      	movs	r0, #0
 80056d2:	4282      	cmp	r2, r0
 80056d4:	d101      	bne.n	80056da <__hi0bits+0xe>
 80056d6:	041b      	lsls	r3, r3, #16
 80056d8:	3010      	adds	r0, #16
 80056da:	0e1a      	lsrs	r2, r3, #24
 80056dc:	d101      	bne.n	80056e2 <__hi0bits+0x16>
 80056de:	3008      	adds	r0, #8
 80056e0:	021b      	lsls	r3, r3, #8
 80056e2:	0f1a      	lsrs	r2, r3, #28
 80056e4:	d101      	bne.n	80056ea <__hi0bits+0x1e>
 80056e6:	3004      	adds	r0, #4
 80056e8:	011b      	lsls	r3, r3, #4
 80056ea:	0f9a      	lsrs	r2, r3, #30
 80056ec:	d101      	bne.n	80056f2 <__hi0bits+0x26>
 80056ee:	3002      	adds	r0, #2
 80056f0:	009b      	lsls	r3, r3, #2
 80056f2:	2b00      	cmp	r3, #0
 80056f4:	db03      	blt.n	80056fe <__hi0bits+0x32>
 80056f6:	3001      	adds	r0, #1
 80056f8:	005b      	lsls	r3, r3, #1
 80056fa:	d400      	bmi.n	80056fe <__hi0bits+0x32>
 80056fc:	2020      	movs	r0, #32
 80056fe:	4770      	bx	lr

08005700 <__lo0bits>:
 8005700:	2207      	movs	r2, #7
 8005702:	6803      	ldr	r3, [r0, #0]
 8005704:	b510      	push	{r4, lr}
 8005706:	0001      	movs	r1, r0
 8005708:	401a      	ands	r2, r3
 800570a:	d00d      	beq.n	8005728 <__lo0bits+0x28>
 800570c:	2401      	movs	r4, #1
 800570e:	2000      	movs	r0, #0
 8005710:	4223      	tst	r3, r4
 8005712:	d105      	bne.n	8005720 <__lo0bits+0x20>
 8005714:	3002      	adds	r0, #2
 8005716:	4203      	tst	r3, r0
 8005718:	d003      	beq.n	8005722 <__lo0bits+0x22>
 800571a:	40e3      	lsrs	r3, r4
 800571c:	0020      	movs	r0, r4
 800571e:	600b      	str	r3, [r1, #0]
 8005720:	bd10      	pop	{r4, pc}
 8005722:	089b      	lsrs	r3, r3, #2
 8005724:	600b      	str	r3, [r1, #0]
 8005726:	e7fb      	b.n	8005720 <__lo0bits+0x20>
 8005728:	b29c      	uxth	r4, r3
 800572a:	0010      	movs	r0, r2
 800572c:	2c00      	cmp	r4, #0
 800572e:	d101      	bne.n	8005734 <__lo0bits+0x34>
 8005730:	2010      	movs	r0, #16
 8005732:	0c1b      	lsrs	r3, r3, #16
 8005734:	b2da      	uxtb	r2, r3
 8005736:	2a00      	cmp	r2, #0
 8005738:	d101      	bne.n	800573e <__lo0bits+0x3e>
 800573a:	3008      	adds	r0, #8
 800573c:	0a1b      	lsrs	r3, r3, #8
 800573e:	071a      	lsls	r2, r3, #28
 8005740:	d101      	bne.n	8005746 <__lo0bits+0x46>
 8005742:	3004      	adds	r0, #4
 8005744:	091b      	lsrs	r3, r3, #4
 8005746:	079a      	lsls	r2, r3, #30
 8005748:	d101      	bne.n	800574e <__lo0bits+0x4e>
 800574a:	3002      	adds	r0, #2
 800574c:	089b      	lsrs	r3, r3, #2
 800574e:	07da      	lsls	r2, r3, #31
 8005750:	d4e8      	bmi.n	8005724 <__lo0bits+0x24>
 8005752:	085b      	lsrs	r3, r3, #1
 8005754:	d001      	beq.n	800575a <__lo0bits+0x5a>
 8005756:	3001      	adds	r0, #1
 8005758:	e7e4      	b.n	8005724 <__lo0bits+0x24>
 800575a:	2020      	movs	r0, #32
 800575c:	e7e0      	b.n	8005720 <__lo0bits+0x20>

0800575e <__i2b>:
 800575e:	b510      	push	{r4, lr}
 8005760:	000c      	movs	r4, r1
 8005762:	2101      	movs	r1, #1
 8005764:	f7ff ff23 	bl	80055ae <_Balloc>
 8005768:	2301      	movs	r3, #1
 800576a:	6144      	str	r4, [r0, #20]
 800576c:	6103      	str	r3, [r0, #16]
 800576e:	bd10      	pop	{r4, pc}

08005770 <__multiply>:
 8005770:	b5f0      	push	{r4, r5, r6, r7, lr}
 8005772:	690b      	ldr	r3, [r1, #16]
 8005774:	0014      	movs	r4, r2
 8005776:	6912      	ldr	r2, [r2, #16]
 8005778:	b089      	sub	sp, #36	; 0x24
 800577a:	000d      	movs	r5, r1
 800577c:	4293      	cmp	r3, r2
 800577e:	da01      	bge.n	8005784 <__multiply+0x14>
 8005780:	0025      	movs	r5, r4
 8005782:	000c      	movs	r4, r1
 8005784:	692f      	ldr	r7, [r5, #16]
 8005786:	6926      	ldr	r6, [r4, #16]
 8005788:	6869      	ldr	r1, [r5, #4]
 800578a:	19bb      	adds	r3, r7, r6
 800578c:	9302      	str	r3, [sp, #8]
 800578e:	68ab      	ldr	r3, [r5, #8]
 8005790:	19ba      	adds	r2, r7, r6
 8005792:	4293      	cmp	r3, r2
 8005794:	da00      	bge.n	8005798 <__multiply+0x28>
 8005796:	3101      	adds	r1, #1
 8005798:	f7ff ff09 	bl	80055ae <_Balloc>
 800579c:	0002      	movs	r2, r0
 800579e:	19bb      	adds	r3, r7, r6
 80057a0:	3214      	adds	r2, #20
 80057a2:	009b      	lsls	r3, r3, #2
 80057a4:	18d3      	adds	r3, r2, r3
 80057a6:	469c      	mov	ip, r3
 80057a8:	2100      	movs	r1, #0
 80057aa:	0013      	movs	r3, r2
 80057ac:	9004      	str	r0, [sp, #16]
 80057ae:	4563      	cmp	r3, ip
 80057b0:	d31d      	bcc.n	80057ee <__multiply+0x7e>
 80057b2:	3514      	adds	r5, #20
 80057b4:	00bf      	lsls	r7, r7, #2
 80057b6:	19eb      	adds	r3, r5, r7
 80057b8:	3414      	adds	r4, #20
 80057ba:	00b6      	lsls	r6, r6, #2
 80057bc:	9305      	str	r3, [sp, #20]
 80057be:	19a3      	adds	r3, r4, r6
 80057c0:	9503      	str	r5, [sp, #12]
 80057c2:	9401      	str	r4, [sp, #4]
 80057c4:	9307      	str	r3, [sp, #28]
 80057c6:	9b07      	ldr	r3, [sp, #28]
 80057c8:	9901      	ldr	r1, [sp, #4]
 80057ca:	4299      	cmp	r1, r3
 80057cc:	d311      	bcc.n	80057f2 <__multiply+0x82>
 80057ce:	9b02      	ldr	r3, [sp, #8]
 80057d0:	2b00      	cmp	r3, #0
 80057d2:	dd06      	ble.n	80057e2 <__multiply+0x72>
 80057d4:	2304      	movs	r3, #4
 80057d6:	425b      	negs	r3, r3
 80057d8:	449c      	add	ip, r3
 80057da:	4663      	mov	r3, ip
 80057dc:	681b      	ldr	r3, [r3, #0]
 80057de:	2b00      	cmp	r3, #0
 80057e0:	d051      	beq.n	8005886 <__multiply+0x116>
 80057e2:	9b04      	ldr	r3, [sp, #16]
 80057e4:	9a02      	ldr	r2, [sp, #8]
 80057e6:	0018      	movs	r0, r3
 80057e8:	611a      	str	r2, [r3, #16]
 80057ea:	b009      	add	sp, #36	; 0x24
 80057ec:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80057ee:	c302      	stmia	r3!, {r1}
 80057f0:	e7dd      	b.n	80057ae <__multiply+0x3e>
 80057f2:	9b01      	ldr	r3, [sp, #4]
 80057f4:	681b      	ldr	r3, [r3, #0]
 80057f6:	b298      	uxth	r0, r3
 80057f8:	2800      	cmp	r0, #0
 80057fa:	d01c      	beq.n	8005836 <__multiply+0xc6>
 80057fc:	0015      	movs	r5, r2
 80057fe:	2600      	movs	r6, #0
 8005800:	9f03      	ldr	r7, [sp, #12]
 8005802:	cf02      	ldmia	r7!, {r1}
 8005804:	682c      	ldr	r4, [r5, #0]
 8005806:	b28b      	uxth	r3, r1
 8005808:	4343      	muls	r3, r0
 800580a:	0c09      	lsrs	r1, r1, #16
 800580c:	4341      	muls	r1, r0
 800580e:	b2a4      	uxth	r4, r4
 8005810:	191b      	adds	r3, r3, r4
 8005812:	199b      	adds	r3, r3, r6
 8005814:	000e      	movs	r6, r1
 8005816:	6829      	ldr	r1, [r5, #0]
 8005818:	9506      	str	r5, [sp, #24]
 800581a:	0c09      	lsrs	r1, r1, #16
 800581c:	1871      	adds	r1, r6, r1
 800581e:	0c1e      	lsrs	r6, r3, #16
 8005820:	1989      	adds	r1, r1, r6
 8005822:	0c0e      	lsrs	r6, r1, #16
 8005824:	b29b      	uxth	r3, r3
 8005826:	0409      	lsls	r1, r1, #16
 8005828:	430b      	orrs	r3, r1
 800582a:	c508      	stmia	r5!, {r3}
 800582c:	9b05      	ldr	r3, [sp, #20]
 800582e:	42bb      	cmp	r3, r7
 8005830:	d8e7      	bhi.n	8005802 <__multiply+0x92>
 8005832:	9b06      	ldr	r3, [sp, #24]
 8005834:	605e      	str	r6, [r3, #4]
 8005836:	9b01      	ldr	r3, [sp, #4]
 8005838:	681b      	ldr	r3, [r3, #0]
 800583a:	0c1d      	lsrs	r5, r3, #16
 800583c:	d01e      	beq.n	800587c <__multiply+0x10c>
 800583e:	0010      	movs	r0, r2
 8005840:	2700      	movs	r7, #0
 8005842:	6813      	ldr	r3, [r2, #0]
 8005844:	9e03      	ldr	r6, [sp, #12]
 8005846:	6831      	ldr	r1, [r6, #0]
 8005848:	6804      	ldr	r4, [r0, #0]
 800584a:	b289      	uxth	r1, r1
 800584c:	4369      	muls	r1, r5
 800584e:	0c24      	lsrs	r4, r4, #16
 8005850:	1909      	adds	r1, r1, r4
 8005852:	19c9      	adds	r1, r1, r7
 8005854:	040f      	lsls	r7, r1, #16
 8005856:	b29b      	uxth	r3, r3
 8005858:	433b      	orrs	r3, r7
 800585a:	6003      	str	r3, [r0, #0]
 800585c:	ce80      	ldmia	r6!, {r7}
 800585e:	6843      	ldr	r3, [r0, #4]
 8005860:	0c3f      	lsrs	r7, r7, #16
 8005862:	436f      	muls	r7, r5
 8005864:	b29b      	uxth	r3, r3
 8005866:	18fb      	adds	r3, r7, r3
 8005868:	0c09      	lsrs	r1, r1, #16
 800586a:	185b      	adds	r3, r3, r1
 800586c:	9905      	ldr	r1, [sp, #20]
 800586e:	9006      	str	r0, [sp, #24]
 8005870:	0c1f      	lsrs	r7, r3, #16
 8005872:	3004      	adds	r0, #4
 8005874:	42b1      	cmp	r1, r6
 8005876:	d8e6      	bhi.n	8005846 <__multiply+0xd6>
 8005878:	9906      	ldr	r1, [sp, #24]
 800587a:	604b      	str	r3, [r1, #4]
 800587c:	9b01      	ldr	r3, [sp, #4]
 800587e:	3204      	adds	r2, #4
 8005880:	3304      	adds	r3, #4
 8005882:	9301      	str	r3, [sp, #4]
 8005884:	e79f      	b.n	80057c6 <__multiply+0x56>
 8005886:	9b02      	ldr	r3, [sp, #8]
 8005888:	3b01      	subs	r3, #1
 800588a:	9302      	str	r3, [sp, #8]
 800588c:	e79f      	b.n	80057ce <__multiply+0x5e>
	...

08005890 <__pow5mult>:
 8005890:	2303      	movs	r3, #3
 8005892:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8005894:	4013      	ands	r3, r2
 8005896:	0005      	movs	r5, r0
 8005898:	000e      	movs	r6, r1
 800589a:	0014      	movs	r4, r2
 800589c:	2b00      	cmp	r3, #0
 800589e:	d008      	beq.n	80058b2 <__pow5mult+0x22>
 80058a0:	4922      	ldr	r1, [pc, #136]	; (800592c <__pow5mult+0x9c>)
 80058a2:	3b01      	subs	r3, #1
 80058a4:	009a      	lsls	r2, r3, #2
 80058a6:	5852      	ldr	r2, [r2, r1]
 80058a8:	2300      	movs	r3, #0
 80058aa:	0031      	movs	r1, r6
 80058ac:	f7ff fed0 	bl	8005650 <__multadd>
 80058b0:	0006      	movs	r6, r0
 80058b2:	10a3      	asrs	r3, r4, #2
 80058b4:	9301      	str	r3, [sp, #4]
 80058b6:	d036      	beq.n	8005926 <__pow5mult+0x96>
 80058b8:	6a6c      	ldr	r4, [r5, #36]	; 0x24
 80058ba:	2c00      	cmp	r4, #0
 80058bc:	d107      	bne.n	80058ce <__pow5mult+0x3e>
 80058be:	2010      	movs	r0, #16
 80058c0:	f7ff fe60 	bl	8005584 <malloc>
 80058c4:	6268      	str	r0, [r5, #36]	; 0x24
 80058c6:	6044      	str	r4, [r0, #4]
 80058c8:	6084      	str	r4, [r0, #8]
 80058ca:	6004      	str	r4, [r0, #0]
 80058cc:	60c4      	str	r4, [r0, #12]
 80058ce:	6a6f      	ldr	r7, [r5, #36]	; 0x24
 80058d0:	68bc      	ldr	r4, [r7, #8]
 80058d2:	2c00      	cmp	r4, #0
 80058d4:	d107      	bne.n	80058e6 <__pow5mult+0x56>
 80058d6:	4916      	ldr	r1, [pc, #88]	; (8005930 <__pow5mult+0xa0>)
 80058d8:	0028      	movs	r0, r5
 80058da:	f7ff ff40 	bl	800575e <__i2b>
 80058de:	2300      	movs	r3, #0
 80058e0:	0004      	movs	r4, r0
 80058e2:	60b8      	str	r0, [r7, #8]
 80058e4:	6003      	str	r3, [r0, #0]
 80058e6:	2201      	movs	r2, #1
 80058e8:	9b01      	ldr	r3, [sp, #4]
 80058ea:	4213      	tst	r3, r2
 80058ec:	d00a      	beq.n	8005904 <__pow5mult+0x74>
 80058ee:	0031      	movs	r1, r6
 80058f0:	0022      	movs	r2, r4
 80058f2:	0028      	movs	r0, r5
 80058f4:	f7ff ff3c 	bl	8005770 <__multiply>
 80058f8:	0007      	movs	r7, r0
 80058fa:	0031      	movs	r1, r6
 80058fc:	0028      	movs	r0, r5
 80058fe:	f7ff fe8e 	bl	800561e <_Bfree>
 8005902:	003e      	movs	r6, r7
 8005904:	9b01      	ldr	r3, [sp, #4]
 8005906:	105b      	asrs	r3, r3, #1
 8005908:	9301      	str	r3, [sp, #4]
 800590a:	d00c      	beq.n	8005926 <__pow5mult+0x96>
 800590c:	6820      	ldr	r0, [r4, #0]
 800590e:	2800      	cmp	r0, #0
 8005910:	d107      	bne.n	8005922 <__pow5mult+0x92>
 8005912:	0022      	movs	r2, r4
 8005914:	0021      	movs	r1, r4
 8005916:	0028      	movs	r0, r5
 8005918:	f7ff ff2a 	bl	8005770 <__multiply>
 800591c:	2300      	movs	r3, #0
 800591e:	6020      	str	r0, [r4, #0]
 8005920:	6003      	str	r3, [r0, #0]
 8005922:	0004      	movs	r4, r0
 8005924:	e7df      	b.n	80058e6 <__pow5mult+0x56>
 8005926:	0030      	movs	r0, r6
 8005928:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 800592a:	46c0      	nop			; (mov r8, r8)
 800592c:	08007030 	.word	0x08007030
 8005930:	00000271 	.word	0x00000271

08005934 <__lshift>:
 8005934:	b5f0      	push	{r4, r5, r6, r7, lr}
 8005936:	000d      	movs	r5, r1
 8005938:	0017      	movs	r7, r2
 800593a:	692b      	ldr	r3, [r5, #16]
 800593c:	1154      	asrs	r4, r2, #5
 800593e:	b085      	sub	sp, #20
 8005940:	18e3      	adds	r3, r4, r3
 8005942:	9301      	str	r3, [sp, #4]
 8005944:	3301      	adds	r3, #1
 8005946:	9300      	str	r3, [sp, #0]
 8005948:	6849      	ldr	r1, [r1, #4]
 800594a:	68ab      	ldr	r3, [r5, #8]
 800594c:	9002      	str	r0, [sp, #8]
 800594e:	9a00      	ldr	r2, [sp, #0]
 8005950:	4293      	cmp	r3, r2
 8005952:	db35      	blt.n	80059c0 <__lshift+0x8c>
 8005954:	9802      	ldr	r0, [sp, #8]
 8005956:	f7ff fe2a 	bl	80055ae <_Balloc>
 800595a:	2300      	movs	r3, #0
 800595c:	0002      	movs	r2, r0
 800595e:	0006      	movs	r6, r0
 8005960:	0019      	movs	r1, r3
 8005962:	3214      	adds	r2, #20
 8005964:	42a3      	cmp	r3, r4
 8005966:	db2e      	blt.n	80059c6 <__lshift+0x92>
 8005968:	43e3      	mvns	r3, r4
 800596a:	17db      	asrs	r3, r3, #31
 800596c:	401c      	ands	r4, r3
 800596e:	002b      	movs	r3, r5
 8005970:	00a4      	lsls	r4, r4, #2
 8005972:	1914      	adds	r4, r2, r4
 8005974:	692a      	ldr	r2, [r5, #16]
 8005976:	3314      	adds	r3, #20
 8005978:	0092      	lsls	r2, r2, #2
 800597a:	189a      	adds	r2, r3, r2
 800597c:	4694      	mov	ip, r2
 800597e:	221f      	movs	r2, #31
 8005980:	4017      	ands	r7, r2
 8005982:	d024      	beq.n	80059ce <__lshift+0x9a>
 8005984:	3201      	adds	r2, #1
 8005986:	1bd2      	subs	r2, r2, r7
 8005988:	9203      	str	r2, [sp, #12]
 800598a:	2200      	movs	r2, #0
 800598c:	6819      	ldr	r1, [r3, #0]
 800598e:	0020      	movs	r0, r4
 8005990:	40b9      	lsls	r1, r7
 8005992:	430a      	orrs	r2, r1
 8005994:	c404      	stmia	r4!, {r2}
 8005996:	cb04      	ldmia	r3!, {r2}
 8005998:	9903      	ldr	r1, [sp, #12]
 800599a:	40ca      	lsrs	r2, r1
 800599c:	459c      	cmp	ip, r3
 800599e:	d8f5      	bhi.n	800598c <__lshift+0x58>
 80059a0:	6042      	str	r2, [r0, #4]
 80059a2:	2a00      	cmp	r2, #0
 80059a4:	d002      	beq.n	80059ac <__lshift+0x78>
 80059a6:	9b01      	ldr	r3, [sp, #4]
 80059a8:	3302      	adds	r3, #2
 80059aa:	9300      	str	r3, [sp, #0]
 80059ac:	9b00      	ldr	r3, [sp, #0]
 80059ae:	9802      	ldr	r0, [sp, #8]
 80059b0:	3b01      	subs	r3, #1
 80059b2:	6133      	str	r3, [r6, #16]
 80059b4:	0029      	movs	r1, r5
 80059b6:	f7ff fe32 	bl	800561e <_Bfree>
 80059ba:	0030      	movs	r0, r6
 80059bc:	b005      	add	sp, #20
 80059be:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80059c0:	3101      	adds	r1, #1
 80059c2:	005b      	lsls	r3, r3, #1
 80059c4:	e7c3      	b.n	800594e <__lshift+0x1a>
 80059c6:	0098      	lsls	r0, r3, #2
 80059c8:	5011      	str	r1, [r2, r0]
 80059ca:	3301      	adds	r3, #1
 80059cc:	e7ca      	b.n	8005964 <__lshift+0x30>
 80059ce:	cb04      	ldmia	r3!, {r2}
 80059d0:	c404      	stmia	r4!, {r2}
 80059d2:	459c      	cmp	ip, r3
 80059d4:	d8fb      	bhi.n	80059ce <__lshift+0x9a>
 80059d6:	e7e9      	b.n	80059ac <__lshift+0x78>

080059d8 <__mcmp>:
 80059d8:	690a      	ldr	r2, [r1, #16]
 80059da:	6903      	ldr	r3, [r0, #16]
 80059dc:	b530      	push	{r4, r5, lr}
 80059de:	1a9b      	subs	r3, r3, r2
 80059e0:	d10d      	bne.n	80059fe <__mcmp+0x26>
 80059e2:	0092      	lsls	r2, r2, #2
 80059e4:	3014      	adds	r0, #20
 80059e6:	3114      	adds	r1, #20
 80059e8:	1884      	adds	r4, r0, r2
 80059ea:	1889      	adds	r1, r1, r2
 80059ec:	3c04      	subs	r4, #4
 80059ee:	3904      	subs	r1, #4
 80059f0:	6825      	ldr	r5, [r4, #0]
 80059f2:	680a      	ldr	r2, [r1, #0]
 80059f4:	4295      	cmp	r5, r2
 80059f6:	d004      	beq.n	8005a02 <__mcmp+0x2a>
 80059f8:	2301      	movs	r3, #1
 80059fa:	4295      	cmp	r5, r2
 80059fc:	d304      	bcc.n	8005a08 <__mcmp+0x30>
 80059fe:	0018      	movs	r0, r3
 8005a00:	bd30      	pop	{r4, r5, pc}
 8005a02:	42a0      	cmp	r0, r4
 8005a04:	d3f2      	bcc.n	80059ec <__mcmp+0x14>
 8005a06:	e7fa      	b.n	80059fe <__mcmp+0x26>
 8005a08:	425b      	negs	r3, r3
 8005a0a:	e7f8      	b.n	80059fe <__mcmp+0x26>

08005a0c <__mdiff>:
 8005a0c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8005a0e:	000d      	movs	r5, r1
 8005a10:	b085      	sub	sp, #20
 8005a12:	0007      	movs	r7, r0
 8005a14:	0011      	movs	r1, r2
 8005a16:	0028      	movs	r0, r5
 8005a18:	0014      	movs	r4, r2
 8005a1a:	f7ff ffdd 	bl	80059d8 <__mcmp>
 8005a1e:	1e06      	subs	r6, r0, #0
 8005a20:	d108      	bne.n	8005a34 <__mdiff+0x28>
 8005a22:	0001      	movs	r1, r0
 8005a24:	0038      	movs	r0, r7
 8005a26:	f7ff fdc2 	bl	80055ae <_Balloc>
 8005a2a:	2301      	movs	r3, #1
 8005a2c:	6146      	str	r6, [r0, #20]
 8005a2e:	6103      	str	r3, [r0, #16]
 8005a30:	b005      	add	sp, #20
 8005a32:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8005a34:	2301      	movs	r3, #1
 8005a36:	9301      	str	r3, [sp, #4]
 8005a38:	2800      	cmp	r0, #0
 8005a3a:	db04      	blt.n	8005a46 <__mdiff+0x3a>
 8005a3c:	0023      	movs	r3, r4
 8005a3e:	002c      	movs	r4, r5
 8005a40:	001d      	movs	r5, r3
 8005a42:	2300      	movs	r3, #0
 8005a44:	9301      	str	r3, [sp, #4]
 8005a46:	6861      	ldr	r1, [r4, #4]
 8005a48:	0038      	movs	r0, r7
 8005a4a:	f7ff fdb0 	bl	80055ae <_Balloc>
 8005a4e:	002f      	movs	r7, r5
 8005a50:	2200      	movs	r2, #0
 8005a52:	9b01      	ldr	r3, [sp, #4]
 8005a54:	6926      	ldr	r6, [r4, #16]
 8005a56:	60c3      	str	r3, [r0, #12]
 8005a58:	3414      	adds	r4, #20
 8005a5a:	00b3      	lsls	r3, r6, #2
 8005a5c:	18e3      	adds	r3, r4, r3
 8005a5e:	9302      	str	r3, [sp, #8]
 8005a60:	692b      	ldr	r3, [r5, #16]
 8005a62:	3714      	adds	r7, #20
 8005a64:	009b      	lsls	r3, r3, #2
 8005a66:	18fb      	adds	r3, r7, r3
 8005a68:	9303      	str	r3, [sp, #12]
 8005a6a:	0003      	movs	r3, r0
 8005a6c:	4694      	mov	ip, r2
 8005a6e:	3314      	adds	r3, #20
 8005a70:	cc20      	ldmia	r4!, {r5}
 8005a72:	cf04      	ldmia	r7!, {r2}
 8005a74:	9201      	str	r2, [sp, #4]
 8005a76:	b2aa      	uxth	r2, r5
 8005a78:	4494      	add	ip, r2
 8005a7a:	466a      	mov	r2, sp
 8005a7c:	4661      	mov	r1, ip
 8005a7e:	8892      	ldrh	r2, [r2, #4]
 8005a80:	0c2d      	lsrs	r5, r5, #16
 8005a82:	1a8a      	subs	r2, r1, r2
 8005a84:	9901      	ldr	r1, [sp, #4]
 8005a86:	0c09      	lsrs	r1, r1, #16
 8005a88:	1a69      	subs	r1, r5, r1
 8005a8a:	1415      	asrs	r5, r2, #16
 8005a8c:	1949      	adds	r1, r1, r5
 8005a8e:	140d      	asrs	r5, r1, #16
 8005a90:	b292      	uxth	r2, r2
 8005a92:	0409      	lsls	r1, r1, #16
 8005a94:	430a      	orrs	r2, r1
 8005a96:	601a      	str	r2, [r3, #0]
 8005a98:	9a03      	ldr	r2, [sp, #12]
 8005a9a:	46ac      	mov	ip, r5
 8005a9c:	3304      	adds	r3, #4
 8005a9e:	42ba      	cmp	r2, r7
 8005aa0:	d8e6      	bhi.n	8005a70 <__mdiff+0x64>
 8005aa2:	9902      	ldr	r1, [sp, #8]
 8005aa4:	001a      	movs	r2, r3
 8005aa6:	428c      	cmp	r4, r1
 8005aa8:	d305      	bcc.n	8005ab6 <__mdiff+0xaa>
 8005aaa:	3a04      	subs	r2, #4
 8005aac:	6813      	ldr	r3, [r2, #0]
 8005aae:	2b00      	cmp	r3, #0
 8005ab0:	d00e      	beq.n	8005ad0 <__mdiff+0xc4>
 8005ab2:	6106      	str	r6, [r0, #16]
 8005ab4:	e7bc      	b.n	8005a30 <__mdiff+0x24>
 8005ab6:	cc04      	ldmia	r4!, {r2}
 8005ab8:	b291      	uxth	r1, r2
 8005aba:	4461      	add	r1, ip
 8005abc:	140d      	asrs	r5, r1, #16
 8005abe:	0c12      	lsrs	r2, r2, #16
 8005ac0:	1952      	adds	r2, r2, r5
 8005ac2:	1415      	asrs	r5, r2, #16
 8005ac4:	b289      	uxth	r1, r1
 8005ac6:	0412      	lsls	r2, r2, #16
 8005ac8:	430a      	orrs	r2, r1
 8005aca:	46ac      	mov	ip, r5
 8005acc:	c304      	stmia	r3!, {r2}
 8005ace:	e7e8      	b.n	8005aa2 <__mdiff+0x96>
 8005ad0:	3e01      	subs	r6, #1
 8005ad2:	e7ea      	b.n	8005aaa <__mdiff+0x9e>

08005ad4 <__d2b>:
 8005ad4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8005ad6:	001d      	movs	r5, r3
 8005ad8:	2101      	movs	r1, #1
 8005ada:	0014      	movs	r4, r2
 8005adc:	9f08      	ldr	r7, [sp, #32]
 8005ade:	f7ff fd66 	bl	80055ae <_Balloc>
 8005ae2:	032b      	lsls	r3, r5, #12
 8005ae4:	006d      	lsls	r5, r5, #1
 8005ae6:	0006      	movs	r6, r0
 8005ae8:	0b1b      	lsrs	r3, r3, #12
 8005aea:	0d6d      	lsrs	r5, r5, #21
 8005aec:	d124      	bne.n	8005b38 <__d2b+0x64>
 8005aee:	9301      	str	r3, [sp, #4]
 8005af0:	2c00      	cmp	r4, #0
 8005af2:	d027      	beq.n	8005b44 <__d2b+0x70>
 8005af4:	4668      	mov	r0, sp
 8005af6:	9400      	str	r4, [sp, #0]
 8005af8:	f7ff fe02 	bl	8005700 <__lo0bits>
 8005afc:	9c00      	ldr	r4, [sp, #0]
 8005afe:	2800      	cmp	r0, #0
 8005b00:	d01e      	beq.n	8005b40 <__d2b+0x6c>
 8005b02:	9b01      	ldr	r3, [sp, #4]
 8005b04:	2120      	movs	r1, #32
 8005b06:	001a      	movs	r2, r3
 8005b08:	1a09      	subs	r1, r1, r0
 8005b0a:	408a      	lsls	r2, r1
 8005b0c:	40c3      	lsrs	r3, r0
 8005b0e:	4322      	orrs	r2, r4
 8005b10:	6172      	str	r2, [r6, #20]
 8005b12:	9301      	str	r3, [sp, #4]
 8005b14:	9c01      	ldr	r4, [sp, #4]
 8005b16:	61b4      	str	r4, [r6, #24]
 8005b18:	1e63      	subs	r3, r4, #1
 8005b1a:	419c      	sbcs	r4, r3
 8005b1c:	3401      	adds	r4, #1
 8005b1e:	6134      	str	r4, [r6, #16]
 8005b20:	2d00      	cmp	r5, #0
 8005b22:	d018      	beq.n	8005b56 <__d2b+0x82>
 8005b24:	4b12      	ldr	r3, [pc, #72]	; (8005b70 <__d2b+0x9c>)
 8005b26:	18ed      	adds	r5, r5, r3
 8005b28:	2335      	movs	r3, #53	; 0x35
 8005b2a:	182d      	adds	r5, r5, r0
 8005b2c:	603d      	str	r5, [r7, #0]
 8005b2e:	1a18      	subs	r0, r3, r0
 8005b30:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8005b32:	6018      	str	r0, [r3, #0]
 8005b34:	0030      	movs	r0, r6
 8005b36:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8005b38:	2280      	movs	r2, #128	; 0x80
 8005b3a:	0352      	lsls	r2, r2, #13
 8005b3c:	4313      	orrs	r3, r2
 8005b3e:	e7d6      	b.n	8005aee <__d2b+0x1a>
 8005b40:	6174      	str	r4, [r6, #20]
 8005b42:	e7e7      	b.n	8005b14 <__d2b+0x40>
 8005b44:	a801      	add	r0, sp, #4
 8005b46:	f7ff fddb 	bl	8005700 <__lo0bits>
 8005b4a:	2401      	movs	r4, #1
 8005b4c:	9b01      	ldr	r3, [sp, #4]
 8005b4e:	6134      	str	r4, [r6, #16]
 8005b50:	6173      	str	r3, [r6, #20]
 8005b52:	3020      	adds	r0, #32
 8005b54:	e7e4      	b.n	8005b20 <__d2b+0x4c>
 8005b56:	4b07      	ldr	r3, [pc, #28]	; (8005b74 <__d2b+0xa0>)
 8005b58:	18c0      	adds	r0, r0, r3
 8005b5a:	4b07      	ldr	r3, [pc, #28]	; (8005b78 <__d2b+0xa4>)
 8005b5c:	6038      	str	r0, [r7, #0]
 8005b5e:	18e3      	adds	r3, r4, r3
 8005b60:	009b      	lsls	r3, r3, #2
 8005b62:	18f3      	adds	r3, r6, r3
 8005b64:	6958      	ldr	r0, [r3, #20]
 8005b66:	f7ff fdb1 	bl	80056cc <__hi0bits>
 8005b6a:	0164      	lsls	r4, r4, #5
 8005b6c:	1a20      	subs	r0, r4, r0
 8005b6e:	e7df      	b.n	8005b30 <__d2b+0x5c>
 8005b70:	fffffbcd 	.word	0xfffffbcd
 8005b74:	fffffbce 	.word	0xfffffbce
 8005b78:	3fffffff 	.word	0x3fffffff

08005b7c <_calloc_r>:
 8005b7c:	434a      	muls	r2, r1
 8005b7e:	b570      	push	{r4, r5, r6, lr}
 8005b80:	0011      	movs	r1, r2
 8005b82:	0014      	movs	r4, r2
 8005b84:	f000 f852 	bl	8005c2c <_malloc_r>
 8005b88:	1e05      	subs	r5, r0, #0
 8005b8a:	d003      	beq.n	8005b94 <_calloc_r+0x18>
 8005b8c:	0022      	movs	r2, r4
 8005b8e:	2100      	movs	r1, #0
 8005b90:	f7fe f9ff 	bl	8003f92 <memset>
 8005b94:	0028      	movs	r0, r5
 8005b96:	bd70      	pop	{r4, r5, r6, pc}

08005b98 <_free_r>:
 8005b98:	b570      	push	{r4, r5, r6, lr}
 8005b9a:	0005      	movs	r5, r0
 8005b9c:	2900      	cmp	r1, #0
 8005b9e:	d010      	beq.n	8005bc2 <_free_r+0x2a>
 8005ba0:	1f0c      	subs	r4, r1, #4
 8005ba2:	6823      	ldr	r3, [r4, #0]
 8005ba4:	2b00      	cmp	r3, #0
 8005ba6:	da00      	bge.n	8005baa <_free_r+0x12>
 8005ba8:	18e4      	adds	r4, r4, r3
 8005baa:	0028      	movs	r0, r5
 8005bac:	f000 fa33 	bl	8006016 <__malloc_lock>
 8005bb0:	4a1d      	ldr	r2, [pc, #116]	; (8005c28 <_free_r+0x90>)
 8005bb2:	6813      	ldr	r3, [r2, #0]
 8005bb4:	2b00      	cmp	r3, #0
 8005bb6:	d105      	bne.n	8005bc4 <_free_r+0x2c>
 8005bb8:	6063      	str	r3, [r4, #4]
 8005bba:	6014      	str	r4, [r2, #0]
 8005bbc:	0028      	movs	r0, r5
 8005bbe:	f000 fa2b 	bl	8006018 <__malloc_unlock>
 8005bc2:	bd70      	pop	{r4, r5, r6, pc}
 8005bc4:	42a3      	cmp	r3, r4
 8005bc6:	d909      	bls.n	8005bdc <_free_r+0x44>
 8005bc8:	6821      	ldr	r1, [r4, #0]
 8005bca:	1860      	adds	r0, r4, r1
 8005bcc:	4283      	cmp	r3, r0
 8005bce:	d1f3      	bne.n	8005bb8 <_free_r+0x20>
 8005bd0:	6818      	ldr	r0, [r3, #0]
 8005bd2:	685b      	ldr	r3, [r3, #4]
 8005bd4:	1841      	adds	r1, r0, r1
 8005bd6:	6021      	str	r1, [r4, #0]
 8005bd8:	e7ee      	b.n	8005bb8 <_free_r+0x20>
 8005bda:	0013      	movs	r3, r2
 8005bdc:	685a      	ldr	r2, [r3, #4]
 8005bde:	2a00      	cmp	r2, #0
 8005be0:	d001      	beq.n	8005be6 <_free_r+0x4e>
 8005be2:	42a2      	cmp	r2, r4
 8005be4:	d9f9      	bls.n	8005bda <_free_r+0x42>
 8005be6:	6819      	ldr	r1, [r3, #0]
 8005be8:	1858      	adds	r0, r3, r1
 8005bea:	42a0      	cmp	r0, r4
 8005bec:	d10b      	bne.n	8005c06 <_free_r+0x6e>
 8005bee:	6820      	ldr	r0, [r4, #0]
 8005bf0:	1809      	adds	r1, r1, r0
 8005bf2:	1858      	adds	r0, r3, r1
 8005bf4:	6019      	str	r1, [r3, #0]
 8005bf6:	4282      	cmp	r2, r0
 8005bf8:	d1e0      	bne.n	8005bbc <_free_r+0x24>
 8005bfa:	6810      	ldr	r0, [r2, #0]
 8005bfc:	6852      	ldr	r2, [r2, #4]
 8005bfe:	1841      	adds	r1, r0, r1
 8005c00:	6019      	str	r1, [r3, #0]
 8005c02:	605a      	str	r2, [r3, #4]
 8005c04:	e7da      	b.n	8005bbc <_free_r+0x24>
 8005c06:	42a0      	cmp	r0, r4
 8005c08:	d902      	bls.n	8005c10 <_free_r+0x78>
 8005c0a:	230c      	movs	r3, #12
 8005c0c:	602b      	str	r3, [r5, #0]
 8005c0e:	e7d5      	b.n	8005bbc <_free_r+0x24>
 8005c10:	6821      	ldr	r1, [r4, #0]
 8005c12:	1860      	adds	r0, r4, r1
 8005c14:	4282      	cmp	r2, r0
 8005c16:	d103      	bne.n	8005c20 <_free_r+0x88>
 8005c18:	6810      	ldr	r0, [r2, #0]
 8005c1a:	6852      	ldr	r2, [r2, #4]
 8005c1c:	1841      	adds	r1, r0, r1
 8005c1e:	6021      	str	r1, [r4, #0]
 8005c20:	6062      	str	r2, [r4, #4]
 8005c22:	605c      	str	r4, [r3, #4]
 8005c24:	e7ca      	b.n	8005bbc <_free_r+0x24>
 8005c26:	46c0      	nop			; (mov r8, r8)
 8005c28:	2000060c 	.word	0x2000060c

08005c2c <_malloc_r>:
 8005c2c:	2303      	movs	r3, #3
 8005c2e:	b570      	push	{r4, r5, r6, lr}
 8005c30:	1ccd      	adds	r5, r1, #3
 8005c32:	439d      	bics	r5, r3
 8005c34:	3508      	adds	r5, #8
 8005c36:	0006      	movs	r6, r0
 8005c38:	2d0c      	cmp	r5, #12
 8005c3a:	d21e      	bcs.n	8005c7a <_malloc_r+0x4e>
 8005c3c:	250c      	movs	r5, #12
 8005c3e:	42a9      	cmp	r1, r5
 8005c40:	d81d      	bhi.n	8005c7e <_malloc_r+0x52>
 8005c42:	0030      	movs	r0, r6
 8005c44:	f000 f9e7 	bl	8006016 <__malloc_lock>
 8005c48:	4a25      	ldr	r2, [pc, #148]	; (8005ce0 <_malloc_r+0xb4>)
 8005c4a:	6814      	ldr	r4, [r2, #0]
 8005c4c:	0021      	movs	r1, r4
 8005c4e:	2900      	cmp	r1, #0
 8005c50:	d119      	bne.n	8005c86 <_malloc_r+0x5a>
 8005c52:	4c24      	ldr	r4, [pc, #144]	; (8005ce4 <_malloc_r+0xb8>)
 8005c54:	6823      	ldr	r3, [r4, #0]
 8005c56:	2b00      	cmp	r3, #0
 8005c58:	d103      	bne.n	8005c62 <_malloc_r+0x36>
 8005c5a:	0030      	movs	r0, r6
 8005c5c:	f000 f9a4 	bl	8005fa8 <_sbrk_r>
 8005c60:	6020      	str	r0, [r4, #0]
 8005c62:	0029      	movs	r1, r5
 8005c64:	0030      	movs	r0, r6
 8005c66:	f000 f99f 	bl	8005fa8 <_sbrk_r>
 8005c6a:	1c43      	adds	r3, r0, #1
 8005c6c:	d12b      	bne.n	8005cc6 <_malloc_r+0x9a>
 8005c6e:	230c      	movs	r3, #12
 8005c70:	0030      	movs	r0, r6
 8005c72:	6033      	str	r3, [r6, #0]
 8005c74:	f000 f9d0 	bl	8006018 <__malloc_unlock>
 8005c78:	e003      	b.n	8005c82 <_malloc_r+0x56>
 8005c7a:	2d00      	cmp	r5, #0
 8005c7c:	dadf      	bge.n	8005c3e <_malloc_r+0x12>
 8005c7e:	230c      	movs	r3, #12
 8005c80:	6033      	str	r3, [r6, #0]
 8005c82:	2000      	movs	r0, #0
 8005c84:	bd70      	pop	{r4, r5, r6, pc}
 8005c86:	680b      	ldr	r3, [r1, #0]
 8005c88:	1b5b      	subs	r3, r3, r5
 8005c8a:	d419      	bmi.n	8005cc0 <_malloc_r+0x94>
 8005c8c:	2b0b      	cmp	r3, #11
 8005c8e:	d903      	bls.n	8005c98 <_malloc_r+0x6c>
 8005c90:	600b      	str	r3, [r1, #0]
 8005c92:	18cc      	adds	r4, r1, r3
 8005c94:	6025      	str	r5, [r4, #0]
 8005c96:	e003      	b.n	8005ca0 <_malloc_r+0x74>
 8005c98:	684b      	ldr	r3, [r1, #4]
 8005c9a:	428c      	cmp	r4, r1
 8005c9c:	d10d      	bne.n	8005cba <_malloc_r+0x8e>
 8005c9e:	6013      	str	r3, [r2, #0]
 8005ca0:	0030      	movs	r0, r6
 8005ca2:	f000 f9b9 	bl	8006018 <__malloc_unlock>
 8005ca6:	0020      	movs	r0, r4
 8005ca8:	2207      	movs	r2, #7
 8005caa:	300b      	adds	r0, #11
 8005cac:	1d23      	adds	r3, r4, #4
 8005cae:	4390      	bics	r0, r2
 8005cb0:	1ac3      	subs	r3, r0, r3
 8005cb2:	d0e7      	beq.n	8005c84 <_malloc_r+0x58>
 8005cb4:	425a      	negs	r2, r3
 8005cb6:	50e2      	str	r2, [r4, r3]
 8005cb8:	e7e4      	b.n	8005c84 <_malloc_r+0x58>
 8005cba:	6063      	str	r3, [r4, #4]
 8005cbc:	000c      	movs	r4, r1
 8005cbe:	e7ef      	b.n	8005ca0 <_malloc_r+0x74>
 8005cc0:	000c      	movs	r4, r1
 8005cc2:	6849      	ldr	r1, [r1, #4]
 8005cc4:	e7c3      	b.n	8005c4e <_malloc_r+0x22>
 8005cc6:	2303      	movs	r3, #3
 8005cc8:	1cc4      	adds	r4, r0, #3
 8005cca:	439c      	bics	r4, r3
 8005ccc:	42a0      	cmp	r0, r4
 8005cce:	d0e1      	beq.n	8005c94 <_malloc_r+0x68>
 8005cd0:	1a21      	subs	r1, r4, r0
 8005cd2:	0030      	movs	r0, r6
 8005cd4:	f000 f968 	bl	8005fa8 <_sbrk_r>
 8005cd8:	1c43      	adds	r3, r0, #1
 8005cda:	d1db      	bne.n	8005c94 <_malloc_r+0x68>
 8005cdc:	e7c7      	b.n	8005c6e <_malloc_r+0x42>
 8005cde:	46c0      	nop			; (mov r8, r8)
 8005ce0:	2000060c 	.word	0x2000060c
 8005ce4:	20000610 	.word	0x20000610

08005ce8 <__ssputs_r>:
 8005ce8:	b5f0      	push	{r4, r5, r6, r7, lr}
 8005cea:	688e      	ldr	r6, [r1, #8]
 8005cec:	b085      	sub	sp, #20
 8005cee:	0007      	movs	r7, r0
 8005cf0:	000c      	movs	r4, r1
 8005cf2:	9203      	str	r2, [sp, #12]
 8005cf4:	9301      	str	r3, [sp, #4]
 8005cf6:	429e      	cmp	r6, r3
 8005cf8:	d83c      	bhi.n	8005d74 <__ssputs_r+0x8c>
 8005cfa:	2390      	movs	r3, #144	; 0x90
 8005cfc:	898a      	ldrh	r2, [r1, #12]
 8005cfe:	00db      	lsls	r3, r3, #3
 8005d00:	421a      	tst	r2, r3
 8005d02:	d034      	beq.n	8005d6e <__ssputs_r+0x86>
 8005d04:	2503      	movs	r5, #3
 8005d06:	6909      	ldr	r1, [r1, #16]
 8005d08:	6823      	ldr	r3, [r4, #0]
 8005d0a:	1a5b      	subs	r3, r3, r1
 8005d0c:	9302      	str	r3, [sp, #8]
 8005d0e:	6963      	ldr	r3, [r4, #20]
 8005d10:	9802      	ldr	r0, [sp, #8]
 8005d12:	435d      	muls	r5, r3
 8005d14:	0feb      	lsrs	r3, r5, #31
 8005d16:	195d      	adds	r5, r3, r5
 8005d18:	9b01      	ldr	r3, [sp, #4]
 8005d1a:	106d      	asrs	r5, r5, #1
 8005d1c:	3301      	adds	r3, #1
 8005d1e:	181b      	adds	r3, r3, r0
 8005d20:	42ab      	cmp	r3, r5
 8005d22:	d900      	bls.n	8005d26 <__ssputs_r+0x3e>
 8005d24:	001d      	movs	r5, r3
 8005d26:	0553      	lsls	r3, r2, #21
 8005d28:	d532      	bpl.n	8005d90 <__ssputs_r+0xa8>
 8005d2a:	0029      	movs	r1, r5
 8005d2c:	0038      	movs	r0, r7
 8005d2e:	f7ff ff7d 	bl	8005c2c <_malloc_r>
 8005d32:	1e06      	subs	r6, r0, #0
 8005d34:	d109      	bne.n	8005d4a <__ssputs_r+0x62>
 8005d36:	230c      	movs	r3, #12
 8005d38:	603b      	str	r3, [r7, #0]
 8005d3a:	2340      	movs	r3, #64	; 0x40
 8005d3c:	2001      	movs	r0, #1
 8005d3e:	89a2      	ldrh	r2, [r4, #12]
 8005d40:	4240      	negs	r0, r0
 8005d42:	4313      	orrs	r3, r2
 8005d44:	81a3      	strh	r3, [r4, #12]
 8005d46:	b005      	add	sp, #20
 8005d48:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8005d4a:	9a02      	ldr	r2, [sp, #8]
 8005d4c:	6921      	ldr	r1, [r4, #16]
 8005d4e:	f7fe f917 	bl	8003f80 <memcpy>
 8005d52:	89a3      	ldrh	r3, [r4, #12]
 8005d54:	4a14      	ldr	r2, [pc, #80]	; (8005da8 <__ssputs_r+0xc0>)
 8005d56:	401a      	ands	r2, r3
 8005d58:	2380      	movs	r3, #128	; 0x80
 8005d5a:	4313      	orrs	r3, r2
 8005d5c:	81a3      	strh	r3, [r4, #12]
 8005d5e:	9b02      	ldr	r3, [sp, #8]
 8005d60:	6126      	str	r6, [r4, #16]
 8005d62:	18f6      	adds	r6, r6, r3
 8005d64:	6026      	str	r6, [r4, #0]
 8005d66:	6165      	str	r5, [r4, #20]
 8005d68:	9e01      	ldr	r6, [sp, #4]
 8005d6a:	1aed      	subs	r5, r5, r3
 8005d6c:	60a5      	str	r5, [r4, #8]
 8005d6e:	9b01      	ldr	r3, [sp, #4]
 8005d70:	429e      	cmp	r6, r3
 8005d72:	d900      	bls.n	8005d76 <__ssputs_r+0x8e>
 8005d74:	9e01      	ldr	r6, [sp, #4]
 8005d76:	0032      	movs	r2, r6
 8005d78:	9903      	ldr	r1, [sp, #12]
 8005d7a:	6820      	ldr	r0, [r4, #0]
 8005d7c:	f000 f938 	bl	8005ff0 <memmove>
 8005d80:	68a3      	ldr	r3, [r4, #8]
 8005d82:	2000      	movs	r0, #0
 8005d84:	1b9b      	subs	r3, r3, r6
 8005d86:	60a3      	str	r3, [r4, #8]
 8005d88:	6823      	ldr	r3, [r4, #0]
 8005d8a:	199e      	adds	r6, r3, r6
 8005d8c:	6026      	str	r6, [r4, #0]
 8005d8e:	e7da      	b.n	8005d46 <__ssputs_r+0x5e>
 8005d90:	002a      	movs	r2, r5
 8005d92:	0038      	movs	r0, r7
 8005d94:	f000 f941 	bl	800601a <_realloc_r>
 8005d98:	1e06      	subs	r6, r0, #0
 8005d9a:	d1e0      	bne.n	8005d5e <__ssputs_r+0x76>
 8005d9c:	6921      	ldr	r1, [r4, #16]
 8005d9e:	0038      	movs	r0, r7
 8005da0:	f7ff fefa 	bl	8005b98 <_free_r>
 8005da4:	e7c7      	b.n	8005d36 <__ssputs_r+0x4e>
 8005da6:	46c0      	nop			; (mov r8, r8)
 8005da8:	fffffb7f 	.word	0xfffffb7f

08005dac <_svfiprintf_r>:
 8005dac:	b5f0      	push	{r4, r5, r6, r7, lr}
 8005dae:	b0a1      	sub	sp, #132	; 0x84
 8005db0:	9003      	str	r0, [sp, #12]
 8005db2:	001d      	movs	r5, r3
 8005db4:	898b      	ldrh	r3, [r1, #12]
 8005db6:	000f      	movs	r7, r1
 8005db8:	0016      	movs	r6, r2
 8005dba:	061b      	lsls	r3, r3, #24
 8005dbc:	d511      	bpl.n	8005de2 <_svfiprintf_r+0x36>
 8005dbe:	690b      	ldr	r3, [r1, #16]
 8005dc0:	2b00      	cmp	r3, #0
 8005dc2:	d10e      	bne.n	8005de2 <_svfiprintf_r+0x36>
 8005dc4:	2140      	movs	r1, #64	; 0x40
 8005dc6:	f7ff ff31 	bl	8005c2c <_malloc_r>
 8005dca:	6038      	str	r0, [r7, #0]
 8005dcc:	6138      	str	r0, [r7, #16]
 8005dce:	2800      	cmp	r0, #0
 8005dd0:	d105      	bne.n	8005dde <_svfiprintf_r+0x32>
 8005dd2:	230c      	movs	r3, #12
 8005dd4:	9a03      	ldr	r2, [sp, #12]
 8005dd6:	3801      	subs	r0, #1
 8005dd8:	6013      	str	r3, [r2, #0]
 8005dda:	b021      	add	sp, #132	; 0x84
 8005ddc:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8005dde:	2340      	movs	r3, #64	; 0x40
 8005de0:	617b      	str	r3, [r7, #20]
 8005de2:	2300      	movs	r3, #0
 8005de4:	ac08      	add	r4, sp, #32
 8005de6:	6163      	str	r3, [r4, #20]
 8005de8:	3320      	adds	r3, #32
 8005dea:	7663      	strb	r3, [r4, #25]
 8005dec:	3310      	adds	r3, #16
 8005dee:	76a3      	strb	r3, [r4, #26]
 8005df0:	9507      	str	r5, [sp, #28]
 8005df2:	0035      	movs	r5, r6
 8005df4:	782b      	ldrb	r3, [r5, #0]
 8005df6:	2b00      	cmp	r3, #0
 8005df8:	d001      	beq.n	8005dfe <_svfiprintf_r+0x52>
 8005dfa:	2b25      	cmp	r3, #37	; 0x25
 8005dfc:	d146      	bne.n	8005e8c <_svfiprintf_r+0xe0>
 8005dfe:	1bab      	subs	r3, r5, r6
 8005e00:	9305      	str	r3, [sp, #20]
 8005e02:	d00c      	beq.n	8005e1e <_svfiprintf_r+0x72>
 8005e04:	0032      	movs	r2, r6
 8005e06:	0039      	movs	r1, r7
 8005e08:	9803      	ldr	r0, [sp, #12]
 8005e0a:	f7ff ff6d 	bl	8005ce8 <__ssputs_r>
 8005e0e:	1c43      	adds	r3, r0, #1
 8005e10:	d100      	bne.n	8005e14 <_svfiprintf_r+0x68>
 8005e12:	e0ae      	b.n	8005f72 <_svfiprintf_r+0x1c6>
 8005e14:	6962      	ldr	r2, [r4, #20]
 8005e16:	9b05      	ldr	r3, [sp, #20]
 8005e18:	4694      	mov	ip, r2
 8005e1a:	4463      	add	r3, ip
 8005e1c:	6163      	str	r3, [r4, #20]
 8005e1e:	782b      	ldrb	r3, [r5, #0]
 8005e20:	2b00      	cmp	r3, #0
 8005e22:	d100      	bne.n	8005e26 <_svfiprintf_r+0x7a>
 8005e24:	e0a5      	b.n	8005f72 <_svfiprintf_r+0x1c6>
 8005e26:	2201      	movs	r2, #1
 8005e28:	2300      	movs	r3, #0
 8005e2a:	4252      	negs	r2, r2
 8005e2c:	6062      	str	r2, [r4, #4]
 8005e2e:	a904      	add	r1, sp, #16
 8005e30:	3254      	adds	r2, #84	; 0x54
 8005e32:	1852      	adds	r2, r2, r1
 8005e34:	1c6e      	adds	r6, r5, #1
 8005e36:	6023      	str	r3, [r4, #0]
 8005e38:	60e3      	str	r3, [r4, #12]
 8005e3a:	60a3      	str	r3, [r4, #8]
 8005e3c:	7013      	strb	r3, [r2, #0]
 8005e3e:	65a3      	str	r3, [r4, #88]	; 0x58
 8005e40:	7831      	ldrb	r1, [r6, #0]
 8005e42:	2205      	movs	r2, #5
 8005e44:	4853      	ldr	r0, [pc, #332]	; (8005f94 <_svfiprintf_r+0x1e8>)
 8005e46:	f7ff fba7 	bl	8005598 <memchr>
 8005e4a:	1c75      	adds	r5, r6, #1
 8005e4c:	2800      	cmp	r0, #0
 8005e4e:	d11f      	bne.n	8005e90 <_svfiprintf_r+0xe4>
 8005e50:	6822      	ldr	r2, [r4, #0]
 8005e52:	06d3      	lsls	r3, r2, #27
 8005e54:	d504      	bpl.n	8005e60 <_svfiprintf_r+0xb4>
 8005e56:	2353      	movs	r3, #83	; 0x53
 8005e58:	a904      	add	r1, sp, #16
 8005e5a:	185b      	adds	r3, r3, r1
 8005e5c:	2120      	movs	r1, #32
 8005e5e:	7019      	strb	r1, [r3, #0]
 8005e60:	0713      	lsls	r3, r2, #28
 8005e62:	d504      	bpl.n	8005e6e <_svfiprintf_r+0xc2>
 8005e64:	2353      	movs	r3, #83	; 0x53
 8005e66:	a904      	add	r1, sp, #16
 8005e68:	185b      	adds	r3, r3, r1
 8005e6a:	212b      	movs	r1, #43	; 0x2b
 8005e6c:	7019      	strb	r1, [r3, #0]
 8005e6e:	7833      	ldrb	r3, [r6, #0]
 8005e70:	2b2a      	cmp	r3, #42	; 0x2a
 8005e72:	d016      	beq.n	8005ea2 <_svfiprintf_r+0xf6>
 8005e74:	0035      	movs	r5, r6
 8005e76:	2100      	movs	r1, #0
 8005e78:	200a      	movs	r0, #10
 8005e7a:	68e3      	ldr	r3, [r4, #12]
 8005e7c:	782a      	ldrb	r2, [r5, #0]
 8005e7e:	1c6e      	adds	r6, r5, #1
 8005e80:	3a30      	subs	r2, #48	; 0x30
 8005e82:	2a09      	cmp	r2, #9
 8005e84:	d94e      	bls.n	8005f24 <_svfiprintf_r+0x178>
 8005e86:	2900      	cmp	r1, #0
 8005e88:	d018      	beq.n	8005ebc <_svfiprintf_r+0x110>
 8005e8a:	e010      	b.n	8005eae <_svfiprintf_r+0x102>
 8005e8c:	3501      	adds	r5, #1
 8005e8e:	e7b1      	b.n	8005df4 <_svfiprintf_r+0x48>
 8005e90:	4b40      	ldr	r3, [pc, #256]	; (8005f94 <_svfiprintf_r+0x1e8>)
 8005e92:	6822      	ldr	r2, [r4, #0]
 8005e94:	1ac0      	subs	r0, r0, r3
 8005e96:	2301      	movs	r3, #1
 8005e98:	4083      	lsls	r3, r0
 8005e9a:	4313      	orrs	r3, r2
 8005e9c:	6023      	str	r3, [r4, #0]
 8005e9e:	002e      	movs	r6, r5
 8005ea0:	e7ce      	b.n	8005e40 <_svfiprintf_r+0x94>
 8005ea2:	9b07      	ldr	r3, [sp, #28]
 8005ea4:	1d19      	adds	r1, r3, #4
 8005ea6:	681b      	ldr	r3, [r3, #0]
 8005ea8:	9107      	str	r1, [sp, #28]
 8005eaa:	2b00      	cmp	r3, #0
 8005eac:	db01      	blt.n	8005eb2 <_svfiprintf_r+0x106>
 8005eae:	930b      	str	r3, [sp, #44]	; 0x2c
 8005eb0:	e004      	b.n	8005ebc <_svfiprintf_r+0x110>
 8005eb2:	425b      	negs	r3, r3
 8005eb4:	60e3      	str	r3, [r4, #12]
 8005eb6:	2302      	movs	r3, #2
 8005eb8:	4313      	orrs	r3, r2
 8005eba:	6023      	str	r3, [r4, #0]
 8005ebc:	782b      	ldrb	r3, [r5, #0]
 8005ebe:	2b2e      	cmp	r3, #46	; 0x2e
 8005ec0:	d10a      	bne.n	8005ed8 <_svfiprintf_r+0x12c>
 8005ec2:	786b      	ldrb	r3, [r5, #1]
 8005ec4:	2b2a      	cmp	r3, #42	; 0x2a
 8005ec6:	d135      	bne.n	8005f34 <_svfiprintf_r+0x188>
 8005ec8:	9b07      	ldr	r3, [sp, #28]
 8005eca:	3502      	adds	r5, #2
 8005ecc:	1d1a      	adds	r2, r3, #4
 8005ece:	681b      	ldr	r3, [r3, #0]
 8005ed0:	9207      	str	r2, [sp, #28]
 8005ed2:	2b00      	cmp	r3, #0
 8005ed4:	db2b      	blt.n	8005f2e <_svfiprintf_r+0x182>
 8005ed6:	9309      	str	r3, [sp, #36]	; 0x24
 8005ed8:	4e2f      	ldr	r6, [pc, #188]	; (8005f98 <_svfiprintf_r+0x1ec>)
 8005eda:	7829      	ldrb	r1, [r5, #0]
 8005edc:	2203      	movs	r2, #3
 8005ede:	0030      	movs	r0, r6
 8005ee0:	f7ff fb5a 	bl	8005598 <memchr>
 8005ee4:	2800      	cmp	r0, #0
 8005ee6:	d006      	beq.n	8005ef6 <_svfiprintf_r+0x14a>
 8005ee8:	2340      	movs	r3, #64	; 0x40
 8005eea:	1b80      	subs	r0, r0, r6
 8005eec:	4083      	lsls	r3, r0
 8005eee:	6822      	ldr	r2, [r4, #0]
 8005ef0:	3501      	adds	r5, #1
 8005ef2:	4313      	orrs	r3, r2
 8005ef4:	6023      	str	r3, [r4, #0]
 8005ef6:	7829      	ldrb	r1, [r5, #0]
 8005ef8:	2206      	movs	r2, #6
 8005efa:	4828      	ldr	r0, [pc, #160]	; (8005f9c <_svfiprintf_r+0x1f0>)
 8005efc:	1c6e      	adds	r6, r5, #1
 8005efe:	7621      	strb	r1, [r4, #24]
 8005f00:	f7ff fb4a 	bl	8005598 <memchr>
 8005f04:	2800      	cmp	r0, #0
 8005f06:	d03c      	beq.n	8005f82 <_svfiprintf_r+0x1d6>
 8005f08:	4b25      	ldr	r3, [pc, #148]	; (8005fa0 <_svfiprintf_r+0x1f4>)
 8005f0a:	2b00      	cmp	r3, #0
 8005f0c:	d125      	bne.n	8005f5a <_svfiprintf_r+0x1ae>
 8005f0e:	2207      	movs	r2, #7
 8005f10:	9b07      	ldr	r3, [sp, #28]
 8005f12:	3307      	adds	r3, #7
 8005f14:	4393      	bics	r3, r2
 8005f16:	3308      	adds	r3, #8
 8005f18:	9307      	str	r3, [sp, #28]
 8005f1a:	6963      	ldr	r3, [r4, #20]
 8005f1c:	9a04      	ldr	r2, [sp, #16]
 8005f1e:	189b      	adds	r3, r3, r2
 8005f20:	6163      	str	r3, [r4, #20]
 8005f22:	e766      	b.n	8005df2 <_svfiprintf_r+0x46>
 8005f24:	4343      	muls	r3, r0
 8005f26:	2101      	movs	r1, #1
 8005f28:	189b      	adds	r3, r3, r2
 8005f2a:	0035      	movs	r5, r6
 8005f2c:	e7a6      	b.n	8005e7c <_svfiprintf_r+0xd0>
 8005f2e:	2301      	movs	r3, #1
 8005f30:	425b      	negs	r3, r3
 8005f32:	e7d0      	b.n	8005ed6 <_svfiprintf_r+0x12a>
 8005f34:	2300      	movs	r3, #0
 8005f36:	200a      	movs	r0, #10
 8005f38:	001a      	movs	r2, r3
 8005f3a:	3501      	adds	r5, #1
 8005f3c:	6063      	str	r3, [r4, #4]
 8005f3e:	7829      	ldrb	r1, [r5, #0]
 8005f40:	1c6e      	adds	r6, r5, #1
 8005f42:	3930      	subs	r1, #48	; 0x30
 8005f44:	2909      	cmp	r1, #9
 8005f46:	d903      	bls.n	8005f50 <_svfiprintf_r+0x1a4>
 8005f48:	2b00      	cmp	r3, #0
 8005f4a:	d0c5      	beq.n	8005ed8 <_svfiprintf_r+0x12c>
 8005f4c:	9209      	str	r2, [sp, #36]	; 0x24
 8005f4e:	e7c3      	b.n	8005ed8 <_svfiprintf_r+0x12c>
 8005f50:	4342      	muls	r2, r0
 8005f52:	2301      	movs	r3, #1
 8005f54:	1852      	adds	r2, r2, r1
 8005f56:	0035      	movs	r5, r6
 8005f58:	e7f1      	b.n	8005f3e <_svfiprintf_r+0x192>
 8005f5a:	ab07      	add	r3, sp, #28
 8005f5c:	9300      	str	r3, [sp, #0]
 8005f5e:	003a      	movs	r2, r7
 8005f60:	4b10      	ldr	r3, [pc, #64]	; (8005fa4 <_svfiprintf_r+0x1f8>)
 8005f62:	0021      	movs	r1, r4
 8005f64:	9803      	ldr	r0, [sp, #12]
 8005f66:	f7fe f8b9 	bl	80040dc <_printf_float>
 8005f6a:	9004      	str	r0, [sp, #16]
 8005f6c:	9b04      	ldr	r3, [sp, #16]
 8005f6e:	3301      	adds	r3, #1
 8005f70:	d1d3      	bne.n	8005f1a <_svfiprintf_r+0x16e>
 8005f72:	89bb      	ldrh	r3, [r7, #12]
 8005f74:	980d      	ldr	r0, [sp, #52]	; 0x34
 8005f76:	065b      	lsls	r3, r3, #25
 8005f78:	d400      	bmi.n	8005f7c <_svfiprintf_r+0x1d0>
 8005f7a:	e72e      	b.n	8005dda <_svfiprintf_r+0x2e>
 8005f7c:	2001      	movs	r0, #1
 8005f7e:	4240      	negs	r0, r0
 8005f80:	e72b      	b.n	8005dda <_svfiprintf_r+0x2e>
 8005f82:	ab07      	add	r3, sp, #28
 8005f84:	9300      	str	r3, [sp, #0]
 8005f86:	003a      	movs	r2, r7
 8005f88:	4b06      	ldr	r3, [pc, #24]	; (8005fa4 <_svfiprintf_r+0x1f8>)
 8005f8a:	0021      	movs	r1, r4
 8005f8c:	9803      	ldr	r0, [sp, #12]
 8005f8e:	f7fe fb5f 	bl	8004650 <_printf_i>
 8005f92:	e7ea      	b.n	8005f6a <_svfiprintf_r+0x1be>
 8005f94:	0800703c 	.word	0x0800703c
 8005f98:	08007042 	.word	0x08007042
 8005f9c:	08007046 	.word	0x08007046
 8005fa0:	080040dd 	.word	0x080040dd
 8005fa4:	08005ce9 	.word	0x08005ce9

08005fa8 <_sbrk_r>:
 8005fa8:	2300      	movs	r3, #0
 8005faa:	b570      	push	{r4, r5, r6, lr}
 8005fac:	4c06      	ldr	r4, [pc, #24]	; (8005fc8 <_sbrk_r+0x20>)
 8005fae:	0005      	movs	r5, r0
 8005fb0:	0008      	movs	r0, r1
 8005fb2:	6023      	str	r3, [r4, #0]
 8005fb4:	f7fc fb94 	bl	80026e0 <_sbrk>
 8005fb8:	1c43      	adds	r3, r0, #1
 8005fba:	d103      	bne.n	8005fc4 <_sbrk_r+0x1c>
 8005fbc:	6823      	ldr	r3, [r4, #0]
 8005fbe:	2b00      	cmp	r3, #0
 8005fc0:	d000      	beq.n	8005fc4 <_sbrk_r+0x1c>
 8005fc2:	602b      	str	r3, [r5, #0]
 8005fc4:	bd70      	pop	{r4, r5, r6, pc}
 8005fc6:	46c0      	nop			; (mov r8, r8)
 8005fc8:	200008ec 	.word	0x200008ec

08005fcc <__ascii_mbtowc>:
 8005fcc:	b082      	sub	sp, #8
 8005fce:	2900      	cmp	r1, #0
 8005fd0:	d100      	bne.n	8005fd4 <__ascii_mbtowc+0x8>
 8005fd2:	a901      	add	r1, sp, #4
 8005fd4:	1e10      	subs	r0, r2, #0
 8005fd6:	d006      	beq.n	8005fe6 <__ascii_mbtowc+0x1a>
 8005fd8:	2b00      	cmp	r3, #0
 8005fda:	d006      	beq.n	8005fea <__ascii_mbtowc+0x1e>
 8005fdc:	7813      	ldrb	r3, [r2, #0]
 8005fde:	600b      	str	r3, [r1, #0]
 8005fe0:	7810      	ldrb	r0, [r2, #0]
 8005fe2:	1e43      	subs	r3, r0, #1
 8005fe4:	4198      	sbcs	r0, r3
 8005fe6:	b002      	add	sp, #8
 8005fe8:	4770      	bx	lr
 8005fea:	2002      	movs	r0, #2
 8005fec:	4240      	negs	r0, r0
 8005fee:	e7fa      	b.n	8005fe6 <__ascii_mbtowc+0x1a>

08005ff0 <memmove>:
 8005ff0:	b510      	push	{r4, lr}
 8005ff2:	4288      	cmp	r0, r1
 8005ff4:	d902      	bls.n	8005ffc <memmove+0xc>
 8005ff6:	188b      	adds	r3, r1, r2
 8005ff8:	4298      	cmp	r0, r3
 8005ffa:	d303      	bcc.n	8006004 <memmove+0x14>
 8005ffc:	2300      	movs	r3, #0
 8005ffe:	e007      	b.n	8006010 <memmove+0x20>
 8006000:	5c8b      	ldrb	r3, [r1, r2]
 8006002:	5483      	strb	r3, [r0, r2]
 8006004:	3a01      	subs	r2, #1
 8006006:	d2fb      	bcs.n	8006000 <memmove+0x10>
 8006008:	bd10      	pop	{r4, pc}
 800600a:	5ccc      	ldrb	r4, [r1, r3]
 800600c:	54c4      	strb	r4, [r0, r3]
 800600e:	3301      	adds	r3, #1
 8006010:	429a      	cmp	r2, r3
 8006012:	d1fa      	bne.n	800600a <memmove+0x1a>
 8006014:	e7f8      	b.n	8006008 <memmove+0x18>

08006016 <__malloc_lock>:
 8006016:	4770      	bx	lr

08006018 <__malloc_unlock>:
 8006018:	4770      	bx	lr

0800601a <_realloc_r>:
 800601a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800601c:	0007      	movs	r7, r0
 800601e:	000d      	movs	r5, r1
 8006020:	0016      	movs	r6, r2
 8006022:	2900      	cmp	r1, #0
 8006024:	d105      	bne.n	8006032 <_realloc_r+0x18>
 8006026:	0011      	movs	r1, r2
 8006028:	f7ff fe00 	bl	8005c2c <_malloc_r>
 800602c:	0004      	movs	r4, r0
 800602e:	0020      	movs	r0, r4
 8006030:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8006032:	2a00      	cmp	r2, #0
 8006034:	d103      	bne.n	800603e <_realloc_r+0x24>
 8006036:	f7ff fdaf 	bl	8005b98 <_free_r>
 800603a:	0034      	movs	r4, r6
 800603c:	e7f7      	b.n	800602e <_realloc_r+0x14>
 800603e:	f000 f81e 	bl	800607e <_malloc_usable_size_r>
 8006042:	002c      	movs	r4, r5
 8006044:	42b0      	cmp	r0, r6
 8006046:	d2f2      	bcs.n	800602e <_realloc_r+0x14>
 8006048:	0031      	movs	r1, r6
 800604a:	0038      	movs	r0, r7
 800604c:	f7ff fdee 	bl	8005c2c <_malloc_r>
 8006050:	1e04      	subs	r4, r0, #0
 8006052:	d0ec      	beq.n	800602e <_realloc_r+0x14>
 8006054:	0029      	movs	r1, r5
 8006056:	0032      	movs	r2, r6
 8006058:	f7fd ff92 	bl	8003f80 <memcpy>
 800605c:	0029      	movs	r1, r5
 800605e:	0038      	movs	r0, r7
 8006060:	f7ff fd9a 	bl	8005b98 <_free_r>
 8006064:	e7e3      	b.n	800602e <_realloc_r+0x14>

08006066 <__ascii_wctomb>:
 8006066:	1e0b      	subs	r3, r1, #0
 8006068:	d004      	beq.n	8006074 <__ascii_wctomb+0xe>
 800606a:	2aff      	cmp	r2, #255	; 0xff
 800606c:	d904      	bls.n	8006078 <__ascii_wctomb+0x12>
 800606e:	238a      	movs	r3, #138	; 0x8a
 8006070:	6003      	str	r3, [r0, #0]
 8006072:	3b8b      	subs	r3, #139	; 0x8b
 8006074:	0018      	movs	r0, r3
 8006076:	4770      	bx	lr
 8006078:	700a      	strb	r2, [r1, #0]
 800607a:	2301      	movs	r3, #1
 800607c:	e7fa      	b.n	8006074 <__ascii_wctomb+0xe>

0800607e <_malloc_usable_size_r>:
 800607e:	1f0b      	subs	r3, r1, #4
 8006080:	681b      	ldr	r3, [r3, #0]
 8006082:	1f18      	subs	r0, r3, #4
 8006084:	2b00      	cmp	r3, #0
 8006086:	da01      	bge.n	800608c <_malloc_usable_size_r+0xe>
 8006088:	580b      	ldr	r3, [r1, r0]
 800608a:	18c0      	adds	r0, r0, r3
 800608c:	4770      	bx	lr
	...

08006090 <_init>:
 8006090:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8006092:	46c0      	nop			; (mov r8, r8)
 8006094:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8006096:	bc08      	pop	{r3}
 8006098:	469e      	mov	lr, r3
 800609a:	4770      	bx	lr

0800609c <_fini>:
 800609c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800609e:	46c0      	nop			; (mov r8, r8)
 80060a0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80060a2:	bc08      	pop	{r3}
 80060a4:	469e      	mov	lr, r3
 80060a6:	4770      	bx	lr
